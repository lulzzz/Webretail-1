{"version":3,"sources":["/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/$_gendir lazy","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/account/account.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/account/account.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/account/myinfo.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/account/myinfo.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/app.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/app.component.scss","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/app.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/app.module.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/app.routes.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/attribute/attribute.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/attribute/attribute.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/brand/brand.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/brand/brand.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/category/category.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/category/category.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/causal/causal.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/causal/causal.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/company/company.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/company/company.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/customer/customer.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/customer/customer.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/device/device.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/device/device.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/discount/discount.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/discount/discount.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/discount/discounts.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/discount/discounts.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/home/home.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/home/home.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/invoice/invoice.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/invoice/invoice.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/invoice/invoicedocument.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/invoice/invoicedocument.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/invoice/invoices.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/invoice/invoices.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/login/login.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/login/login.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/login/register.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/login/register.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/movement/document.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/movement/document.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/movement/movement.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/movement/movement.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/movement/movements.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/movement/movements.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/pipes/article-filter.pipe.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/pipes/articleinfo.pipe.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/pipes/category-filter.pipe.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/pipes/date-filter.pipe.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/pipes/period-filter.pipe.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/pipes/price-filter.pipe.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/import.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/import.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/product.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/product.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/products.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/products.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/publication.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/publication.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/stock.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/stock.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/report/receipts.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/report/receipts.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/report/sales.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/report/sales.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/report/statistics.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/report/statistics.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/account.service.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/attribute.service.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/brand.service.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/category.service.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/causal.service.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/company.service.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/customer.service.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/device.service.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/discount.service.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/import.service.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/invoice.service.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/movement.service.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/product.service.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/publication.service.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/session.service.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/statistic.service.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/store.service.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/article-picker.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/article-picker.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/footer.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/footer.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/helpers.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/models.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/movement-picker.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/movement-picker.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/navigation.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/navigation.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/product-picker.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/product-picker.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/store/store.component.html","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/store/store.component.ts","/Users/gerardo/Projects/github.com/Webretail/AdminUI/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"<p-confirmDialog header=\\\"Confirmation delete on cascade\\\" icon=\\\"fa-trash-o\\\" [responsive]=\\\"true\\\"></p-confirmDialog>\\n<img *ngIf=\\\"!accounts\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\">\\n            <button pButton type=\\\"button\\\" label=\\\"{{totalRecords}} items\\\" title=\\\"Add item\\\" (click)=\\\"addClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-plus\\\"></button>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\">\\n            <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n            <input #gb type=\\\"text\\\" pInputText placeholder=\\\"Search\\\" style=\\\"width: 180px\\\">\\n        </div>\\n    </p-toolbar>\\n\\n    <p-dataTable *ngIf=\\\"!displayPanel\\\" [responsive]=\\\"true\\\" [value]=\\\"accounts\\\"\\n        selectionMode=\\\"single\\\" [(selection)]=\\\"selected\\\" (onRowSelect)=\\\"onRowSelect($event)\\\"\\n        [paginator]=\\\"true\\\" [rows]=\\\"15\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinks]=\\\"5\\\"\\n        [globalFilter]=\\\"gb\\\" #dt>\\n        <p-column field=\\\"uniqueID\\\" header=\\\"Id\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"username\\\" header=\\\"Username\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"firstname\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"lastname\\\" header=\\\"Lastname\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"email\\\" header=\\\"Email\\\" [sortable]=\\\"true\\\"></p-column>\\n    </p-dataTable>\\n\\n    <p-panel *ngIf=\\\"displayPanel\\\">\\n        <p-header>\\n            <div class=\\\"ui-helper-clearfix\\\">\\n                <span class=\\\"ui-panel-title\\\" style=\\\"font-size:20px;display:inline-block;margin-top:6px\\\"><b>Account</b></span>\\n                <button pButton type=\\\"button\\\" label=\\\"Close\\\" (click)=\\\"closeClick()\\\" style=\\\"float: right\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-close\\\"></button>\\n            </div>\\n        </p-header>\\n        <form [formGroup]=\\\"dataform\\\">\\n            <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\" *ngIf=\\\"selected\\\">\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label>Id</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">{{selected.uniqueID}}</div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"firstname\\\">Firstname</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"firstname\\\" [(ngModel)]=\\\"selected.firstname\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['firstname'].valid&&dataform.controls['firstname'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Name is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"lastname\\\">Lastname</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"lastname\\\" [(ngModel)]=\\\"selected.lastname\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['lastname'].valid&&dataform.controls['lastname'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Lastname is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"email\\\">Email</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"email\\\" [(ngModel)]=\\\"selected.email\\\" type=\\\"email\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['email'].valid&&dataform.controls['email'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Email is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"username\\\">Username</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"username\\\" [(ngModel)]=\\\"selected.username\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['username'].valid&&dataform.controls['username'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Username is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"password\\\">Password</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"password\\\" [(ngModel)]=\\\"selected.password\\\" type=\\\"password\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['password'].valid&&dataform.controls['password'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i>\\n                            <span *ngIf=\\\"dataform.controls['password'].errors['required']\\\">Password is required</span>\\n                            <span *ngIf=\\\"dataform.controls['password'].errors['minlength']\\\">Must be longer than 6 characters</span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"isAdmin\\\">Administrator</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\"><p-inputSwitch onLabel=\\\"Yes\\\" offLabel=\\\"No\\\" formControlName=\\\"isAdmin\\\" [(ngModel)]=\\\"selected.isAdmin\\\"></p-inputSwitch></div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button *ngIf=\\\"selected.uniqueID!=''\\\" type=\\\"button\\\" pButton icon=\\\"fa-trash-o\\\" class=\\\"ui-button-secondary\\\" (click)=\\\"deleteClick()\\\" label=\\\"Delete\\\"></button>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\"></div>\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button type=\\\"button\\\" pButton icon=\\\"fa-save\\\" class=\\\"ui-button-success\\\" (click)=\\\"saveClick()\\\" label=\\\"Save\\\" [disabled]=\\\"!dataform.valid\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </p-panel>\\n </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/account/account.component.html\n// module id = ../../../../../src/app/account/account.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { ConfirmationService } from 'primeng/primeng';\nimport { SessionService } from './../services/session.service';\nimport { AccountService } from './../services/account.service';\nimport { Account } from './../shared/models';\nimport { Helpers } from './../shared/helpers';\n\n@Component({\n    selector: 'account-component',\n    templateUrl: 'account.component.html'\n})\n\nexport class AccountComponent implements OnInit {\n    totalRecords = 0;\n    accounts: Account[];\n    selected: Account;\n    displayPanel: boolean;\n    dataform: FormGroup;\n\n    constructor(private sessionService: SessionService,\n                private accountService: AccountService,\n                private confirmationService: ConfirmationService,\n                private fb: FormBuilder) {\n       sessionService.title = 'Accounts';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(true);\n\n        this.dataform = this.fb.group({\n            'firstname': new FormControl('', Validators.required),\n            'lastname': new FormControl('', Validators.required),\n            'email': new FormControl('', Validators.required),\n            'username': new FormControl('', Validators.required),\n            'password': new FormControl('', Validators.compose([Validators.required, Validators.minLength(6)])),\n            'isAdmin': new FormControl('', Validators.required),\n        });\n\n        this.accountService.getAll()\n            .subscribe(result => {\n                this.accounts = result;\n                this.totalRecords = this.accounts.length;\n            }, onerror => alert(onerror._body)\n        );\n    }\n\n    get isNew(): boolean { return this.selected == null || this.selected.uniqueID === ''; }\n\n    get selectedIndex(): number { return this.accounts.indexOf(this.selected); }\n\n    onRowSelect(event: any) {\n        this.displayPanel = true;\n    }\n\n    closeClick() {\n        this.displayPanel = false;\n        this.selected = null;\n    }\n\n    addClick() {\n        this.selected = new Account();\n        this.displayPanel = true;\n    }\n\n    saveClick() {\n        if (this.isNew) {\n            this.accountService\n                .create(this.selected)\n                .subscribe(result => {\n                    this.accounts.push(result);\n                    this.totalRecords++;\n                   this.closeClick();\n                }, onerror => alert(onerror._body));\n        } else {\n            this.accountService\n                .update(this.selected.uniqueID, this.selected)\n                .subscribe(result => {\n                    this.closeClick();\n                }, onerror => alert(onerror._body));\n        }\n    }\n\n    deleteClick() {\n        this.confirmationService.confirm({\n            message: 'Are you sure that you want to delete this account?',\n            accept: () => {\n                this.accountService\n                    .delete(this.selected.uniqueID)\n                    .subscribe(result => {\n                        this.accounts.splice(this.selectedIndex, 1);\n                        this.totalRecords--;\n                        this.closeClick();\n                    }, onerror => alert(onerror._body));\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/account/account.component.ts","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n    <form [formGroup]=\\\"dataform\\\">\\n        <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\" *ngIf=\\\"myinfo\\\">\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label>{{myinfo.isAdmin ? 'Administrator' : 'User'}}</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">{{myinfo.uniqueID}}</div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"firstname\\\">Firstname</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"firstname\\\" [(ngModel)]=\\\"myinfo.firstname\\\"/>\\n                    <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['firstname'].valid&&dataform.controls['firstname'].dirty\\\">\\n                        <i class=\\\"fa fa-close\\\"></i> Name is required\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"lastname\\\">Lastname</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"lastname\\\" [(ngModel)]=\\\"myinfo.lastname\\\"/>\\n                    <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['lastname'].valid&&dataform.controls['lastname'].dirty\\\">\\n                        <i class=\\\"fa fa-close\\\"></i> Lastname is required\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"email\\\">Email</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"email\\\" [(ngModel)]=\\\"myinfo.email\\\" type=\\\"email\\\"/>\\n                    <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['email'].valid&&dataform.controls['email'].dirty\\\">\\n                        <i class=\\\"fa fa-close\\\"></i> Email is required\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-12\\\"><h3>Authentication</h3></div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"username\\\">Username</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"username\\\" [(ngModel)]=\\\"myinfo.username\\\"/>\\n                    <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['username'].valid&&dataform.controls['username'].dirty\\\">\\n                        <i class=\\\"fa fa-close\\\"></i> Username is required\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"password\\\">Password</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"password\\\" [(ngModel)]=\\\"myinfo.password\\\" type=\\\"password\\\"/>\\n                    <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['password'].valid&&dataform.controls['password'].dirty\\\">\\n                        <i class=\\\"fa fa-close\\\"></i>\\n                        <span *ngIf=\\\"dataform.controls['password'].errors['required']\\\">Password is required</span>\\n                        <span *ngIf=\\\"dataform.controls['password'].errors['minlength']\\\">Must be longer than 6 characters</span>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label>Facebook</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">{{myinfo.facebookID}}</div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label>Google</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">{{myinfo.googleID}}</div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-8\\\"></div>\\n                <div class=\\\"ui-grid-col-4\\\">\\n                    <button type=\\\"button\\\" pButton icon=\\\"fa-save\\\" (click)=\\\"saveClick()\\\" label=\\\"Save\\\" [disabled]=\\\"!dataform.valid\\\"></button>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/account/myinfo.component.html\n// module id = ../../../../../src/app/account/myinfo.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { SessionService } from './../services/session.service';\nimport { AccountService } from './../services/account.service';\nimport { Account } from './../shared/models';\n\n@Component({\n    selector: 'myinfo-component',\n    templateUrl: 'myinfo.component.html'\n})\n\nexport class MyInfoComponent implements OnInit {\n    public myinfo: Account;\n    dataform: FormGroup;\n\n    constructor(private sessionService: SessionService,\n                private accountService: AccountService,\n                private fb: FormBuilder) {\n       sessionService.title = 'My Info';\n    }\n\n    ngOnInit() {\n        this.sessionService.getCredentials()\n            .subscribe(p => {\n                this.accountService.getById(p.uniqueID)\n                    .subscribe(account => {\n                        this.myinfo = account;\n                    });\n            }, onerror => alert(onerror));\n\n        this.dataform = this.fb.group({\n            'firstname': new FormControl('', Validators.required),\n            'lastname': new FormControl('', Validators.required),\n            'email': new FormControl('', Validators.required),\n            'username': new FormControl('', Validators.required),\n            'password': new FormControl('', Validators.compose([Validators.required, Validators.minLength(6)]))\n        });\n    }\n\n    saveClick() {\n        this.accountService\n            .update(this.myinfo.uniqueID, this.myinfo)\n            .subscribe(result => { });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/account/myinfo.component.ts","module.exports = \"<navigation></navigation>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <router-outlet></router-outlet>\\r\\n\\r\\n    <customfooter></customfooter>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-component',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\n\r\nexport class AppComponent { }\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/app.component.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpModule } from '@angular/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n    DataTableModule, SharedModule, PaginatorModule,\r\n    MultiSelectModule, DropdownModule, SliderModule,\r\n    ConfirmDialogModule, ConfirmationService, ToolbarModule,\r\n    TreeModule, ButtonModule, InputTextModule, InputSwitchModule,\r\n    PanelModule, SplitButtonModule, PickListModule, GrowlModule,\r\n    SelectButtonModule, ChipsModule, InputTextareaModule,\r\n    ContextMenuModule, TooltipModule, CalendarModule,\r\n    FileUploadModule, ChartModule, CarouselModule,\r\n    SpinnerModule, StepsModule\r\n} from 'primeng/primeng';\r\n\r\nimport { AppRoutes } from './app.routes';\r\nimport { AppComponent } from './app.component';\r\nimport { NavigationComponent } from './shared/navigation.component';\r\nimport { FooterComponent } from './shared/footer.component';\r\nimport { ArticlePickerComponent } from './shared/article-picker.component';\r\nimport { ProductPickerComponent } from './shared/product-picker.component';\r\nimport { MovementPickerComponent } from './shared/movement-picker.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CompanyComponent } from './company/company.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './login/register.component';\r\nimport { AccountComponent } from './account/account.component';\r\nimport { MyInfoComponent } from './account/myinfo.component';\r\nimport { AttributeComponent } from './attribute/attribute.component';\r\nimport { BrandComponent } from './brand/brand.component';\r\nimport { CategoryComponent } from './category/category.component';\r\nimport { CausalComponent } from './causal/causal.component';\r\nimport { CustomerComponent } from './customer/customer.component';\r\nimport { StoreComponent } from './store/store.component';\r\nimport { ProductsComponent } from './product/products.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { ImportComponent } from './product/import.component';\r\nimport { StockComponent } from './product/stock.component';\r\nimport { PublicationComponent } from './product/publication.component';\r\nimport { MovementsComponent } from './movement/movements.component';\r\nimport { MovementComponent } from './movement/movement.component';\r\nimport { DocumentComponent } from './movement/document.component';\r\nimport { DiscountsComponent } from './discount/discounts.component';\r\nimport { DiscountComponent } from './discount/discount.component';\r\nimport { InvoicesComponent } from './invoice/invoices.component';\r\nimport { InvoiceComponent } from './invoice/invoice.component';\r\nimport { InvoiceDocumentComponent } from './invoice/invoicedocument.component';\r\nimport { DeviceComponent } from './device/device.component';\r\nimport { ReportReceiptsComponent } from './report/receipts.component';\r\nimport { ReportSalesComponent } from './report/sales.component';\r\nimport { StatisticsComponent } from './report/statistics.component';\r\n\r\nimport { SessionService } from './services/session.service';\r\nimport { CompanyService } from './services/company.service';\r\nimport { AccountService } from './services/account.service';\r\nimport { AttributeService } from './services/attribute.service';\r\nimport { BrandService } from './services/brand.service';\r\nimport { CategoryService } from './services/category.service';\r\nimport { CausalService } from './services/causal.service';\r\nimport { CustomerService } from './services/customer.service';\r\nimport { StoreService } from './services/store.service';\r\nimport { DeviceService } from './services/device.service';\r\nimport { ProductService } from './services/product.service';\r\nimport { MovementService } from './services/movement.service';\r\nimport { DiscountService } from './services/discount.service';\r\nimport { InvoiceService } from './services/invoice.service';\r\nimport { StatisticService } from './services/statistic.service';\r\nimport { PublicationService } from './services/publication.service';\r\nimport { ImportService } from './services/import.service';\r\n\r\nimport { CategoryFilterPipe } from './pipes/category-filter.pipe';\r\nimport { PriceFilterPipe } from './pipes/price-filter.pipe';\r\nimport { ArticleInfoPipe } from './pipes/articleinfo.pipe';\r\nimport { ArticleFilterPipe } from './pipes/article-filter.pipe';\r\nimport { DateFilterPipe } from './pipes/date-filter.pipe';\r\nimport { PeriodFilterPipe } from './pipes/period-filter.pipe';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule, RouterModule, HttpModule, BrowserModule, BrowserAnimationsModule,\r\n        FormsModule, ReactiveFormsModule,\r\n        DataTableModule, SharedModule, PaginatorModule,\r\n        MultiSelectModule, DropdownModule, SliderModule, TreeModule,\r\n        ButtonModule, InputTextModule, InputSwitchModule,\r\n        PanelModule, SplitButtonModule, PickListModule, GrowlModule,\r\n        ConfirmDialogModule, ToolbarModule, SelectButtonModule,\r\n        ChipsModule, InputTextareaModule, FileUploadModule,\r\n        ContextMenuModule, TooltipModule, CalendarModule, ChartModule,\r\n        CarouselModule, SpinnerModule, StepsModule,\r\n        AppRoutes\r\n    ],\r\n    declarations: [\r\n        CategoryFilterPipe,\r\n        PriceFilterPipe,\r\n        ArticleInfoPipe,\r\n        ArticleFilterPipe,\r\n        DateFilterPipe,\r\n        PeriodFilterPipe,\r\n        AppComponent,\r\n        NavigationComponent,\r\n        FooterComponent,\r\n        ArticlePickerComponent,\r\n        ProductPickerComponent,\r\n        MovementPickerComponent,\r\n        HomeComponent,\r\n        CompanyComponent,\r\n        LoginComponent,\r\n        RegisterComponent,\r\n        AccountComponent,\r\n        MyInfoComponent,\r\n        AttributeComponent,\r\n        BrandComponent,\r\n        CategoryComponent,\r\n        CausalComponent,\r\n        CustomerComponent,\r\n        StoreComponent,\r\n        ProductsComponent,\r\n        ProductComponent,\r\n        StockComponent,\r\n        PublicationComponent,\r\n        MovementsComponent,\r\n        MovementComponent,\r\n        DocumentComponent,\r\n        DiscountsComponent,\r\n        DiscountComponent,\r\n        InvoicesComponent,\r\n        InvoiceComponent,\r\n        InvoiceDocumentComponent,\r\n        DeviceComponent,\r\n        ReportReceiptsComponent,\r\n        ReportSalesComponent,\r\n        StatisticsComponent,\r\n        ImportComponent\r\n    ],\r\n    providers: [\r\n        SessionService,\r\n        CompanyService,\r\n        AccountService,\r\n        AttributeService,\r\n        BrandService,\r\n        CategoryService,\r\n        CausalService,\r\n        CustomerService,\r\n        StoreService,\r\n        DeviceService,\r\n        ProductService,\r\n        MovementService,\r\n        DiscountService,\r\n        InvoiceService,\r\n        ConfirmationService,\r\n        StatisticService,\r\n        PublicationService,\r\n        ImportService\r\n    ],\r\n    exports: [\r\n        ArticlePickerComponent,\r\n        ProductPickerComponent,\r\n        MovementPickerComponent,\r\n        CategoryFilterPipe,\r\n        PriceFilterPipe,\r\n        ArticleInfoPipe,\r\n        ArticleFilterPipe,\r\n        DateFilterPipe,\r\n        PeriodFilterPipe\r\n    ],\r\n    bootstrap: [AppComponent],\r\n})\r\n\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/app.module.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CompanyComponent } from './company/company.component';\r\nimport { LoginComponent } from './login/login.component';\r\n// import { RegisterComponent } from './login/register.component';\r\nimport { AccountComponent } from './account/account.component';\r\nimport { MyInfoComponent } from './account/myinfo.component';\r\nimport { AttributeComponent } from './attribute/attribute.component';\r\nimport { BrandComponent } from './brand/brand.component';\r\nimport { CategoryComponent } from './category/category.component';\r\nimport { CausalComponent } from './causal/causal.component';\r\nimport { CustomerComponent } from './customer/customer.component';\r\nimport { StoreComponent } from './store/store.component';\r\nimport { ProductsComponent } from './product/products.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { ImportComponent } from './product/import.component';\r\nimport { StockComponent } from './product/stock.component';\r\nimport { PublicationComponent } from './product/publication.component';\r\nimport { MovementsComponent } from './movement/movements.component';\r\nimport { MovementComponent } from './movement/movement.component';\r\nimport { DocumentComponent } from './movement/document.component';\r\nimport { DiscountsComponent } from './discount/discounts.component';\r\nimport { DiscountComponent } from './discount/discount.component';\r\nimport { InvoicesComponent } from './invoice/invoices.component';\r\nimport { InvoiceComponent } from './invoice/invoice.component';\r\nimport { InvoiceDocumentComponent } from './invoice/invoicedocument.component';\r\nimport { DeviceComponent } from './device/device.component';\r\nimport { ReportReceiptsComponent } from './report/receipts.component';\r\nimport { ReportSalesComponent } from './report/sales.component';\r\nimport { StatisticsComponent } from './report/statistics.component';\r\n\r\nexport const routes: Routes = [\r\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n    { path: 'home', component: HomeComponent },\r\n    { path: 'company', component: CompanyComponent },\r\n    { path: 'login', component: LoginComponent },\r\n    // { path: 'login/register', component: RegisterComponent },\r\n    { path: 'account', component: AccountComponent },\r\n    { path: 'myinfo', component: MyInfoComponent },\r\n    { path: 'store', component: StoreComponent },\r\n    { path: 'brand', component: BrandComponent },\r\n    { path: 'category', component: CategoryComponent },\r\n    { path: 'attribute', component: AttributeComponent },\r\n    { path: 'causal', component: CausalComponent },\r\n    { path: 'customer', component: CustomerComponent },\r\n    { path: 'product', component: ProductsComponent },\r\n    { path: 'product/:id', component: ProductComponent },\r\n    { path: 'product/:id/stock', component: StockComponent },\r\n    { path: 'product/:id/publication', component: PublicationComponent },\r\n    { path: 'movement', component: MovementsComponent },\r\n    { path: 'movement/:id', component: MovementComponent },\r\n    { path: 'movement/document/:id', component: DocumentComponent },\r\n    { path: 'discount', component: DiscountsComponent },\r\n    { path: 'discount/:id', component: DiscountComponent },\r\n    { path: 'invoice', component: InvoicesComponent },\r\n    { path: 'invoice/:id', component: InvoiceComponent },\r\n    { path: 'invoice/document/:id', component: InvoiceDocumentComponent },\r\n    { path: 'device', component: DeviceComponent },\r\n    { path: 'report/receipts', component: ReportReceiptsComponent },\r\n    { path: 'report/sales', component: ReportSalesComponent },\r\n    { path: 'report/statistics', component: StatisticsComponent },\r\n    { path: 'import', component: ImportComponent }\r\n];\r\n\r\nexport const AppRoutes = RouterModule.forRoot(routes);\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/app.routes.ts","module.exports = \"<p-confirmDialog header=\\\"Confirmation delete on cascade\\\" icon=\\\"fa-trash-o\\\" [responsive]=\\\"true\\\"></p-confirmDialog>\\n<img *ngIf=\\\"!attributes||selected&&selected.attributeId>0&&!values\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n     <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\">\\n            <button pButton type=\\\"button\\\" label=\\\"{{totalRecords}} items\\\" title=\\\"Add item\\\" (click)=\\\"addClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-plus\\\"></button>\\n            <button pButton type=\\\"button\\\" label=\\\"Edit\\\" title=\\\"Edit item\\\" (click)=\\\"editClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-edit\\\"></button>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\">\\n            <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n            <input #gb type=\\\"text\\\" pInputText placeholder=\\\"Search\\\" style=\\\"width: 180px\\\">\\n        </div>\\n    </p-toolbar>\\n\\n    <p-dataTable *ngIf=\\\"!displayPanel\\\" [responsive]=\\\"true\\\" [value]=\\\"attributes\\\"\\n        selectionMode=\\\"single\\\" [(selection)]=\\\"selected\\\" (onRowSelect)=\\\"onRowSelect($event)\\\"\\n        [globalFilter]=\\\"gb\\\" #dt>\\n        <p-column field=\\\"attributeId\\\" header=\\\"Id\\\" [style]=\\\"{'width':'10%'}\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"attributeName\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\"></p-column>\\n    </p-dataTable>\\n\\n    <p-panel *ngIf=\\\"displayPanel\\\">\\n        <p-header>\\n            <div class=\\\"ui-helper-clearfix\\\">\\n                <span class=\\\"ui-panel-title\\\" style=\\\"font-size:20px;display:inline-block;margin-top:6px\\\"><b>Attribute</b></span>\\n                <button pButton type=\\\"button\\\" label=\\\"Close\\\" (click)=\\\"closeClick()\\\" style=\\\"float: right\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-close\\\"></button>\\n            </div>\\n        </p-header>\\n        <form [formGroup]=\\\"dataform\\\">\\n            <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\" *ngIf=\\\"selected\\\">\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label>Id</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">{{selected.attributeId}}</div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"name\\\">Name</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"name\\\" [(ngModel)]=\\\"selected.attributeName\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['name'].valid&&dataform.controls['name'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Name is required\\n                        </div>\\n                </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button *ngIf=\\\"selected.attributeId>0\\\" type=\\\"button\\\" pButton icon=\\\"fa-trash-o\\\" class=\\\"ui-button-secondary\\\" (click)=\\\"deleteClick()\\\" label=\\\"Delete\\\"></button>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\"></div>\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button type=\\\"button\\\" pButton icon=\\\"fa-save\\\" (click)=\\\"saveClick()\\\" label=\\\"Save\\\" [disabled]=\\\"!dataform.valid\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </p-panel>\\n    \\n</div>\\n<br>\\n<div class=\\\"container-fluid\\\">\\n    \\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\">\\n            <button pButton type=\\\"button\\\" label=\\\"{{totalValues}} values\\\" title=\\\"Add value\\\" (click)=\\\"addValueClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-plus\\\"></button>\\n        </div>\\n    </p-toolbar>\\n\\n    <p-dataTable *ngIf=\\\"!displayPanelValue\\\" [responsive]=\\\"true\\\" [value]=\\\"values\\\"\\n        selectionMode=\\\"single\\\" [(selection)]=\\\"selectedValue\\\" (onRowSelect)=\\\"onRowValueSelect($event)\\\"\\n        [globalFilter]=\\\"gb\\\" #dt>\\n        <p-column field=\\\"attributeValueId\\\" header=\\\"Id\\\" [style]=\\\"{'width':'100px'}\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"attributeValueCode\\\" header=\\\"Code\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"attributeValueName\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\"></p-column>\\n    </p-dataTable>\\n\\n    <p-panel *ngIf=\\\"displayPanelValue\\\">\\n        <p-header>\\n            <div class=\\\"ui-helper-clearfix\\\">\\n                <span class=\\\"ui-panel-title\\\" style=\\\"font-size:20px;display:inline-block;margin-top:6px\\\"><b>Attribute Value</b></span>\\n                <button pButton type=\\\"button\\\" label=\\\"Close\\\" (click)=\\\"closeValueClick()\\\" style=\\\"float: right\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-close\\\"></button>\\n            </div>\\n        </p-header>\\n        <form [formGroup]=\\\"dataformValue\\\">\\n            <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label>Id</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">{{selectedValue.attributeValueId}}</div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"id\\\">Attribute</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">{{selected.attributeName}}</div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"code\\\">Code</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"code\\\" [(ngModel)]=\\\"selectedValue.attributeValueCode\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataformValue.controls['code'].valid&&dataformValue.controls['code'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i>\\n                            <span *ngIf=\\\"dataformValue.controls['code'].errors['required']\\\">Code is required</span>\\n                            <span *ngIf=\\\"dataformValue.controls['code'].errors['maxlength']\\\">Must be shorter than 6 characters</span>\\n                        </div>\\n                </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"name\\\">Name</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"name\\\" [(ngModel)]=\\\"selectedValue.attributeValueName\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataformValue.controls['name'].valid&&dataformValue.controls['name'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Name is required\\n                        </div>\\n                </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button *ngIf=\\\"selectedValue.attributeValueId>0\\\" type=\\\"button\\\" pButton icon=\\\"fa-trash-o\\\" class=\\\"ui-button-secondary\\\" (click)=\\\"deleteValueClick()\\\" label=\\\"Delete\\\"></button>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\"></div>\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button type=\\\"button\\\" pButton icon=\\\"fa-save\\\" (click)=\\\"saveValueClick()\\\" label=\\\"Save\\\" [disabled]=\\\"!dataformValue.valid\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </p-panel>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/attribute/attribute.component.html\n// module id = ../../../../../src/app/attribute/attribute.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { ConfirmationService } from 'primeng/primeng';\nimport { SessionService } from './../services/session.service';\nimport { AttributeService } from './../services/attribute.service';\nimport { Attribute, AttributeValue } from './../shared/models';\nimport { Helpers } from './../shared/helpers';\n\n@Component({\n    selector: 'attribute-component',\n    templateUrl: 'attribute.component.html'\n})\n\nexport class AttributeComponent implements OnInit {\n    totalRecords = 0;\n    totalValues = 0;\n    attributes: Attribute[];\n    values: AttributeValue[];\n    selected: Attribute;\n    selectedValue: AttributeValue;\n    displayPanel: boolean;\n    displayPanelValue: boolean;\n    dataform: FormGroup;\n    dataformValue: FormGroup;\n\n    constructor(private sessionService: SessionService,\n                private attributeService: AttributeService,\n                private confirmationService: ConfirmationService,\n                private fb: FormBuilder) {\n        sessionService.title = 'Attributes';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        this.dataform = this.fb.group({\n            'name': new FormControl('', Validators.required)\n        });\n\n        this.dataformValue = this.fb.group({\n            'code': new FormControl('', [Validators.required, Validators.maxLength(6)]),\n            'name': new FormControl('', Validators.required)\n        });\n\n        this.attributeService\n            .getAll()\n            .subscribe(result => {\n                this.attributes = result;\n                this.totalRecords = this.attributes.length;\n            }\n        );\n    }\n\n    get isNew(): boolean { return this.selected == null || this.selected.attributeId === 0; }\n\n    get isNewValue(): boolean { return this.selectedValue == null || this.selectedValue.attributeValueId === 0; }\n\n    get selectedIndex(): number { return this.attributes.indexOf(this.selected); }\n\n    get selectedValueIndex(): number { return this.values.indexOf(this.selectedValue); }\n\n    onRowSelect(event: any) {\n        this.values = null;\n        this.attributeService\n            .getValueByAttributeId(this.selected.attributeId)\n            .subscribe(result => {\n                this.values = result;\n                this.totalValues = this.values.length;\n            }, onerror => alert(onerror._body));\n    }\n\n    addClick() {\n        this.selected = new Attribute(0, '', []);\n        this.displayPanel = true;\n    }\n\n    editClick() {\n        this.displayPanel = true;\n    }\n\n    closeClick() {\n        this.displayPanel = false;\n    }\n\n    saveClick() {\n        if (this.isNew) {\n            this.attributeService\n                .create(this.selected)\n                .subscribe(result => {\n                    this.attributes.push(result);\n                    this.displayPanel = false;\n                }, onerror => alert(onerror._body));\n        } else {\n            this.attributeService\n                .update(this.selected.attributeId, this.selected)\n                .subscribe(result => {\n                    this.displayPanel = false;\n                }, onerror => alert(onerror._body));\n        }\n    }\n\n    deleteClick() {\n        this.confirmationService.confirm({\n            message: 'All values of this attribute and related articles will be deleted. Are you sure that you want to delete this attribute?',\n            accept: () => {\n                this.attributeService\n                    .delete(this.selected.attributeId)\n                    .subscribe(result => {\n                        this.attributes.splice(this.selectedIndex, 1);\n                        this.totalRecords--;\n                        this.selected = null;\n                        this.values.length = 0;\n                        this.displayPanel = false;\n                    }, onerror => alert(onerror._body));\n            }\n        });\n    }\n\n    onRowValueSelect(event: any) {\n        this.displayPanelValue = true;\n    }\n\n    addValueClick() {\n        if (this.selected && this.selected.attributeId > 0) {\n            this.selectedValue = new AttributeValue(this.selected.attributeId, 0, '', '', []);\n            this.displayPanelValue = true;\n        } else {\n            alert('Select a attribute before add value!');\n        }\n    }\n\n    editValueClick() {\n        this.displayPanelValue = true;\n    }\n\n    closeValueClick() {\n        this.displayPanelValue = false;\n        this.selectedValue = null;\n    }\n\n    saveValueClick() {\n        if (this.isNewValue) {\n            this.attributeService\n                .createValue(this.selectedValue)\n                .subscribe(result => {\n                    this.values.push(result);\n                    this.closeValueClick();\n                }, onerror => alert(onerror._body));\n        } else {\n            this.attributeService\n                .updateValue(this.selectedValue.attributeValueId, this.selectedValue)\n                .subscribe(result => {\n                    this.closeValueClick();\n                }, onerror => alert(onerror._body));\n        }\n    }\n\n    deleteValueClick() {\n        this.confirmationService.confirm({\n            message: 'All related articles of this attribute value will be deleted. Are you sure that you want to delete this attribute value?',\n            accept: () => {\n                this.attributeService\n                    .deleteValue(this.selectedValue.attributeValueId)\n                    .subscribe(result => {\n                        this.values.splice(this.selectedValueIndex, 1);\n                        this.totalValues--;\n                        this.closeValueClick();\n                    }, onerror => alert(onerror._body));\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/attribute/attribute.component.ts","module.exports = \"<p-confirmDialog header=\\\"Confirmation delete on cascade\\\" icon=\\\"fa-trash-o\\\" [responsive]=\\\"true\\\"></p-confirmDialog>\\n<img *ngIf=\\\"!brands\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\">\\n            <button pButton type=\\\"button\\\" label=\\\"{{totalRecords}} items\\\" title=\\\"Add item\\\" (click)=\\\"addClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-plus\\\"></button>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\">\\n            <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n            <input #gb type=\\\"text\\\" pInputText placeholder=\\\"Search\\\" style=\\\"width: 180px\\\">\\n        </div>\\n    </p-toolbar>\\n\\n    <p-dataTable *ngIf=\\\"!displayPanel\\\" [responsive]=\\\"true\\\" [value]=\\\"brands\\\"\\n        selectionMode=\\\"single\\\" [(selection)]=\\\"selected\\\" (onRowSelect)=\\\"onRowSelect($event)\\\"\\n        [paginator]=\\\"true\\\" [rows]=\\\"15\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinks]=\\\"5\\\"\\n        [globalFilter]=\\\"gb\\\" #dt>\\n        <p-column field=\\\"brandId\\\" header=\\\"Id\\\" [style]=\\\"{'width':'100px'}\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"brandName\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\"></p-column>\\n    </p-dataTable>\\n\\n    <p-panel *ngIf=\\\"displayPanel\\\">\\n        <p-header>\\n            <div class=\\\"ui-helper-clearfix\\\">\\n                <span class=\\\"ui-panel-title\\\" style=\\\"font-size:20px;display:inline-block;margin-top:6px\\\"><b>Brand</b></span>\\n                <button pButton type=\\\"button\\\" label=\\\"Close\\\" (click)=\\\"closeClick()\\\" style=\\\"float: right\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-close\\\"></button>\\n            </div>\\n        </p-header>\\n        <form [formGroup]=\\\"dataform\\\">\\n            <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label>Id</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">{{selected.brandId}}</div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"name\\\">Name</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"name\\\" [(ngModel)]=\\\"selected.brandName\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['name'].valid&&dataform.controls['name'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Name is required\\n                        </div>\\n                </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button *ngIf=\\\"selected.brandId>0\\\" type=\\\"button\\\" pButton icon=\\\"fa-trash-o\\\" class=\\\"ui-button-secondary\\\" (click)=\\\"deleteClick()\\\" label=\\\"Delete\\\"></button>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\"></div>\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button type=\\\"button\\\" pButton icon=\\\"fa-save\\\" class=\\\"ui-button-success\\\" (click)=\\\"saveClick()\\\" label=\\\"Save\\\" [disabled]=\\\"!dataform.valid\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </p-panel>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/brand/brand.component.html\n// module id = ../../../../../src/app/brand/brand.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { ConfirmationService } from 'primeng/primeng';\nimport { SessionService } from './../services/session.service';\nimport { BrandService } from './../services/brand.service';\nimport { Brand } from './../shared/models';\nimport { Helpers } from './../shared/helpers';\n\n@Component({\n    selector: 'brand-component',\n    templateUrl: 'brand.component.html'\n})\n\nexport class BrandComponent implements OnInit {\n    totalRecords = 0;\n    brands: Brand[];\n    selected: Brand;\n    displayPanel: boolean;\n    dataform: FormGroup;\n\n    constructor(private sessionService: SessionService,\n                private brandService: BrandService,\n                private confirmationService: ConfirmationService,\n                private fb: FormBuilder) {\n       sessionService.title = 'Brands';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        this.dataform = this.fb.group({\n            'name': new FormControl('', Validators.required)\n        });\n\n        this.brandService\n            .getAll()\n            .subscribe(result => {\n                this.brands = result;\n                this.totalRecords = this.brands.length;\n            }, onerror => alert(onerror._body)\n        );\n    }\n\n    get isNew(): boolean { return this.selected == null || this.selected.brandId === 0; }\n\n    get selectedIndex(): number { return this.brands.indexOf(this.selected); }\n\n    addClick() {\n        this.selected = new Brand();\n        this.displayPanel = true;\n    }\n\n    onRowSelect(event: any) {\n        this.displayPanel = true;\n    }\n\n    closeClick() {\n        this.displayPanel = false;\n        this.selected = null;\n    }\n\n    saveClick() {\n        if (this.isNew) {\n            this.brandService\n                .create(this.selected)\n                .subscribe(result => {\n                    this.brands.push(result);\n                    this.totalRecords++;\n                    this.closeClick();\n                }, onerror => alert(onerror._body));\n        } else {\n            this.brandService\n                .update(this.selected.brandId, this.selected)\n                .subscribe(result => {\n                    this.closeClick();\n                }, onerror => alert(onerror._body));\n        }\n    }\n\n    deleteClick() {\n        this.confirmationService.confirm({\n            message: 'All related products will be deleted. Are you sure that you want to delete this brand?',\n            accept: () => {\n                this.brandService\n                    .delete(this.selected.brandId)\n                    .subscribe(result => {\n                        this.brands.splice(this.selectedIndex, 1);\n                        this.totalRecords--;\n                        this.closeClick();\n                    }, onerror => alert(onerror._body));\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/brand/brand.component.ts","module.exports = \"<p-confirmDialog header=\\\"Confirmation delete on cascade\\\" icon=\\\"fa-trash-o\\\" [responsive]=\\\"true\\\"></p-confirmDialog>\\n<img *ngIf=\\\"!categories\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\">\\n            <button pButton type=\\\"button\\\" label=\\\"{{totalRecords}} items\\\" title=\\\"Add item\\\" (click)=\\\"addClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-plus\\\"></button>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\">\\n            <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n            <input #gb type=\\\"text\\\" pInputText placeholder=\\\"Search\\\" style=\\\"width: 180px\\\">\\n        </div>\\n    </p-toolbar>\\n\\n    <p-dataTable *ngIf=\\\"!displayPanel\\\" [responsive]=\\\"true\\\" [value]=\\\"categories\\\"\\n        selectionMode=\\\"single\\\" [(selection)]=\\\"selected\\\" (onRowSelect)=\\\"onRowSelect($event)\\\"\\n        [paginator]=\\\"true\\\" [rows]=\\\"15\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinks]=\\\"5\\\"\\n        [globalFilter]=\\\"gb\\\" #dt>\\n        <p-column field=\\\"categoryId\\\" header=\\\"Id\\\" [style]=\\\"{'width':'100px'}\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"categoryName\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"categoryIsPrimary\\\" header=\\\"Primary\\\" [sortable]=\\\"true\\\"></p-column>\\n    </p-dataTable>\\n\\n    <p-panel *ngIf=\\\"displayPanel\\\">\\n        <p-header>\\n            <div class=\\\"ui-helper-clearfix\\\">\\n                <span class=\\\"ui-panel-title\\\" style=\\\"font-size:20px;display:inline-block;margin-top:6px\\\"><b>Category</b></span>\\n                <button pButton type=\\\"button\\\" label=\\\"Close\\\" (click)=\\\"closeClick()\\\" style=\\\"float: right\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-close\\\"></button>\\n            </div>\\n        </p-header>\\n        <form [formGroup]=\\\"dataform\\\">\\n            <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label>Id</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">{{selected.categoryId}}</div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"name\\\">Name</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"name\\\" [(ngModel)]=\\\"selected.categoryName\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['name'].valid&&dataform.controls['name'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Name is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"isPrimary\\\">Primary</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\"><p-inputSwitch onLabel=\\\"Yes\\\" offLabel=\\\"No\\\" formControlName=\\\"isPrimary\\\" [(ngModel)]=\\\"selected.categoryIsPrimary\\\"></p-inputSwitch></div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button *ngIf=\\\"selected.categoryId>0\\\" type=\\\"button\\\" pButton icon=\\\"fa-trash-o\\\" class=\\\"ui-button-secondary\\\" (click)=\\\"deleteClick()\\\" label=\\\"Delete\\\"></button>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\"></div>\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button type=\\\"button\\\" pButton icon=\\\"fa-save\\\" (click)=\\\"saveClick()\\\" label=\\\"Save\\\" [disabled]=\\\"!dataform.valid\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </p-panel>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/category/category.component.html\n// module id = ../../../../../src/app/category/category.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { ConfirmationService } from 'primeng/primeng';\nimport { SessionService } from './../services/session.service';\nimport { CategoryService } from './../services/category.service';\nimport { Category } from './../shared/models';\nimport { Helpers } from './../shared/helpers';\n\n@Component({\n    selector: 'category-component',\n    templateUrl: 'category.component.html'\n})\n\nexport class CategoryComponent implements OnInit {\n    totalRecords = 0;\n    categories: Category[];\n    selected: Category;\n    displayPanel: boolean;\n    dataform: FormGroup;\n\n    constructor(private sessionService: SessionService,\n                private categoryService: CategoryService,\n                private confirmationService: ConfirmationService,\n                private fb: FormBuilder) {\n       sessionService.title = 'Categories';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        this.dataform = this.fb.group({\n            'name': new FormControl('', Validators.required),\n            'isPrimary': new FormControl('', Validators.required)\n        });\n\n        this.categoryService\n            .getAll()\n            .subscribe(result => {\n                this.categories = result;\n                this.totalRecords = this.categories.length;\n            }, onerror => alert(onerror._body)\n        );\n    }\n\n    get isNew(): boolean { return this.selected == null || this.selected.categoryId === 0; }\n\n    get selectedIndex(): number { return this.categories.indexOf(this.selected); }\n\n    addClick() {\n        this.selected = new Category(0, '');\n        this.displayPanel = true;\n    }\n\n    onRowSelect(event: any) {\n        this.displayPanel = true;\n    }\n\n    closeClick() {\n        this.displayPanel = false;\n        this.selected = null;\n    }\n\n    saveClick() {\n        if (this.isNew) {\n            this.categoryService\n                .create(this.selected)\n                .subscribe(result => {\n                    this.categories.push(result);\n                    this.totalRecords++;\n                    this.closeClick();\n                }, onerror => alert(onerror._body));\n        } else {\n            this.categoryService\n                .update(this.selected.categoryId, this.selected)\n                .subscribe(result => {\n                    this.closeClick();\n                }, onerror => alert(onerror._body));\n        }\n    }\n\n    deleteClick() {\n        this.confirmationService.confirm({\n            message: 'All associations with the products will be deleted. Are you sure that you want to delete this category?',\n            accept: () => {\n                this.categoryService\n                    .delete(this.selected.categoryId)\n                    .subscribe(result => {\n                        this.categories.splice(this.selectedIndex, 1);\n                        this.totalRecords--;\n                        this.closeClick();\n                    }, onerror => alert(onerror._body));\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/category/category.component.ts","module.exports = \"<p-confirmDialog header=\\\"Confirmation delete on cascade\\\" icon=\\\"fa-trash-o\\\" [responsive]=\\\"true\\\"></p-confirmDialog>\\n<img *ngIf=\\\"!causals\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n    \\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\">\\n            <button pButton type=\\\"button\\\" label=\\\"{{totalRecords}} items\\\" title=\\\"Add item\\\" (click)=\\\"addClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-plus\\\"></button>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\">\\n            <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n            <input #gb type=\\\"text\\\" pInputText placeholder=\\\"Search\\\" style=\\\"width: 180px\\\">\\n        </div>\\n    </p-toolbar>\\n\\n    <p-dataTable *ngIf=\\\"!displayPanel\\\" [value]=\\\"causals\\\" [responsive]=\\\"true\\\"\\n        selectionMode=\\\"single\\\" [(selection)]=\\\"selected\\\" (onRowSelect)=\\\"onRowSelect($event)\\\"\\n        [paginator]=\\\"true\\\" [rows]=\\\"20\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinks]=\\\"5\\\"\\n        [globalFilter]=\\\"gb\\\" #dt>\\n        <p-column field=\\\"causalId\\\" header=\\\"Id\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"causalName\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"causalQuantity\\\" header=\\\"Stock\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"causalBooked\\\" header=\\\"Booked\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"causalIsPos\\\" header=\\\"Pos\\\" [sortable]=\\\"true\\\"></p-column>\\n    </p-dataTable>\\n\\n    <p-panel *ngIf=\\\"displayPanel\\\">\\n        <p-header>\\n            <div class=\\\"ui-helper-clearfix\\\">\\n                <span class=\\\"ui-panel-title\\\" style=\\\"font-size:20px;display:inline-block;margin-top:6px\\\"><b>Causal</b></span>\\n                <button pButton type=\\\"button\\\" label=\\\"Close\\\" (click)=\\\"closeClick()\\\" style=\\\"float: right\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-close\\\"></button>\\n            </div>\\n        </p-header>\\n        <form [formGroup]=\\\"dataform\\\">\\n            <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label>Id</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">{{selected.causalId}}</div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"name\\\">Name</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"name\\\" [(ngModel)]=\\\"selected.causalName\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['name'].valid&&dataform.controls['name'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Name is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"quantity\\\">Stock</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <p-selectButton formControlName=\\\"quantity\\\" [options]=\\\"operators\\\" [(ngModel)]=\\\"selected.causalQuantity\\\"></p-selectButton>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['quantity'].valid&&dataform.controls['quantity'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Stock is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"booked\\\">Booked</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <p-selectButton formControlName=\\\"booked\\\" [options]=\\\"operators\\\" [(ngModel)]=\\\"selected.causalBooked\\\"></p-selectButton>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['booked'].valid&&dataform.controls['booked'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Booked is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"pos\\\">Cash register</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\"><p-inputSwitch onLabel=\\\"Yes\\\" offLabel=\\\"No\\\" formControlName=\\\"pos\\\" [(ngModel)]=\\\"selected.causalIsPos\\\"></p-inputSwitch></div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button *ngIf=\\\"selected.causalId>0\\\" type=\\\"button\\\" pButton icon=\\\"fa-trash-o\\\" class=\\\"ui-button-secondary\\\" (click)=\\\"deleteClick()\\\" label=\\\"Delete\\\"></button>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-8\\\"></div>\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button type=\\\"button\\\" pButton icon=\\\"fa-save\\\" class=\\\"ui-button-success\\\" (click)=\\\"saveClick()\\\" label=\\\"Save\\\" [disabled]=\\\"!dataform.valid\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </p-panel>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/causal/causal.component.html\n// module id = ../../../../../src/app/causal/causal.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { ConfirmationService, SelectItem } from 'primeng/primeng';\nimport { SessionService } from './../services/session.service';\nimport { CausalService } from './../services/causal.service';\nimport { Causal } from './../shared/models';\nimport { Helpers } from './../shared/helpers';\n\n@Component({\n    selector: 'causal-component',\n    templateUrl: 'causal.component.html'\n})\n\nexport class CausalComponent implements OnInit {\n    totalRecords = 0;\n    causals: Causal[];\n    operators: SelectItem[];\n    selected: Causal;\n    displayPanel: boolean;\n    dataform: FormGroup;\n\n    constructor(private sessionService: SessionService,\n                private causalService: CausalService,\n                private confirmationService: ConfirmationService,\n                private fb: FormBuilder) {\n       sessionService.title = 'Causals';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        this.operators = [];\n        this.operators.push({label: '-1', value: -1});\n        this.operators.push({label: '0', value: 0});\n        this.operators.push({label: '+1', value: +1});\n\n        this.dataform = this.fb.group({\n            'name': new FormControl('', Validators.required),\n            'quantity': new FormControl('', Validators.required),\n            'booked': new FormControl('', Validators.required),\n            'pos': new FormControl('', Validators.required)\n        });\n\n        this.causalService\n            .getAll()\n            .subscribe(result => {\n                this.causals = result;\n                this.totalRecords = this.causals.length;\n            }, onerror => alert(onerror._body));\n    }\n\n    get isNew(): boolean { return this.selected == null || this.selected.causalId === 0; }\n\n    get selectedIndex(): number { return this.causals.indexOf(this.selected); }\n\n    addClick() {\n        this.selected = new Causal();\n        this.displayPanel = true;\n    }\n\n    onRowSelect(event: any) {\n        this.displayPanel = true;\n    }\n\n    closeClick() {\n        this.displayPanel = false;\n        this.selected = null;\n    }\n\n    saveClick() {\n        if (this.isNew) {\n            this.causalService\n                .create(this.selected)\n                .subscribe(result => {\n                    this.causals.push(result);\n                    this.totalRecords++;\n                    this.closeClick();\n                }, onerror => alert(onerror._body));\n        } else {\n            this.causalService\n                .update(this.selected.causalId, this.selected)\n                .subscribe(result => {\n                    this.closeClick();\n                }, onerror => alert(onerror._body));\n        }\n    }\n\n    deleteClick() {\n        this.confirmationService.confirm({\n            message: 'All related movements will be deleted. Are you sure that you want to delete this causal?',\n            accept: () => {\n                this.causalService\n                    .delete(this.selected.causalId)\n                    .subscribe(result => {\n                        this.causals.splice(this.selectedIndex, 1);\n                        this.totalRecords--;\n                        this.closeClick();\n                    }, onerror => alert(onerror._body));\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/causal/causal.component.ts","module.exports = \"<p-growl [value]=\\\"msgs\\\"></p-growl>\\n<img *ngIf=\\\"!company\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <form *ngIf=\\\"company\\\" [formGroup]=\\\"dataform\\\">\\n        <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"name\\\">Name</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"name\\\" [(ngModel)]=\\\"company.companyName\\\"/>\\n                    <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['name'].valid&&dataform.controls['name'].dirty\\\">\\n                        <i class=\\\"fa fa-close\\\"></i> Name is required\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"desc\\\">Description</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"desc\\\" [(ngModel)]=\\\"company.companyDesc\\\"/>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"site\\\">Website</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"site\\\" [(ngModel)]=\\\"company.companyWebsite\\\"/>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"email\\\">Email</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"email\\\" [(ngModel)]=\\\"company.companyEmail\\\" type=\\\"email\\\"/>\\n                    <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['email'].valid&&dataform.controls['email'].dirty\\\">\\n                        <i class=\\\"fa fa-close\\\"></i> Email is required\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"phone\\\">Phone</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"phone\\\" [(ngModel)]=\\\"company.companyPhone\\\"/>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"address\\\">Address</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"address\\\" [(ngModel)]=\\\"company.companyAddress\\\"/>\\n                    <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['address'].valid&&dataform.controls['address'].dirty\\\">\\n                        <i class=\\\"fa fa-close\\\"></i> Address is required\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"city\\\">City</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"city\\\" [(ngModel)]=\\\"company.companyCity\\\"/>\\n                    <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['city'].valid&&dataform.controls['city'].dirty\\\">\\n                        <i class=\\\"fa fa-close\\\"></i> City is required\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"zip\\\">Zip</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"zip\\\" [(ngModel)]=\\\"company.companyZip\\\"/>\\n                    <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['zip'].valid&&dataform.controls['zip'].dirty\\\">\\n                        <i class=\\\"fa fa-close\\\"></i> Zip is required\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"country\\\">Country</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"country\\\" [(ngModel)]=\\\"company.companyCountry\\\"/>\\n                    <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['country'].valid&&dataform.controls['country'].dirty\\\">\\n                        <i class=\\\"fa fa-close\\\"></i> Country is required\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"fiscalCode\\\">Fiscal Code</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"fiscalCode\\\" [(ngModel)]=\\\"company.companyFiscalCode\\\"/>\\n                    <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['fiscalCode'].valid&&dataform.controls['fiscalCode'].dirty\\\">\\n                        <i class=\\\"fa fa-close\\\"></i> Fiscal Code is required\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"vatNumber\\\">VAT number</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"vatNumber\\\" [(ngModel)]=\\\"company.companyVatNumber\\\"/>\\n                    <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['vatNumber'].valid&&dataform.controls['vatNumber'].dirty\\\">\\n                        <i class=\\\"fa fa-close\\\"></i> VAT number is required\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-12\\\"><h3>Outgoing Mail</h3></div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"host\\\">Ssl</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <p-inputSwitch onLabel=\\\"Yes\\\" offLabel=\\\"No\\\" formControlName=\\\"ssl\\\" [(ngModel)]=\\\"company.smtpSsl\\\"></p-inputSwitch>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"host\\\">Host</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"host\\\" [(ngModel)]=\\\"company.smtpHost\\\"/>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"username\\\">Username</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"username\\\" [(ngModel)]=\\\"company.smtpUsername\\\"/>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"password\\\">Password</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText type=\\\"password\\\" formControlName=\\\"password\\\" [(ngModel)]=\\\"company.smtpPassword\\\"/>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-12\\\"><h3>Barcode counter</h3></div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-4\\\"><label for=\\\"host\\\">Number</label></div>\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <input pInputText formControlName=\\\"barcode\\\" [(ngModel)]=\\\"company.barcodeCounter\\\"/>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-8\\\"></div>\\n                <div class=\\\"ui-grid-col-4\\\">\\n                    <button type=\\\"button\\\" pButton icon=\\\"fa-save\\\" (click)=\\\"saveClick()\\\" class=\\\"ui-button-success\\\" label=\\\"Save\\\" [disabled]=\\\"!dataform.valid\\\"></button>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-12\\\"><h3>Document Header</h3></div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-12\\\">\\n                    <p-fileUpload mode=\\\"basic\\\" name=\\\"header\\\" url=\\\"/api/media\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event)\\\"></p-fileUpload>\\n                </div>\\n            </div>\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-12\\\">\\n                    <img title=\\\"Header\\\" alt=\\\"Header not found. Upload new image size 2000×260 px\\\" src=\\\"{{header}}\\\" height=\\\"100\\\" width=\\\"100%\\\"/>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/company/company.component.html\n// module id = ../../../../../src/app/company/company.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { Message } from 'primeng/primeng';\nimport { SessionService } from './../services/session.service';\nimport { CompanyService } from './../services/company.service';\nimport { Company } from './../shared/models';\n\n@Component({\n    selector: 'company-component',\n    templateUrl: 'company.component.html'\n})\n\nexport class CompanyComponent implements OnInit {\n    msgs: Message[] = [];\n    company: Company;\n    dataform: FormGroup;\n    header: string;\n\n    constructor(private sessionService: SessionService,\n                private companyService: CompanyService,\n                private fb: FormBuilder) {\n       sessionService.title = 'Company';\n       this.header = '/media/header.png';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        this.dataform = this.fb.group({\n            'name': new FormControl('', Validators.required),\n            'desc': new FormControl('', Validators.nullValidator),\n            'site': new FormControl('', Validators.nullValidator),\n            'email': new FormControl('', Validators.required),\n            'phone': new FormControl('', Validators.required),\n            'address': new FormControl('', Validators.required),\n            'city': new FormControl('', Validators.required),\n            'zip': new FormControl('', Validators.required),\n            'country': new FormControl('', Validators.required),\n            'fiscalCode': new FormControl('', Validators.required),\n            'vatNumber': new FormControl('', Validators.required),\n            'host': new FormControl('', Validators.nullValidator),\n            'ssl': new FormControl('', Validators.nullValidator),\n            'username': new FormControl('', Validators.nullValidator),\n            'password': new FormControl('', Validators.nullValidator),\n            'barcode': new FormControl('', Validators.required)\n        });\n\n        this.companyService.get()\n            .subscribe(result => {\n                this.company = result;\n            }, onerror => this.msgs.push({severity: 'error', summary: 'Get company', detail: onerror._body})\n        );\n    }\n\n    get isNew(): boolean { return this.company == null || this.company.companyId === 0; }\n\n    saveClick() {\n        if (this.isNew) {\n            this.companyService\n                .create(this.company)\n                .subscribe(result => {\n                    this.msgs.push({severity: 'success', summary: 'Success', detail: 'Company created'});\n                }, onerror => this.msgs.push({severity: 'error', summary: 'Create company', detail: onerror._body}));\n        } else {\n            this.companyService\n                .update(this.company)\n                .subscribe(result => {\n                    this.msgs.push({severity: 'success', summary: 'Success', detail: 'Company updated'});\n                }, onerror => this.msgs.push({severity: 'error', summary: 'Update company', detail: onerror._body}));\n        }\n    }\n\n    onBasicUpload(event) {\n        this.header = '';\n        // for(let file of event.files) {\n        // }\n        this.msgs = [];\n        this.msgs.push({severity: 'info', summary: 'File Uploaded', detail: ''});\n        this.header = '/media/header.png?' + Date().length\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/company/company.component.ts","module.exports = \"<p-confirmDialog header=\\\"Confirmation delete on cascade\\\" icon=\\\"fa-trash-o\\\" [responsive]=\\\"true\\\"></p-confirmDialog>\\n<img *ngIf=\\\"!customers\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\">\\n            <button pButton type=\\\"button\\\" label=\\\"{{totalRecords}} items\\\" title=\\\"Add item\\\" (click)=\\\"addClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-plus\\\"></button>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\">\\n            <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n            <input #gb type=\\\"text\\\" pInputText placeholder=\\\"Search\\\" style=\\\"width: 180px\\\">\\n        </div>\\n    </p-toolbar>\\n\\n    <p-dataTable *ngIf=\\\"!displayPanel\\\" [responsive]=\\\"true\\\" [value]=\\\"customers\\\"\\n        selectionMode=\\\"single\\\" [(selection)]=\\\"selected\\\" (onRowSelect)=\\\"onRowSelect($event)\\\"\\n        [paginator]=\\\"true\\\" [rows]=\\\"15\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinks]=\\\"5\\\"\\n        [globalFilter]=\\\"gb\\\" #dt>\\n        <p-column field=\\\"customerId\\\" header=\\\"Id\\\" [style]=\\\"{'width':'10%'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n        <p-column field=\\\"customerName\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n        <p-column field=\\\"customerEmail\\\" header=\\\"Email\\\" [style]=\\\"{'width':'30%'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n        <p-column field=\\\"customerCity\\\" header=\\\"City\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n    </p-dataTable>\\n\\n    <p-panel *ngIf=\\\"displayPanel\\\">\\n        <p-header>\\n            <div class=\\\"ui-helper-clearfix\\\">\\n                <span class=\\\"ui-panel-title\\\" style=\\\"font-size:20px;display:inline-block;margin-top:6px\\\"><b>Customer</b></span>\\n                <button pButton type=\\\"button\\\" label=\\\"Close\\\" (click)=\\\"closeClick()\\\" style=\\\"float: right\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-close\\\"></button>\\n            </div>\\n        </p-header>\\n        <form [formGroup]=\\\"dataform\\\">\\n            <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label>Id</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">{{selected.customerId}}</div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"name\\\">Name</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"name\\\" [(ngModel)]=\\\"selected.customerName\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['name'].valid&&dataform.controls['name'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Name is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"email\\\">Email</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"email\\\" [(ngModel)]=\\\"selected.customerEmail\\\" type=\\\"email\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['email'].valid&&dataform.controls['email'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Email is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"phone\\\">Phone</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"phone\\\" [(ngModel)]=\\\"selected.customerPhone\\\"/>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"address\\\">Address</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"address\\\" [(ngModel)]=\\\"selected.customerAddress\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['address'].valid&&dataform.controls['address'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Address is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"city\\\">City</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"city\\\" [(ngModel)]=\\\"selected.customerCity\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['city'].valid&&dataform.controls['city'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> City is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"zip\\\">Zip</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"zip\\\" [(ngModel)]=\\\"selected.customerZip\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['zip'].valid&&dataform.controls['zip'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Zip is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"country\\\">Country</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"country\\\" [(ngModel)]=\\\"selected.customerCountry\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['country'].valid&&dataform.controls['country'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Country is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"fiscalCode\\\">Fiscal Code</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"fiscalCode\\\" [(ngModel)]=\\\"selected.customerFiscalCode\\\"/>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"vatNumber\\\">VAT number</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"vatNumber\\\" [(ngModel)]=\\\"selected.customerVatNumber\\\"/>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button *ngIf=\\\"selected.customerId>0\\\" type=\\\"button\\\" pButton icon=\\\"fa-trash-o\\\" class=\\\"ui-button-secondary\\\" (click)=\\\"deleteClick()\\\" label=\\\"Delete\\\"></button>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\"></div>\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button type=\\\"button\\\" pButton icon=\\\"fa-save\\\" (click)=\\\"saveClick()\\\" class=\\\"ui-button-success\\\" label=\\\"Save\\\" [disabled]=\\\"!dataform.valid\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </p-panel>\\n </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/customer/customer.component.html\n// module id = ../../../../../src/app/customer/customer.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { ConfirmationService, Paginator } from 'primeng/primeng';\nimport { SessionService } from './../services/session.service';\nimport { CustomerService } from './../services/customer.service';\nimport { Customer } from './../shared/models';\nimport { Helpers } from './../shared/helpers';\n\n@Component({\n    selector: 'customer-component',\n    templateUrl: 'customer.component.html'\n})\n\nexport class CustomerComponent implements OnInit {\n    totalRecords = 0;\n    customers: Customer[];\n    selected: Customer;\n    displayPanel: boolean;\n    dataform: FormGroup;\n\n    constructor(private sessionService: SessionService,\n                private customerService: CustomerService,\n                private confirmationService: ConfirmationService,\n                private fb: FormBuilder) {\n       sessionService.title = 'Customers';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        this.dataform = this.fb.group({\n            'name': new FormControl('', Validators.required),\n            'email': new FormControl('', Validators.required),\n            'phone': new FormControl('', Validators.nullValidator),\n            'address': new FormControl('', Validators.required),\n            'city': new FormControl('', Validators.required),\n            'zip': new FormControl('', Validators.required),\n            'country': new FormControl('', Validators.required),\n            'fiscalCode': new FormControl('', Validators.nullValidator),\n            'vatNumber': new FormControl('', Validators.nullValidator)\n        });\n\n        this.customerService.getAll()\n            .subscribe(result => {\n                this.customers = result;\n                this.totalRecords = this.customers.length;\n            }, onerror => alert(onerror._body)\n        );\n    }\n\n    get isNew(): boolean { return this.selected == null || this.selected.customerId === 0; }\n\n    get selectedIndex(): number { return this.customers.indexOf(this.selected); }\n\n    onRowSelect(event: any) {\n        this.displayPanel = true;\n    }\n\n    closeClick() {\n        this.displayPanel = false;\n        this.selected = null;\n    }\n\n    addClick() {\n        this.selected = new Customer();\n        this.displayPanel = true;\n    }\n\n    saveClick() {\n        if (this.isNew) {\n            this.customerService\n                .create(this.selected)\n                .subscribe(result => {\n                    this.customers.push(result);\n                    this.totalRecords++;\n                    this.closeClick();\n                }, onerror => alert(onerror._body));\n        } else {\n            this.customerService\n                .update(this.selected.customerId, this.selected)\n                .subscribe(result => {\n                    this.customers[this.selectedIndex] = this.selected;\n                    this.closeClick();\n                }, onerror => alert(onerror._body));\n        }\n    }\n\n    deleteClick() {\n        this.confirmationService.confirm({\n            message: 'Are you sure that you want to delete this customer?',\n            accept: () => {\n                this.customerService\n                    .delete(this.selected.customerId)\n                    .subscribe(result => {\n                        this.customers.splice(this.selectedIndex, 1);\n                        this.totalRecords--;\n                        this.closeClick();\n                    }, onerror => alert(onerror._body));\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/customer/customer.component.ts","module.exports = \"<p-confirmDialog header=\\\"Confirmation delete on cascade\\\" icon=\\\"fa-trash-o\\\" [responsive]=\\\"true\\\"></p-confirmDialog>\\n<img *ngIf=\\\"!items\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\">\\n            <button pButton type=\\\"button\\\" label=\\\"{{totalRecords}} items\\\" title=\\\"Add item\\\" (click)=\\\"addClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-plus\\\"></button>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\">\\n            <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n            <input #gb type=\\\"text\\\" pInputText placeholder=\\\"Search\\\" style=\\\"width: 180px\\\">\\n        </div>\\n    </p-toolbar>\\n\\n    <p-dataTable *ngIf=\\\"!displayPanel\\\" [responsive]=\\\"true\\\" [value]=\\\"items\\\"\\n        selectionMode=\\\"single\\\" [(selection)]=\\\"selected\\\" (onRowSelect)=\\\"onRowSelect($event)\\\"\\n        [paginator]=\\\"true\\\" [rows]=\\\"15\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinks]=\\\"5\\\"\\n        [globalFilter]=\\\"gb\\\" #dt>\\n        <p-column field=\\\"deviceId\\\" header=\\\"Id\\\" [style]=\\\"{'width':'100px'}\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"deviceName\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"store.storeName\\\" header=\\\"Store\\\" [sortable]=\\\"true\\\"></p-column>     \\n    </p-dataTable>\\n\\n    <p-panel *ngIf=\\\"displayPanel\\\">\\n        <p-header>\\n            <div class=\\\"ui-helper-clearfix\\\">\\n                <span class=\\\"ui-panel-title\\\" style=\\\"font-size:20px;display:inline-block;margin-top:6px\\\"><b>Device</b></span>\\n                <button pButton type=\\\"button\\\" label=\\\"Close\\\" (click)=\\\"closeClick()\\\" style=\\\"float: right\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-close\\\"></button>\\n            </div>\\n        </p-header>\\n        <form [formGroup]=\\\"dataform\\\">\\n            <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label>Id</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">{{selected.deviceId}}</div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"name\\\">Name</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"name\\\" [(ngModel)]=\\\"selected.deviceName\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['name'].valid&&dataform.controls['name'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Name is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"store\\\">Store</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <p-dropdown [options]=\\\"stores\\\" formControlName=\\\"store\\\" [(ngModel)]=\\\"selected.store\\\" [style]=\\\"{'width':'100%'}\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['store'].valid&&dataform.controls['store'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i>\\n                            <span *ngIf=\\\"dataform.controls['store'].errors['required']\\\">Store is required</span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"token\\\">Token</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"token\\\" [(ngModel)]=\\\"selected.deviceToken\\\"/>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"join\\\">Join with this device</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\"><p-inputSwitch onLabel=\\\"Yes\\\" offLabel=\\\"No\\\" formControlName=\\\"join\\\"></p-inputSwitch></div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button *ngIf=\\\"selected.deviceId>0\\\" type=\\\"button\\\" pButton icon=\\\"fa-trash-o\\\" class=\\\"ui-button-secondary\\\" (click)=\\\"deleteClick()\\\" label=\\\"Delete\\\"></button>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\"></div>\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button type=\\\"button\\\" pButton icon=\\\"fa-save\\\" class=\\\"ui-button-success\\\" (click)=\\\"saveClick()\\\" label=\\\"Save\\\" [disabled]=\\\"!dataform.valid\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </p-panel>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/device/device.component.html\n// module id = ../../../../../src/app/device/device.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { ConfirmationService, SelectItem } from 'primeng/primeng';\nimport { SessionService } from './../services/session.service';\nimport { DeviceService } from './../services/device.service';\nimport { StoreService } from './../services/store.service';\nimport { Device, Store } from './../shared/models';\nimport { Helpers } from './../shared/helpers';\n\n@Component({\n    selector: 'device-component',\n    templateUrl: 'device.component.html'\n})\n\nexport class DeviceComponent implements OnInit {\n    totalRecords = 0;\n    items: Device[];\n    selected: Device;\n    stores: SelectItem[] = [];\n    displayPanel: boolean;\n    dataform: FormGroup;\n\n    constructor(private sessionService: SessionService,\n                private deviceService: DeviceService,\n                private storeService: StoreService,\n                private confirmationService: ConfirmationService,\n                private fb: FormBuilder) {\n       sessionService.title = 'Devices';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        this.dataform = this.fb.group({\n            'name': new FormControl('', Validators.required),\n            'token': new FormControl('', Validators.nullValidator),\n            'store': new FormControl('', Validators.required),\n            'join': new FormControl('', Validators.required)\n        });\n\n        this.deviceService\n            .getAll()\n            .subscribe(result => {\n                this.items = result;\n                this.totalRecords = this.items.length;\n            }, onerror => alert(onerror._body)\n        );\n\n        this.storeService.getAll()\n            .subscribe(result => {\n                this.stores.push({label: '', value: null})\n                this.stores = this.stores.concat(result.map(p => Helpers.newSelectItem(p, p.storeName)));\n            }, onerror => alert(onerror._body)\n        );\n    }\n\n    get isNew(): boolean { return this.selected == null || this.selected.deviceId === 0; }\n\n    get selectedIndex(): number { return this.items.indexOf(this.selected); }\n\n    addClick() {\n        this.selected = new Device();\n        this.selected.store = this.stores.length > 0 ? this.stores[0].value : null;\n        this.dataform.controls.join.setValue(false);\n        this.displayPanel = true;\n    }\n\n    onRowSelect(event: any) {\n        this.dataform.controls.join.setValue(false);\n        let json = localStorage.getItem('webretailDevice');\n        if (json != null) {\n            let device: Device = JSON.parse(json)\n            if (device.deviceId === this.selected.deviceId) {\n                this.dataform.controls.join.setValue(true);\n            }\n        }\n        if (this.selected.store.storeId === 0) {\n            this.selected.store = null;\n        }\n        this.displayPanel = true;\n    }\n\n    closeClick() {\n        if (this.dataform.controls.join.value === true) {\n            localStorage.setItem('webretailDevice', JSON.stringify(this.selected));\n        } else {\n            localStorage.removeItem('webretailDevice');\n        }\n        this.displayPanel = false;\n        this.selected = null;\n    }\n\n    saveClick() {\n        if (this.isNew) {\n            this.deviceService\n                .create(this.selected)\n                .subscribe(result => {\n                    this.selected = result;\n                    this.items.push(result);\n                    this.totalRecords++;\n                    this.closeClick();\n                }, onerror => alert(onerror._body));\n        } else {\n            this.deviceService\n                .update(this.selected.deviceId, this.selected)\n                .subscribe(result => {\n                    this.closeClick();\n                }, onerror => alert(onerror._body));\n        }\n    }\n\n    deleteClick() {\n        this.confirmationService.confirm({\n            message: 'Are you sure that you want to delete this device?',\n            accept: () => {\n                this.deviceService\n                    .delete(this.selected.deviceId)\n                    .subscribe(result => {\n                        this.items.splice(this.selectedIndex, 1);\n                        this.totalRecords--;\n                        this.closeClick();\n                    }, onerror => alert(onerror._body));\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/device/device.component.ts","module.exports = \"<p-confirmDialog header=\\\"Confirmation delete\\\" icon=\\\"fa-trash-o\\\" [responsive]=\\\"true\\\"></p-confirmDialog>\\n<img *ngIf=\\\"!items\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <button pButton type=\\\"button\\\" title=\\\"Discounts\\\" style=\\\"position: absolute; top: 154px; left: 30px; width:50px;\\\" (click)=\\\"cancelClick()\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-reply\\\"></button>\\n\\n    <p-toolbar *ngIf=\\\"item\\\">\\n        <div class=\\\"ui-toolbar-group-left\\\" style=\\\"margin-left:60px\\\">\\n            <span><b>name</b>: {{item.discountName}}</span>\\n            <br/><span><b>start</b>: {{item.discountStartAt | date: 'yyyy-MM-dd'}}</span>\\n            <span><b>finish</b>: {{item.discountFinishAt | date: 'yyyy-MM-dd'}}</span>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\" style=\\\"text-align: right\\\">\\n            <br>\\n            <span *ngIf=\\\"item.discountPercentage>0\\\"><b>percentage</b>: {{item.discountPercentage}}%</span>\\n            <span *ngIf=\\\"item.discountPrice>0\\\"><b>fixed price</b>: {{item.discountPrice | currency: 'EUR' : true}}</span>\\n        </div>\\n    </p-toolbar>\\n\\n    <p-dataTable *ngIf=\\\"!inputComponent.isOpen\\\" [value]=\\\"items | priceFilter:sliderValue:'discount':item\\\" \\n        selectionMode=\\\"multiple\\\" [(selection)]=\\\"itemsSelected\\\" [responsive]=\\\"true\\\" #dt>\\n        <p-header>\\n            <button pButton style=\\\"position: absolute;left: 10px; top: 8px;\\\" type=\\\"button\\\" title=\\\"Article picker\\\" (click)=\\\"showPickerClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-search-plus\\\"></button>\\n            <p-chips [(ngModel)]=\\\"codes\\\" placeholder=\\\"code reading\\\" (onAdd)=\\\"addCodes()\\\"></p-chips>\\n        </p-header>\\n        <p-footer>\\n            <button pButton type=\\\"button\\\" label=\\\"Remove\\\" (click)=\\\"removeClick()\\\" [disabled]=\\\"itemsSelected.length===0\\\" style=\\\"float: left\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-trash\\\"></button>\\n            <span style=\\\"float: right\\\"><b>{{totalRecords}}</b> rows</span>\\n            <p>&nbsp;</p>\\n        </p-footer>\\n        <p-column [style]=\\\"{'width':'50px'}\\\" selectionMode=\\\"multiple\\\"></p-column>\\n        <p-column field=\\\"discountProduct.productCode\\\" header=\\\"Code\\\" [editable]=\\\"false\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n        <p-column field=\\\"discountProduct.productName\\\" header=\\\"Name\\\" [editable]=\\\"false\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n        <p-column header=\\\"Discount ({{sliderValue||'No Filter'}})\\\"[sortable]=\\\"true\\\" [filter]=\\\"true\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <i class=\\\"fa fa-close\\\" (click)=\\\"sliderValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n                <p-slider [style]=\\\"{'margin-top':'14px','margin-bottom':'5px'}\\\" [(ngModel)]=\\\"sliderValue\\\" [min]=\\\"5\\\" [max]=\\\"1000\\\" styleClass=\\\"ui-column-filter\\\"></p-slider>\\n            </ng-template>\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"item.discountPercentage===0;then discount_content else price_content\\\"></div>\\n                <ng-template #discount_content>\\n                    {{(data.discountProduct.productSellingPrice - item.discountPrice) / data.discountProduct.productSellingPrice * 100.0}}%\\n                </ng-template>\\n                <ng-template #price_content>\\n                    {{data.discountProduct.productSellingPrice - (data.discountProduct.productSellingPrice * item.discountPercentage / 100) | currency: 'EUR' : true}}\\n                </ng-template>\\n            </ng-template>\\n        </p-column>\\n    </p-dataTable>\\n\\n    <product-picker (onPicked)=\\\"pickerClick($event)\\\"></product-picker>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/discount/discount.component.html\n// module id = ../../../../../src/app/discount/discount.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy, Input, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ConfirmationService, SelectItem } from 'primeng/primeng';\nimport { SessionService } from './../services/session.service';\nimport { DiscountService } from './../services/discount.service';\nimport { Discount, DiscountProduct } from './../shared/models';\nimport { Helpers } from './../shared/helpers';\nimport { ProductPickerComponent } from './../shared/product-picker.component';\n\n@Component({\n    selector: 'discount-component',\n    templateUrl: 'discount.component.html'\n})\n\nexport class DiscountComponent implements OnInit, OnDestroy {\n    @ViewChild(ProductPickerComponent) inputComponent: ProductPickerComponent;\n    private sub: any;\n    discountId: number;\n    totalRecords = 0;\n    codes: string[];\n    item: Discount;\n    items: DiscountProduct[];\n    itemsSelected: DiscountProduct[];\n    articleValue: string;\n    sliderValue: number;\n\n    constructor(private activatedRoute: ActivatedRoute,\n                private sessionService: SessionService,\n                private discountService: DiscountService,\n                private confirmationService: ConfirmationService,\n                private location: Location) {\n        this.codes = [];\n        this.itemsSelected = [];\n        sessionService.title = 'Discount';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        // Subscribe to route params\n        this.sub = this.activatedRoute.params.subscribe(params => {\n            this.discountService.getById(params['id'])\n                .subscribe(result => {\n                    this.item = result;\n                    this.discountId = result.discountId;\n                    this.discountService.getItemsById(this.discountId)\n                        .subscribe(res => {\n                            this.items = res;\n                            this.totalRecords = this.items.length;\n                        }, onerror => alert(onerror._body)\n                    );\n                }, onerror => alert(onerror._body)\n            );\n        });\n    }\n\n    ngOnDestroy() {\n        // Clean sub to avoid memory leak\n        this.sub.unsubscribe();\n    }\n\n    reloadData() {\n        this.items =  this.items.map(p => p);\n        this.totalRecords = this.items.length;\n    }\n\n   cancelClick() {\n        this.location.back();\n    }\n\n    addCodes() {\n        this.codes.forEach(code => {\n            let item = new DiscountProduct();\n            item.discountId = this.discountId;\n            item.discountProduct.productCode = code;\n            this.discountService\n                .addProduct(item)\n                .subscribe(result => {\n                    this.items.push(result);\n                    this.codes.splice(this.codes.indexOf(code), 1);\n                    this.reloadData();\n                }, onerror => alert(onerror._body));\n        });\n    }\n\n    showPickerClick() {\n        this.inputComponent.loadData();\n    }\n\n    pickerClick(event: any) {\n        this.codes = this.codes.concat(event);\n        this.addCodes();\n    }\n\n    removeClick() {\n        this.confirmationService.confirm({\n            message: 'Are you sure that you want to remove this selected items?',\n            accept: () => {\n                this.itemsSelected.forEach(p => {\n                    this.discountService\n                        .removeProduct(p.discountProductId)\n                        .subscribe(result => {\n                            this.items.splice(this.items.indexOf(p), 1);\n                            this.reloadData();\n                        }, onerror => alert(onerror._body));\n                });\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/discount/discount.component.ts","module.exports = \"<p-confirmDialog icon=\\\"fa-trash-o\\\" [responsive]=\\\"true\\\"></p-confirmDialog>\\n<img *ngIf=\\\"!items\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\">\\n            <button pButton type=\\\"button\\\" label=\\\"{{totalRecords}} items\\\" title=\\\"Add item\\\" (click)=\\\"addClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-plus\\\"></button>\\n            <button pButton type=\\\"button\\\" label=\\\"Edit\\\" title=\\\"Edit item\\\" (click)=\\\"editClick()\\\" [disabled]=\\\"!selected\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-edit\\\"></button>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\">\\n            <button pButton type=\\\"button\\\" label=\\\"Details\\\" title=\\\"Open details\\\" (click)=\\\"openClick()\\\" [disabled]=\\\"!selected\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-bars\\\"></button>\\n        </div>\\n    </p-toolbar>\\n\\n    <p-dataTable *ngIf=\\\"!displayPanel\\\" [responsive]=\\\"true\\\" [value]=\\\"items | periodFilter:dateStartValue:dateFinishValue | priceFilter:sliderValue:'discounts'\\\"\\n        selectionMode=\\\"single\\\" [(selection)]=\\\"selected\\\"\\n        [paginator]=\\\"true\\\" [rows]=\\\"20\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinks]=\\\"5\\\" #dt>\\n        <p-column field=\\\"discountName\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n        <p-column header=\\\"Discount ({{sliderValue||'No Filter'}})\\\"[sortable]=\\\"true\\\" [filter]=\\\"true\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <i class=\\\"fa fa-close\\\" (click)=\\\"sliderValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n                <p-slider [style]=\\\"{'margin-top':'14px','margin-bottom':'5px'}\\\" [(ngModel)]=\\\"sliderValue\\\" [min]=\\\"5\\\" [max]=\\\"1000\\\" styleClass=\\\"ui-column-filter\\\"></p-slider>\\n            </ng-template>\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                {{data.discountPercentage > 0 ? data.discountPercentage + '%' : data.discountPrice | currency: 'EUR' : true}}\\n            </ng-template>\\n        </p-column>\\n        <p-column field=\\\"discountStartAt\\\" header=\\\"Start\\\" [sortable]=\\\"true\\\" [filter]=\\\"false\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                {{data.discountStartAt | date:'yyyy-MM-dd'}}\\n            </ng-template>            \\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <i class=\\\"fa fa-close\\\" (click)=\\\"dateStartValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n                <p-calendar [(ngModel)]=\\\"dateStartValue\\\" [inputStyle]=\\\"{'width':'100%'}\\\" dateFormat=\\\"yy-mm-dd\\\" placeholder=\\\"Start\\\" styleClass=\\\"ui-column-filter\\\"></p-calendar>\\n            </ng-template>\\n        </p-column>\\n        <p-column field=\\\"discountFinishAt\\\" header=\\\"Finish\\\" [sortable]=\\\"true\\\" [filter]=\\\"false\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                {{data.discountFinishAt | date:'yyyy-MM-dd'}}\\n            </ng-template>            \\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <i class=\\\"fa fa-close\\\" (click)=\\\"dateFinishValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n                <p-calendar [(ngModel)]=\\\"dateFinishValue\\\" [inputStyle]=\\\"{'width':'100%'}\\\" dateFormat=\\\"yy-mm-dd\\\" placeholder=\\\"Finish\\\" styleClass=\\\"ui-column-filter\\\"></p-calendar>\\n            </ng-template>\\n        </p-column>\\n    </p-dataTable>\\n    \\n     <p-panel *ngIf=\\\"displayPanel\\\">\\n        <p-header>\\n            <div class=\\\"ui-helper-clearfix\\\">\\n                <span class=\\\"ui-panel-title\\\" style=\\\"font-size:20px;display:inline-block;margin-top:4px\\\"><b>Discount</b></span>\\n                <button pButton type=\\\"button\\\" label=\\\"Close\\\" (click)=\\\"closeClick()\\\" style=\\\"float: right\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-close\\\"></button>\\n            </div>\\n        </p-header>\\n        <form [formGroup]=\\\"dataform\\\">\\n            <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\" *ngIf=\\\"selected\\\">\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label>Id</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">{{selected.discountId}}</div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"name\\\">Name</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"name\\\" [(ngModel)]=\\\"selected.discountName\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['name'].valid&&dataform.controls['name'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Name is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"start\\\">Start</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <p-calendar formControlName=\\\"start\\\" [(ngModel)]=\\\"selected.discountStartAt\\\" dateFormat=\\\"yy-mm-dd\\\" [showIcon]=\\\"true\\\"></p-calendar>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['start'].valid&&dataform.controls['start'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Start date is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"finish\\\">Finish</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <p-calendar formControlName=\\\"finish\\\" [(ngModel)]=\\\"selected.discountFinishAt\\\" dateFormat=\\\"yy-mm-dd\\\" [showIcon]=\\\"true\\\"></p-calendar>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['finish'].valid&&dataform.controls['finish'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Finish date is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-12\\\"><h4>TYPE OF DISCOUNT</h4></div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\" *ngIf=\\\"selected.discountPrice<1\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"percentage\\\">percentage %</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText type=\\\"number\\\" formControlName=\\\"percentage\\\" [(ngModel)]=\\\"selected.discountPercentage\\\" min=\\\"0\\\" max=\\\"100\\\"/>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\" *ngIf=\\\"selected.discountPercentage<1\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"price\\\">fixed-price</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText type=\\\"number\\\" formControlName=\\\"price\\\" [(ngModel)]=\\\"selected.discountPrice\\\" min=\\\"0\\\"/>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button *ngIf=\\\"selected.discountId>0\\\" type=\\\"button\\\" pButton icon=\\\"fa-trash-o\\\" class=\\\"ui-button-secondary\\\" (click)=\\\"deleteClick()\\\" label=\\\"Delete\\\"></button>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\"></div>\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button type=\\\"button\\\" pButton icon=\\\"fa-save\\\" class=\\\"ui-button-success\\\" (click)=\\\"saveClick()\\\" label=\\\"Save\\\" [disabled]=\\\"!dataform.valid\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </p-panel>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/discount/discounts.component.html\n// module id = ../../../../../src/app/discount/discounts.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { ConfirmationService, SelectItem, MenuItem } from 'primeng/primeng';\nimport { SessionService } from './../services/session.service';\nimport { DiscountService } from './../services/discount.service';\nimport { Discount } from './../shared/models';\nimport { Helpers } from './../shared/helpers';\n\n@Component({\n    selector: 'discounts-component',\n    templateUrl: 'discounts.component.html'\n})\n\nexport class DiscountsComponent implements OnInit {\n    totalRecords = 0;\n    items: Discount[];\n    selected: Discount;\n    displayPanel: boolean;\n    dataform: FormGroup;\n    dateStartValue: Date;\n    dateFinishValue: Date;\n    sliderValue: number;\n\n    constructor(private router: Router,\n                private sessionService: SessionService,\n                private discountService: DiscountService,\n                private confirmationService: ConfirmationService,\n                private fb: FormBuilder) {\n        sessionService.title = 'Discounts';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        this.dataform = this.fb.group({\n            'name': new FormControl('', Validators.required),\n            'percentage': new FormControl('', Validators.nullValidator),\n            'price': new FormControl('', Validators.nullValidator),\n            'start': new FormControl('', Validators.required),\n            'finish': new FormControl('', Validators.required)\n        });\n\n        this.discountService\n            .getAll()\n            .subscribe(result => {\n                this.items = result;\n                this.totalRecords = this.items.length;\n             }\n        );\n    }\n\n    get isNew(): boolean { return this.selected == null || this.selected.discountId === 0; }\n\n    get selectedIndex(): number { return this.items.indexOf(this.selected); }\n\n    addClick() {\n        this.selected = new Discount();\n        this.displayPanel = true;\n    }\n\n    editClick() {\n        if (!this.selected) {\n            return;\n        }\n        this.displayPanel = true;\n    }\n\n    closeClick() {\n        this.displayPanel = false;\n        this.selected = null;\n    }\n\n    saveClick() {\n        if (this.isNew) {\n            this.discountService.create(this.selected)\n                .subscribe(result => {\n                    this.selected = result;\n                    this.totalRecords++;\n                    this.openClick();\n                }, onerror => alert(onerror._body));\n        } else {\n            this.discountService.update(this.selected.discountId, this.selected)\n                .subscribe(result => {\n                    this.items[this.selectedIndex] = result;\n                    this.closeClick();\n                }, onerror => {\n                    alert(onerror._body);\n                });\n        }\n    }\n\n    deleteClick() {\n        if (!this.selected) {\n            return;\n        }\n        this.confirmationService.confirm({\n            header: 'Confirmation delete on cascade',\n            message: 'All related items will be deleted. Are you sure that you want to delete this discount?',\n            accept: () => {\n                this.discountService.delete(this.selected.discountId)\n                    .subscribe(result => {\n                        this.items.splice(this.selectedIndex, 1);\n                        this.totalRecords--;\n                        this.closeClick();\n                    }, onerror => alert(onerror._body));\n            }\n        });\n    }\n\n    openClick(detail = '') {\n        if (!this.selected) {\n            return;\n        }\n        this.router.navigateByUrl('discount/' + detail + this.selected.discountId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/discount/discounts.component.ts","module.exports = \"<div class=\\\"container-fluid\\\">\\n    \\n    <!--<p *ngIf=\\\"token\\\" style=\\\"float: right\\\">Your unique token is: <code>{{token}}</code></p>-->\\n   \\n    <h2><img src=\\\"/assets/logo.jpg\\\" height=\\\"72\\\"> Webretail RMS</h2>\\n    <hr/>\\n\\n    <h4>What is Retail Management System (RMS)?</h4>\\n    <ul>\\n        <li>Webretail RMS is a complete POS solution for small and midsize retailers operating everything from a single store to a whole chain. It is comprehensive and scalable for those businesses focusing on significant growth.</li>\\n        <li>It offers advanced functionality such as multidimensional inventory management, customized reporting, advanced purchasing, and receivables management. And Webretail RMS integrates with well-known financial packages you may be using now.</li>\\n        <li>Webretail RMS can be customized for your specific business requirements, providing you with the investment protection of a flexible solution that adapts to meet demanding retail needs.</li>\\n    </ul>\\n\\n    <hr/>\\n    <h3>With Webretail RMS, you get the functionality to:</h3>\\n    <hr/>\\n\\n    <h4>Streamline operations</h4>\\n    <ul>\\n        <li>For single stores or multiple independently operated stores</li>\\n        <li>Efficiently manage and track inventory within each store</li>\\n        <li>Automatically generate POs based on reorder points and stock levels</li>\\n        <li>View sales and inventory information in real-time, modifiable reports</li>\\n        <li>Speed checkout with built-in credit/debit card processing services</li>\\n        <li>Manage inventory and customer information across multiple stores</li>\\n        <li>Manage pricing and promotions from the head office</li>\\n        <li>Manage multiple item dimensions—color, size, and style</li>\\n        <li>Automatically break down cases into single units</li>\\n        <li>Assign field-level access to service employees</li>\\n        <li>Use a touch screen to speed transactions</li>\\n        <li>Suspend and resume transactions</li>\\n    </ul>\\n\\n    <h4>Improve profit margins</h4>\\n    <ul>\\n        <li>Include cashier accountability by tracking performed tasks</li>\\n        <li>Design custom sales promotions</li>\\n        <li>Create inventory movement reports</li>\\n        <li>Identify best-selling items</li>\\n        <li>Upsell and cross-sell your customers</li>\\n        <li>Track work orders, quotes, back orders, and layaways</li>\\n        <li>Manage customer accounts receivable</li>\\n        <li>Manage gift card, assembly, weighed, and gasoline item types</li>\\n    </ul>\\n\\n    <hr/>\\n    \\n    <h4>Check out the following resources</h4>\\n    <ul>\\n        <li><a href=\\\"https://github.com/gerardogrisolini/Webretail\\\" target=\\\"_blank\\\">Webretail on GitHub</a></li>\\n    </ul>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit  } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SessionService } from './../services/session.service';\n\n@Component({\n    selector: 'home-component',\n    templateUrl: 'home.component.html'\n})\n\nexport class HomeComponent implements OnInit  {\n\n    token: string;\n\n    constructor(private activatedRoute: ActivatedRoute,\n                private sessionService: SessionService) {\n        sessionService.title = 'Home';\n    }\n\n    ngOnInit() {\n\n        if (this.sessionService.isAuthenticated) {\n            this.token = localStorage.getItem('token');\n            return;\n        }\n\n        // this.sessionService.getCredentials()\n        //     .subscribe(res => {\n        //         alert(JSON.stringify(res));\n        //     });\n     }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/home/home.component.ts","module.exports = \"<p-confirmDialog header=\\\"Confirmation delete\\\" icon=\\\"fa-trash-o\\\" [responsive]=\\\"true\\\"></p-confirmDialog>\\n<img *ngIf=\\\"!items\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <button pButton type=\\\"button\\\" title=\\\"Invoices\\\" style=\\\"position: absolute; top: 154px; left: 30px; width:50px;\\\" (click)=\\\"cancelClick()\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-reply\\\"></button>\\n\\n    <p-toolbar *ngIf=\\\"item\\\">\\n        <div class=\\\"ui-toolbar-group-left\\\" style=\\\"margin-left:60px\\\">\\n            <span><b>number</b>: {{item.invoiceNumber}}</span>\\n            <br/><span><b>date</b>: {{item.invoiceDate | date: 'yyyy-MM-dd'}}</span>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\" style=\\\"text-align: right\\\">\\n            <br>\\n            <span><b>customer</b>: {{item.invoiceCustomer.customerName}}</span>\\n        </div>\\n    </p-toolbar>\\n\\n    <p-dataTable *ngIf=\\\"!inputComponent.isOpen\\\" [value]=\\\"items | dateFilter:dateStartValue:dateFinishValue | priceFilter:amountValue:'movements'\\\" \\n        selectionMode=\\\"multiple\\\" [(selection)]=\\\"itemsSelected\\\" [responsive]=\\\"true\\\" #dt>\\n        <p-header>\\n            <button pButton type=\\\"button\\\" label=\\\"Remove\\\" (click)=\\\"removeClick()\\\" [disabled]=\\\"itemsSelected.length===0\\\" style=\\\"float: left\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-trash\\\"></button>\\n            <button pButton label=\\\"Movement picker\\\" style=\\\"float: right\\\" type=\\\"button\\\" title=\\\"Movement picker\\\" (click)=\\\"showPickerClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-search-plus\\\"></button>\\n            <p>&nbsp;</p>\\n        </p-header>\\n        <p-footer>\\n            <span style=\\\"float: left\\\"><b>{{totalRecords}}</b> rows</span>\\n            <span style=\\\"float: right\\\">amount <b>{{totalAmount | currency: 'EUR' : true}}</b></span>\\n            <p>&nbsp;</p>\\n        </p-footer>\\n        <p-column [style]=\\\"{'width':'50px'}\\\" selectionMode=\\\"multiple\\\"></p-column>\\n        <p-column field=\\\"movementNumber\\\" header=\\\"Number\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n        <p-column header=\\\"Date\\\" [sortable]=\\\"true\\\" [filter]=\\\"false\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                {{data.movementDate | date:'yyyy-MM-dd'}}\\n            </ng-template>            \\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <i class=\\\"fa fa-close\\\" (click)=\\\"dateStartValue=null;dateFinishValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n                <p-calendar [(ngModel)]=\\\"dateStartValue\\\" [inputStyle]=\\\"{'width':'50%','float':'left'}\\\" dateFormat=\\\"yy-mm-dd\\\" placeholder=\\\"Start\\\" styleClass=\\\"ui-column-filter\\\"></p-calendar>\\n                <p-calendar [(ngModel)]=\\\"dateFinishValue\\\" [inputStyle]=\\\"{'width':'50%','float':'right'}\\\" dateFormat=\\\"yy-mm-dd\\\" placeholder=\\\"Finish\\\" styleClass=\\\"ui-column-filter\\\"></p-calendar>\\n            </ng-template>\\n        </p-column>\\n        <p-column field=\\\"movementCausal.causalName\\\" header=\\\"Causal\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\" filterMatchMode=\\\"equals\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <p-dropdown [options]=\\\"causalsFiltered\\\" [style]=\\\"{'width':'100%'}\\\" (onChange)=\\\"dt.filter($event.value,col.field,col.filterMatchMode)\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n            </ng-template>\\n        </p-column>\\n        <p-column field=\\\"movementStore.storeName\\\" header=\\\"Store\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\" filterMatchMode=\\\"equals\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <p-dropdown [options]=\\\"storesFiltered\\\" [style]=\\\"{'width':'100%'}\\\" (onChange)=\\\"dt.filter($event.value,col.field,col.filterMatchMode)\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n            </ng-template>\\n        </p-column>\\n        <p-column header=\\\"Amount ({{amountValue||'No Filter'}})\\\" [editable]=\\\"false\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <i class=\\\"fa fa-close\\\" (click)=\\\"amountValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n                <p-slider [style]=\\\"{'margin-top':'14px','margin-bottom':'5px'}\\\" [(ngModel)]=\\\"amountValue\\\" [min]=\\\"5\\\" [max]=\\\"1000\\\"></p-slider>\\n            </ng-template>\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                {{data.movementAmount | currency: 'EUR' : true}}\\n            </ng-template>\\n        </p-column>\\n    </p-dataTable>\\n\\n    <movement-picker (onPicked)=\\\"pickerClick($event)\\\"></movement-picker>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/invoice/invoice.component.html\n// module id = ../../../../../src/app/invoice/invoice.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ConfirmationService, SelectItem } from 'primeng/primeng';\nimport { SessionService } from './../services/session.service';\nimport { InvoiceService } from './../services/invoice.service';\nimport { Invoice, Movement } from './../shared/models';\nimport { Helpers } from './../shared/helpers';\nimport { MovementPickerComponent } from './../shared/movement-picker.component';\n\n@Component({\n    selector: 'invoice-component',\n    templateUrl: 'invoice.component.html'\n})\n\nexport class InvoiceComponent implements OnInit, OnDestroy {\n    @ViewChild(MovementPickerComponent) inputComponent: MovementPickerComponent;\n    private sub: any;\n    invoiceId: number;\n    totalRecords = 0;\n    totalAmount = 0.0;\n    codes: string[];\n    item: Invoice;\n    items: Movement[];\n    itemsSelected: Movement[];\n    stores: SelectItem[];\n    storesFiltered: SelectItem[];\n    causals: SelectItem[];\n    causalsFiltered: SelectItem[];\n    dateStartValue: Date;\n    dateFinishValue: Date;\n    amountValue: number;\n\n    constructor(private activatedRoute: ActivatedRoute,\n                private sessionService: SessionService,\n                private invoiceService: InvoiceService,\n                private confirmationService: ConfirmationService,\n                private location: Location) {\n        this.codes = [];\n        this.itemsSelected = [];\n        sessionService.title = 'Invoice';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        // Subscribe to route params\n        this.sub = this.activatedRoute.params.subscribe(params => {\n            this.invoiceId = params['id'];\n            this.invoiceService.getById(this.invoiceId)\n                .subscribe(result => {\n                    this.item = result;\n                }, onerror => alert(onerror._body)\n            );\n            this.invoiceService.getMovementsById(this.invoiceId)\n                .subscribe(result => {\n                    this.items = result;\n                    this.updateTotals();\n                    this.buildFilter(this.items);\n                }, onerror => alert(onerror._body));\n        });\n    }\n\n    ngOnDestroy() {\n        // Clean sub to avoid memory leak\n        this.sub.unsubscribe();\n    }\n\n    cancelClick() {\n        this.location.back();\n    }\n\n    buildFilter(items: Movement[]) {\n        this.storesFiltered = [];\n        this.storesFiltered.push({label: 'All', value: null});\n        let filterStores = Helpers.distinct(items.map((item: Movement) => Helpers.newSelectItem(item.movementStore.storeName)));\n        this.storesFiltered = this.storesFiltered.concat(filterStores);\n\n        this.causalsFiltered = [];\n        this.causalsFiltered.push({label: 'All', value: null});\n        let filterCusals = Helpers.distinct(items.map((item: Movement) => Helpers.newSelectItem(item.movementCausal.causalName)));\n        this.causalsFiltered = this.causalsFiltered.concat(filterCusals);\n    }\n\n    showPickerClick() {\n        this.inputComponent.loadData(this.item.invoiceCustomer.customerId);\n    }\n\n    pickerClick(event: any) {\n        event.forEach(id => {\n            this.invoiceService\n                .addMovement(this.invoiceId, Number(id))\n                .subscribe(result => {\n                    this.invoiceService.getMovementsById(this.invoiceId)\n                                       .subscribe(res => {\n                                            this.items = res;\n                                            this.updateTotals();\n                                       });\n                }, onerror => alert(onerror._body));\n        });\n    }\n\n    removeClick() {\n        this.confirmationService.confirm({\n            message: 'Are you sure that you want to remove this selected items?',\n            accept: () => {\n                this.itemsSelected.forEach(p => {\n                    this.invoiceService\n                        .removeMovement(p.movementId)\n                        .subscribe(result => {\n                            this.items.splice(this.items.indexOf(p), 1);\n                            this.reloadData();\n                        }, onerror => alert(onerror._body));\n                });\n            }\n        });\n    }\n\n    reloadData() {\n        this.items =  this.items.map(p => p);\n        this.updateTotals();\n    }\n\n    updateTotals() {\n        if (!this.items || this.items.length === 0) {\n            return;\n        }\n        this.totalRecords = this.items.length;\n        this.totalAmount = this.items.map(p => p.movementAmount).reduce((sum, current) => sum + current);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/invoice/invoice.component.ts","module.exports = \"<img *ngIf=\\\"!invoice||!groups\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"noprint\\\">\\n        <button pButton type=\\\"button\\\" title=\\\"Movements\\\" (click)=\\\"cancelClick()\\\" class=\\\"ui-button-secondary\\\" style=\\\"width:50px\\\" icon=\\\"fa-reply\\\"></button>\\n        <button pButton type=\\\"button\\\" label=\\\"Print\\\" title=\\\"Print document\\\" (click)=\\\"printClick()\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-print\\\"></button>\\n        <button pButton type=\\\"button\\\" label=\\\"Send mail\\\" title=\\\"Send mail\\\" (click)=\\\"sendMailClick()\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-envelope\\\"></button>\\n    </div>\\n\\n    <div *ngFor=\\\"let items of groups\\\" #doc>          \\n        <table *ngIf=\\\"invoice\\\" class=\\\"table\\\" style=\\\"width: 100%\\\">    \\n            <thead>\\n                <tr> \\n                    <td colspan=\\\"5\\\"><img title=\\\"Header\\\" height=\\\"100\\\" width=\\\"100%\\\" src=\\\"http://{{document.location.host}}/media/header.png\\\" alt=\\\"Header not found. Upload on Settings -> Company -> Document Header\\\" style=\\\"margin: 10px 0\\\"></td> \\n                </tr> \\n                <tr> \\n                    <td><strong>Invoice n°</strong></td> \\n                    <td align=\\\"right\\\">{{invoice.invoiceNumber}}</td>\\n                    <td style=\\\"width: 20%\\\">&nbsp;</td>\\n                    <td><strong>Payment</strong></td> \\n                    <td align=\\\"right\\\">{{invoice.invoicePayment}}</td> \\n                </tr> \\n                <tr> \\n                    <td><strong>Date</strong></td> \\n                    <td align=\\\"right\\\">{{invoice.invoiceDate | date: 'yyyy-MM-dd'}}</td>\\n                    <td style=\\\"width: 20%\\\">&nbsp;</td>\\n                    <td><strong>Customer</strong></td>\\n                    <td rowspan=\\\"3\\\" align=\\\"right\\\">\\n                        {{invoice.invoiceCustomer.customerName}}\\n                        <br/>{{invoice.invoiceCustomer.customerAddress}}\\n                        <br/>{{invoice.invoiceCustomer.customerCity}}\\n                        <br/>{{invoice.invoiceCustomer.customerVatNumber !== '' ? invoice.invoiceCustomer.customerVatNumber : invoice.invoiceCustomer.customerFiscalCode}}\\n                    </td> \\n                </tr> \\n                <tr> \\n                    <td colspan=\\\"4\\\"><strong>Note</strong></td> \\n                </tr> \\n                <tr> \\n                    <td colspan=\\\"4\\\">{{invoice.invoiceNote}}</td>\\n                </tr>\\n            </thead>\\n        </table>\\n\\n        <table class=\\\"table\\\" cellpadding=\\\"2\\\" cellspacing=\\\"2\\\" style=\\\"width: 100%\\\">    \\n            <thead *ngIf=\\\"items\\\">\\n                <tr style=\\\"background-color: whitesmoke\\\"> \\n                    <td><strong>Barcode</strong></td> \\n                    <td><strong>Product</strong></td> \\n                    <td align=\\\"center\\\"><strong>Quantity</strong></td> \\n                    <td align=\\\"right\\\"><strong>Price</strong></td> \\n                    <td align=\\\"right\\\"><strong>Amount</strong></td> \\n                </tr> \\n            </thead>\\n            <tfoot style=\\\"background-color: whitesmoke\\\">\\n                <tr>\\n                    <td colspan=\\\"2\\\">Amount</td>\\n                    <td colspan=\\\"3\\\" align=\\\"right\\\">{{amount | currency: 'EUR' : true}}</td>\\n                </tr>\\n                <tr>\\n                    <td colspan=\\\"2\\\">Tax 22%</td>\\n                    <td colspan=\\\"3\\\" align=\\\"right\\\">{{total - amount | currency: 'EUR' : true}}</td>\\n                </tr>\\n                <tr>\\n                    <td colspan=\\\"2\\\"><strong>Totals</strong></td>\\n                    <td align=\\\"center\\\"><strong>{{totalItems}}</strong></td>\\n                    <td colspan=\\\"2\\\" align=\\\"right\\\"><strong>{{total | currency: 'EUR' : true}}</strong></td>\\n                </tr>\\n            </tfoot>\\n            <tbody> \\n                <tr *ngFor=\\\"let item of items\\\" style=\\\"height: 39px\\\"> \\n                    <td><span>{{item.movementArticleBarcode}}</span></td> \\n                    <td><span>{{item.movementArticleProduct | articleInfo:item.movementArticleBarcode}}</span></td> \\n                    <td align=\\\"center\\\"><span>{{item.movementArticleBarcode ? item.movementArticleQuantity : ''}}</span></td> \\n                    <td align=\\\"right\\\"><span>{{!item.movementArticleBarcode ? '' : item.movementArticlePrice | currency: 'EUR' : true}}</span></td> \\n                    <td align=\\\"right\\\"><span>{{!item.movementArticleBarcode ? '' : item.movementArticleAmount | currency: 'EUR' : true}}</span></td> \\n                </tr> \\n            </tbody>\\n        </table>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/invoice/invoicedocument.component.html\n// module id = ../../../../../src/app/invoice/invoicedocument.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy, ViewChild, ElementRef, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { SessionService } from './../services/session.service';\nimport { CompanyService } from './../services/company.service';\nimport { InvoiceService } from './../services/invoice.service';\nimport { Invoice, MovementArticle, Company, Email } from './../shared/models';\n\n@Component({\n    selector: 'invoicedocument-component',\n    templateUrl: 'invoicedocument.component.html'\n})\n\nexport class InvoiceDocumentComponent implements OnInit, OnDestroy {\n    @ViewChild('doc') doc: ElementRef;\n    private sub: any;\n    invoiceId: number;\n    totalItems = 0;\n    amount = 0.0;\n    total = 0.0;\n    invoice: Invoice;\n    groups: any[];\n\n    constructor(@Inject(DOCUMENT) private document: any,\n                private location: Location,\n                private activatedRoute: ActivatedRoute,\n                private sessionService: SessionService,\n                private companyService: CompanyService,\n                private invoiceService: InvoiceService) {\n        sessionService.title = 'Invoice';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        // Subscribe to route params\n        this.sub = this.activatedRoute.params.subscribe(params => {\n            this.invoiceId = params['id'];\n\n            this.invoiceService.getById(this.invoiceId)\n                .subscribe(result => {\n                    this.invoice = result;\n                }, onerror => alert(onerror._body)\n            );\n\n            this.invoiceService.getMovementArticlesById(this.invoiceId)\n                .subscribe(result => {\n                    // let items: MovementArticle[] = [];\n                    // for (let i = 0; i < 30; i++) {\n                    //     items.push(result[0]);\n                    // }\n                    this.groups = [];\n                    let array: MovementArticle[] = [];\n                    let index = 0;\n                    result.forEach((item) => {\n                        array.push(item);\n                        if (index > 11) {\n                            this.groups.push(array);\n                            array = [];\n                            index = -1;\n                        }\n                        index++;\n                    });\n                    let lenght = 13 - array.length;\n                    for (let i = 0; i < lenght; i++) {\n                        array.push(new MovementArticle());\n                    }\n                    this.groups.push(array);\n\n                    this.totalItems = result.map(p => p.movementArticleQuantity).reduce((sum, current) => sum + current);\n                    this.total = result.map(p => p.movementArticleAmount).reduce((sum, current) => sum + current);\n                    this.amount = this.total * 100 / 122;\n                }, onerror => alert(onerror._body)\n            );\n        });\n    }\n\n    ngOnDestroy() {\n        // Clean sub to avoid memory leak\n        this.sub.unsubscribe();\n    }\n\n    cancelClick() {\n        this.location.back();\n    }\n\n    printClick() {\n        window.print();\n    }\n    \n    sendMailClick() {\n        let email = new Email()\n        email.address = this.invoice.invoiceCustomer.customerEmail;\n        email.subject = \"Invoice n° \" + this.invoice.invoiceNumber;\n        email.content = this.doc.nativeElement.innerHTML;\n\n        this.companyService.sendMail(email)\n            .subscribe(\n                result => alert(result.content),\n                onerror => alert(onerror._body)\n            );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/invoice/invoicedocument.component.ts","module.exports = \"<p-confirmDialog icon=\\\"fa-trash-o\\\" [responsive]=\\\"true\\\"></p-confirmDialog>\\n<img *ngIf=\\\"!items\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\">\\n            <button pButton type=\\\"button\\\" label=\\\"{{totalRecords}} items\\\" title=\\\"Add item\\\" (click)=\\\"addClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-plus\\\"></button>\\n            <button pButton type=\\\"button\\\" label=\\\"Edit\\\" title=\\\"Edit item\\\" (click)=\\\"editClick()\\\" [disabled]=\\\"!selected\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-edit\\\"></button>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\">\\n            <p-splitButton label=\\\"Details\\\" icon=\\\"fa-bars\\\" (onClick)=\\\"openClick()\\\" [model]=\\\"buttons\\\" [disabled]=\\\"!selected\\\"></p-splitButton>\\n       </div>\\n    </p-toolbar>\\n\\n    <p-dataTable *ngIf=\\\"!displayPanel\\\" [responsive]=\\\"true\\\" [value]=\\\"items | dateFilter:dateStartValue:dateFinishValue | priceFilter:amountValue:'invoices'\\\"\\n        selectionMode=\\\"single\\\" [(selection)]=\\\"selected\\\" [contextMenu]=\\\"bts\\\"\\n        [paginator]=\\\"true\\\" [rows]=\\\"20\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinks]=\\\"5\\\" #dt>\\n        <p-column field=\\\"invoiceNumber\\\" header=\\\"Number\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n        <p-column field=\\\"invoiceDate\\\" header=\\\"Date\\\" [sortable]=\\\"true\\\" [filter]=\\\"false\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                {{data.invoiceDate | date:'yyyy-MM-dd'}}\\n            </ng-template>            \\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <i class=\\\"fa fa-close\\\" (click)=\\\"dateStartValue=null;dateFinishValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n                <p-calendar [(ngModel)]=\\\"dateStartValue\\\" [inputStyle]=\\\"{'width':'50%','float':'left'}\\\" dateFormat=\\\"yy-mm-dd\\\" placeholder=\\\"Start\\\" styleClass=\\\"ui-column-filter\\\"></p-calendar>\\n                <p-calendar [(ngModel)]=\\\"dateFinishValue\\\" [inputStyle]=\\\"{'width':'50%','float':'right'}\\\" dateFormat=\\\"yy-mm-dd\\\" placeholder=\\\"Finish\\\" styleClass=\\\"ui-column-filter\\\"></p-calendar>\\n            </ng-template>\\n        </p-column>\\n        <p-column field=\\\"invoiceCustomer.customerName\\\" header=\\\"Customer\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\" filterMatchMode=\\\"equals\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <p-dropdown [options]=\\\"customersFiltered\\\" [style]=\\\"{'width':'100%'}\\\" [filter]=\\\"true\\\" (onChange)=\\\"dt.filter($event.value,col.field,col.filterMatchMode)\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n            </ng-template>\\n        </p-column>\\n        <p-column header=\\\"Amount ({{amountValue||'No Filter'}})\\\" [editable]=\\\"false\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <i class=\\\"fa fa-close\\\" (click)=\\\"amountValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n                <p-slider [style]=\\\"{'margin-top':'14px','margin-bottom':'5px'}\\\" [(ngModel)]=\\\"amountValue\\\" [min]=\\\"5\\\" [max]=\\\"1000\\\"></p-slider>\\n            </ng-template>\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                {{data.invoiceAmount | currency: 'EUR' : true}}\\n            </ng-template>\\n        </p-column>\\n     </p-dataTable>\\n    \\n     <p-contextMenu #bts [model]=\\\"buttons\\\"></p-contextMenu>\\n\\n     <p-panel *ngIf=\\\"displayPanel\\\">\\n        <p-header>\\n            <div class=\\\"ui-helper-clearfix\\\">\\n                <span class=\\\"ui-panel-title\\\" style=\\\"font-size:20px;display:inline-block;margin-top:4px\\\"><b>Invoice</b></span>\\n                <button pButton type=\\\"button\\\" label=\\\"Close\\\" (click)=\\\"closeClick()\\\" style=\\\"float: right\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-close\\\"></button>\\n            </div>\\n        </p-header>\\n        <form [formGroup]=\\\"dataform\\\">\\n            <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\" *ngIf=\\\"selected\\\">\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label>Id</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">{{selected.invoiceId}}</div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"number\\\">Number</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText type=\\\"number\\\" formControlName=\\\"number\\\" [(ngModel)]=\\\"selected.invoiceNumber\\\" style=\\\"width: 50%\\\"/>\\n                        0 = auto increment\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['number'].valid&&dataform.controls['number'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Number is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"date\\\">Date</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <p-calendar formControlName=\\\"date\\\" [(ngModel)]=\\\"selected.invoiceDate\\\" dateFormat=\\\"yy-mm-dd\\\" [showIcon]=\\\"true\\\"></p-calendar>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['date'].valid&&dataform.controls['date'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Date is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"customer\\\">Customer</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <p-dropdown [options]=\\\"customers\\\" formControlName=\\\"customer\\\" [(ngModel)]=\\\"selected.invoiceCustomer\\\" [filter]=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"payment\\\">Payment</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <p-dropdown [options]=\\\"payments\\\" formControlName=\\\"payment\\\" [(ngModel)]=\\\"selected.invoicePayment\\\" [style]=\\\"{'width':'100%'}\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"note\\\">Note</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <textarea pInputTextarea formControlName=\\\"note\\\" [(ngModel)]=\\\"selected.invoiceNote\\\" style=\\\"width: 100%\\\"></textarea>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button *ngIf=\\\"selected.invoiceId>0\\\" type=\\\"button\\\" pButton icon=\\\"fa-trash-o\\\" class=\\\"ui-button-secondary\\\" (click)=\\\"deleteClick()\\\" label=\\\"Delete\\\"></button>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\"></div>\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button type=\\\"button\\\" pButton icon=\\\"fa-save\\\" class=\\\"ui-button-success\\\" (click)=\\\"saveClick()\\\" label=\\\"Save\\\" [disabled]=\\\"!dataform.valid\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </p-panel>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/invoice/invoices.component.html\n// module id = ../../../../../src/app/invoice/invoices.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { ConfirmationService, SelectItem, MenuItem } from 'primeng/primeng';\nimport { SessionService } from './../services/session.service';\nimport { InvoiceService } from './../services/invoice.service';\nimport { CustomerService } from './../services/customer.service';\nimport { Invoice } from './../shared/models';\nimport { Helpers } from './../shared/helpers';\n\n@Component({\n    selector: 'invoices-component',\n    templateUrl: 'invoices.component.html'\n})\n\nexport class InvoicesComponent implements OnInit {\n    totalRecords = 0;\n    items: Invoice[];\n    selected: Invoice;\n    customers: SelectItem[];\n    customersFiltered: SelectItem[];\n    payments: SelectItem[];\n    buttons: MenuItem[];\n    displayPanel: boolean;\n    dataform: FormGroup;\n    dateStartValue: Date;\n    dateFinishValue: Date;\n    amountValue: number;\n\n    constructor(private router: Router,\n                private sessionService: SessionService,\n                private invoiceService: InvoiceService,\n                private customerService: CustomerService,\n                private confirmationService: ConfirmationService,\n                private fb: FormBuilder) {\n        sessionService.title = 'Invoices';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        this.dataform = this.fb.group({\n            'number': new FormControl('', Validators.required),\n            'date': new FormControl('', Validators.required),\n            'customer': new FormControl('', Validators.required),\n            'payment': new FormControl('', Validators.required),\n            'note': new FormControl('', Validators.nullValidator)\n        });\n\n        this.invoiceService\n            .getAll()\n            .subscribe(result => {\n                this.items = result;\n                this.totalRecords = this.items.length;\n                this.customersFiltered = [];\n                this.customersFiltered.push({label: 'All', value: null});\n                let filterCustomer = Helpers.distinct(result.map((item: Invoice) => Helpers.newSelectItem(item.invoiceCustomer.customerName)));\n                this.customersFiltered = this.customersFiltered.concat(filterCustomer);\n             }\n        );\n\n        this.customerService\n            .getAll()\n            .subscribe(result => {\n                this.customers = [];\n                this.customers.push({label: '', value: null});\n                this.customers = this.customers.concat(result.map(p => Helpers.newSelectItem(p, p.customerName)));\n            }\n        );\n\n        this.invoiceService\n            .getPayments()\n            .subscribe(result => {\n                this.payments = result.map(p => Helpers.newSelectItem(p.value));\n            }\n        );\n\n        this.buttons = [\n            { label: 'Document', icon: 'fa-print', command: (event) => this.openClick('document/') }\n        ];\n    }\n\n    get isNew(): boolean { return this.selected.invoiceId === 0; }\n\n    get selectedIndex(): number { return this.items.indexOf(this.selected); }\n\n    addClick() {\n        this.selected = new Invoice();\n        this.selected.invoicePayment = this.payments[0].value;\n        this.displayPanel = true;\n    }\n\n    editClick() {\n        if (!this.selected) {\n            return;\n        }\n        this.displayPanel = true;\n    }\n\n    closeClick() {\n        this.displayPanel = false;\n        this.selected = null;\n    }\n\n    saveClick() {\n        if (this.isNew) {\n            this.invoiceService.create(this.selected)\n                .subscribe(result => {\n                    this.selected = result;\n                    this.totalRecords++;\n                    this.openClick();\n                }, onerror => alert(onerror._body));\n        } else {\n            this.invoiceService.update(this.selected.invoiceId, this.selected)\n                .subscribe(result => {\n                    this.items[this.selectedIndex] = result;\n                    this.closeClick();\n                }, onerror => {\n                    alert(onerror._body);\n                });\n        }\n    }\n\n    deleteClick() {\n        if (!this.selected) {\n            return;\n        }\n        this.confirmationService.confirm({\n            header: 'Confirmation delete on cascade',\n            message: 'Are you sure that you want to delete this invoice?',\n            accept: () => {\n                this.invoiceService.delete(this.selected.invoiceId)\n                    .subscribe(result => {\n                        this.items.splice(this.selectedIndex, 1);\n                        this.totalRecords--;\n                        this.closeClick();\n                    }, onerror => alert(onerror._body));\n            }\n        });\n    }\n\n    openClick(detail = '') {\n        if (!this.selected) {\n            return;\n        }\n        this.router.navigateByUrl('invoice/' + detail + this.selected.invoiceId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/invoice/invoices.component.ts","module.exports = \"<p-growl [value]=\\\"msgs\\\"></p-growl>\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <h1><img src=\\\"/assets/logo.jpg\\\" height=\\\"72\\\"> Authentication</h1>\\n    <hr />\\n\\n    <form [formGroup]=\\\"userform\\\">\\n    <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\n        <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\">\\n                <label for=\\\"username\\\">Username</label>\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\">\\n                <input pInputText [(ngModel)]=\\\"user.username\\\" type=\\\"email\\\" formControlName=\\\"username\\\"/>\\n            </div>\\n            <div class=\\\"ui-grid-col-4\\\">\\n                <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['username'].valid&&userform.controls['username'].dirty\\\">\\n                    <i class=\\\"fa fa-close\\\"></i>\\n                    Email is required\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\">\\n                <label for=\\\"password\\\">Password</label>\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\">\\n                <input pInputText [(ngModel)]=\\\"user.password\\\" type=\\\"password\\\" formControlName=\\\"password\\\"/>\\n            </div>\\n            <div class=\\\"ui-grid-col-4\\\">\\n                <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['password'].valid&&userform.controls['password'].dirty\\\">\\n                    <i class=\\\"fa fa-close\\\"></i>\\n                    <span *ngIf=\\\"userform.controls['password'].errors['required']\\\">Password is required</span>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\">\\n            </div>\\n            <div class=\\\"ui-grid-col-4\\\">\\n                <button type=\\\"button\\\" pButton label=\\\"Login\\\" (click)=\\\"login()\\\" icon=\\\"fa-sign-in\\\" [disabled]=\\\"!userform.valid\\\"></button>\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\">\\n            </div>\\n        </div>\\n        <!--\\n        <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\"></div>\\n            <div class=\\\"ui-grid-col-10\\\">\\n                <p>\\n                    <br/>\\n                    <a [routerLink]=\\\"['/login/register']\\\">Register</a><br/>\\n                    Too lazy to register?<br/>\\n                    Login with <a href=\\\"/login/facebook\\\">Facebook</a> or <a href=\\\"/login/google\\\">Google</a>\\n                </p>\\n            </div>\\n        </div>\\n        -->\\n    </div>\\n    </form>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { Message } from 'primeng/primeng';\nimport { SessionService } from './../services/session.service';\nimport { Login } from './../shared/models';\n\n@Component({\n    selector: 'login-component',\n\ttemplateUrl: 'login.component.html'\n})\n\nexport class LoginComponent implements OnInit {\n\tuserform: FormGroup;\n\tpublic user = new Login('', '');\n    public msgs: Message[] = [];\n\n\tconstructor(\n\t\tprivate sessionService: SessionService,\n\t\tprivate fb: FormBuilder) {\n\t\tsessionService.title = 'Login';\n    }\n\n\tngOnInit() {\n        this.userform = this.fb.group({\n            'username': new FormControl('', Validators.required),\n            'password': new FormControl('', Validators.required)\n        });\n    }\n\n\tlogin() {\n    \tthis.sessionService.login(this.user)\n    \t\t.subscribe(result => {\n\t\t\t\tif (result.login === 'ok') {\n\t\t    \t\tthis.sessionService.grantCredentials(result);\n\t\t    \t} else {\n\t\t    \t\tthis.msgs.push({severity: 'warn', summary: 'Authentication', detail: result.error});\n\t\t\t\t}\n\t\t\t}, error => this.msgs.push({severity: 'error', summary: 'Authentication', detail: error}));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/login/login.component.ts","module.exports = \"<p-growl [value]=\\\"msgs\\\"></p-growl>\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <h1><img src=\\\"/assets/logo.jpg\\\" height=\\\"72\\\"> Registration</h1>\\n    <hr />\\n\\n    <form [formGroup]=\\\"userform\\\">\\n    <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\n        <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\">\\n                <label for=\\\"username\\\">Username</label>\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\">\\n                <input pInputText [(ngModel)]=\\\"user.username\\\" type=\\\"email\\\" formControlName=\\\"username\\\"/>\\n            </div>\\n            <div class=\\\"ui-grid-col-4\\\">\\n                <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['username'].valid&&userform.controls['username'].dirty\\\">\\n                    <i class=\\\"fa fa-close\\\"></i>\\n                    Email is required\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\">\\n                <label for=\\\"password\\\">Password</label>\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\">\\n                <input pInputText [(ngModel)]=\\\"user.password\\\" type=\\\"password\\\" formControlName=\\\"password\\\"/>\\n            </div>\\n            <div class=\\\"ui-grid-col-4\\\">\\n                <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['password'].valid&&userform.controls['password'].dirty\\\">\\n                    <i class=\\\"fa fa-close\\\"></i>\\n                    <span *ngIf=\\\"userform.controls['password'].errors['required']\\\">Password is required</span>\\n                    <span *ngIf=\\\"userform.controls['password'].errors['minlength']\\\">Must be longer than 6 characters</span>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\">\\n                <label for=\\\"password2\\\">Repeat Password</label>\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\">\\n                <input pInputText type=\\\"password\\\" formControlName=\\\"password2\\\"/>\\n            </div>\\n            <div class=\\\"ui-grid-col-4\\\">\\n                <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userform.controls['password2'].valid&&userform.controls['password2'].dirty\\\">\\n                    <i class=\\\"fa fa-close\\\"></i>\\n                    <span *ngIf=\\\"userform.controls['password2'].errors['required']\\\">Repeat Password is required</span>\\n                    <span *ngIf=\\\"userform.controls['password2'].errors['passwordMatch']\\\">Must be equal to Password</span>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\"></div>\\n            <div class=\\\"ui-grid-col-4\\\">\\n                <button type=\\\"button\\\" pButton label=\\\"Register\\\" (click)=\\\"register()\\\" icon=\\\"fa-sign-in\\\" [disabled]=\\\"!userform.valid\\\"></button>\\n            </div>\\n            <div class=\\\"ui-grid-col-6\\\"></div>\\n        </div>\\n        <div class=\\\"ui-grid-row\\\">\\n            <div class=\\\"ui-grid-col-2\\\"></div>\\n            <div class=\\\"ui-grid-col-10\\\">\\n                <p>\\n                    <br/>\\n                    Too lazy to register?<br/>\\n                    Login with <a href=\\\"/login/facebook\\\">Facebook</a> or <a href=\\\"/login/google\\\">Google</a>\\n                </p>\\n            </div>\\n        </div>\\n    </div>\\n    </form>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/login/register.component.html\n// module id = ../../../../../src/app/login/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { Message } from 'primeng/primeng';\nimport { SessionService } from './../services/session.service';\nimport { Login } from './../shared/models';\n\n@Component({\n    selector: 'register-component',\n\ttemplateUrl: 'register.component.html'\n})\n\nexport class RegisterComponent implements OnInit {\n\n\tuserform: FormGroup;\n   \tpublic user = new Login('', '');\n    public msgs: Message[] = [];\n\n\tconstructor(\n\t\tprivate sessionService: SessionService,\n\t\tprivate fb: FormBuilder) {\n       \tsessionService.title = 'Register';\n    }\n\n\tngOnInit() {\n        this.userform = this.fb.group({\n            'username': new FormControl('', Validators.required),\n            'password': new FormControl('', Validators.compose([Validators.required, Validators.minLength(6)])),\n\t\t\t'password2': new FormControl('', Validators.required)\n        });\n    }\n\n\tregister() {\n\t\tif (this.userform.value.password !== this.userform.value.password2) {\n\t\t\tthis.msgs.push({severity: 'error', summary: 'Registration', detail: 'The passwords do not match'});\n\t\t\treturn;\n\t\t}\n\t\t// this.sessionService.register(this.user)\n    \t// \t.subscribe(result => {\n\t\t// \t\tif (result.login === 'ok') {\n\t\t// \t\t\tthis.sessionService.grantCredentials(result);\n\t\t//     \t} else {\n\t\t//     \t\tthis.msgs.push({severity: 'warn', summary: 'Authentication', detail: result.error});\n\t\t// \t\t}\n\t\t// \t},\n\t\t// \terror => this.msgs.push({severity: 'error', summary: 'Registration', detail: error}));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/login/register.component.ts","module.exports = \"<img *ngIf=\\\"!movement||!groups\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"noprint\\\">\\n        <button pButton type=\\\"button\\\" title=\\\"Movements\\\" (click)=\\\"cancelClick()\\\" class=\\\"ui-button-secondary\\\" style=\\\"width:50px\\\" icon=\\\"fa-reply\\\"></button>\\n        <button pButton type=\\\"button\\\" label=\\\"Print\\\" title=\\\"Print document\\\" (click)=\\\"printClick()\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-print\\\"></button>\\n        <button pButton type=\\\"button\\\" label=\\\"Send mail\\\" title=\\\"Send mail\\\" (click)=\\\"sendMailClick()\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-envelope\\\"></button>\\n    </div>\\n\\n    <div *ngFor=\\\"let items of groups\\\" #doc>          \\n        <table *ngIf=\\\"movement\\\" class=\\\"table\\\" style=\\\"width: 100%\\\">    \\n            <thead>\\n                <tr> \\n                    <td colspan=\\\"5\\\"><img title=\\\"Header\\\" height=\\\"100\\\" width=\\\"100%\\\" src=\\\"http://{{document.location.host}}/media/header.png\\\" alt=\\\"Header not found. Upload on Settings -> Company -> Document Header\\\" style=\\\"margin: 10px 0\\\"></td> \\n                </tr> \\n                <tr> \\n                    <td><strong>Number</strong></td> \\n                    <td align=\\\"right\\\">{{movement.movementNumber}}</td>\\n                    <td style=\\\"width: 20%\\\">&nbsp;</td>\\n                    <td><strong>Store</strong></td> \\n                    <td align=\\\"right\\\">{{movement.movementStore.storeName}}</td> \\n                </tr> \\n                <tr> \\n                    <td><strong>Date</strong></td> \\n                    <td align=\\\"right\\\">{{movement.movementDate | date: 'yyyy-MM-dd'}}</td>\\n                    <td style=\\\"width: 20%\\\">&nbsp;</td>\\n                    <td><strong>Causal</strong></td> \\n                    <td align=\\\"right\\\">{{movement.movementCausal.causalName}}</td> \\n                </tr> \\n                <tr> \\n                    <td><strong>Status</strong></td> \\n                    <td align=\\\"right\\\">{{movement.movementStatus}}</td>\\n                    <td style=\\\"width: 20%\\\">&nbsp;</td>\\n                    <td><strong>Customer</strong></td> \\n                    <td rowspan=\\\"3\\\" align=\\\"right\\\">\\n                        {{movement.movementCustomer.customerName}}\\n                        <br/>{{movement.movementCustomer.customerAddress}}\\n                        <br/>{{movement.movementCustomer.customerCity}}\\n                    </td> \\n                </tr> \\n                <tr> \\n                    <td colspan=\\\"4\\\"><strong>Note</strong></td> \\n                </tr> \\n                <tr> \\n                    <td colspan=\\\"4\\\">{{movement.movementNote}}</td>\\n                </tr>\\n            </thead>\\n        </table>\\n\\n        <table class=\\\"table\\\" cellpadding=\\\"2\\\" cellspacing=\\\"2\\\" style=\\\"width: 100%\\\">    \\n            <thead *ngIf=\\\"item\\\">\\n                <tr style=\\\"background-color: whitesmoke\\\"> \\n                    <td><strong>Barcode</strong></td> \\n                    <td><strong>Product</strong></td> \\n                    <td align=\\\"center\\\"><strong>Quantity</strong></td> \\n                    <td align=\\\"right\\\"><strong>Price</strong></td> \\n                    <td align=\\\"right\\\"><strong>Amount</strong></td> \\n                </tr> \\n            </thead>\\n            <tfoot style=\\\"background-color: whitesmoke\\\">\\n                <tr>\\n                    <td colspan=\\\"2\\\">Amount</td>\\n                    <td colspan=\\\"3\\\" align=\\\"right\\\">{{amount | currency: 'EUR' : true}}</td>\\n                </tr>\\n                <tr>\\n                    <td colspan=\\\"2\\\">Tax 22%</td>\\n                    <td colspan=\\\"3\\\" align=\\\"right\\\">{{total - amount | currency: 'EUR' : true}}</td>\\n                </tr>\\n                <tr>\\n                    <td colspan=\\\"2\\\"><strong>Totals</strong></td>\\n                    <td align=\\\"center\\\"><strong>{{totalItems}}</strong></td>\\n                    <td colspan=\\\"2\\\" align=\\\"right\\\"><strong>{{total | currency: 'EUR' : true}}</strong></td>\\n                </tr>\\n            </tfoot>\\n            <tbody> \\n                <tr *ngFor=\\\"let item of items\\\" style=\\\"height: 39px\\\"> \\n                    <td><span>{{item.movementArticleBarcode}}</span></td> \\n                    <td><span>{{item.movementArticleProduct | articleInfo:item.movementArticleBarcode}}</span></td> \\n                    <td align=\\\"center\\\"><span>{{item.movementArticleBarcode ? item.movementArticleQuantity : ''}}</span></td> \\n                    <td align=\\\"right\\\"><span>{{!item.movementArticleBarcode ? '' : item.movementArticlePrice | currency: 'EUR' : true}}</span></td> \\n                    <td align=\\\"right\\\"><span>{{!item.movementArticleBarcode ? '' : item.movementArticleAmount | currency: 'EUR' : true}}</span></td> \\n                </tr> \\n            </tbody>\\n        </table>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/movement/document.component.html\n// module id = ../../../../../src/app/movement/document.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy, ViewChild, ElementRef, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { SessionService } from './../services/session.service';\nimport { MovementService } from './../services/movement.service';\nimport { CompanyService } from './../services/company.service';\nimport { Movement, MovementArticle, Company, Email } from './../shared/models';\n\n@Component({\n    selector: 'document-component',\n    templateUrl: 'document.component.html'\n})\n\nexport class DocumentComponent implements OnInit, OnDestroy {\n    @ViewChild('doc') doc: ElementRef;\n    private sub: any;\n    movementId: number;\n    totalItems = 0;\n    amount = 0.0;\n    total = 0.0;\n    movement: Movement;\n    groups: any[];\n\n    constructor(@Inject(DOCUMENT) private document: any,\n                private location: Location,\n                private activatedRoute: ActivatedRoute,\n                private sessionService: SessionService,\n                private companyService: CompanyService,\n                private movementService: MovementService) {\n        sessionService.title = 'Document';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        // Subscribe to route params\n        this.sub = this.activatedRoute.params.subscribe(params => {\n            this.movementId = params['id'];\n\n            this.movementService.getById(this.movementId)\n                .subscribe(result => {\n                    this.movement = result;\n                }, onerror => alert(onerror._body)\n            );\n\n            this.movementService.getItemsById(this.movementId)\n                .subscribe(result => {\n                    // let items: MovementArticle[] = [];\n                    // for (let i = 0; i < 30; i++) {\n                    //     items.push(result[0]);\n                    // }\n                    this.groups = [];\n                    let array: MovementArticle[] = [];\n                    let index = 0;\n                    result.forEach((item) => {\n                        array.push(item);\n                        if (index > 11) {\n                            this.groups.push(array);\n                            array = [];\n                            index = -1;\n                        }\n                        index++;\n                    });\n                    const lenght = 13 - array.length;\n                    for (let i = 0; i < lenght; i++) {\n                        array.push(new MovementArticle());\n                    }\n                    this.groups.push(array);\n\n                    this.totalItems = result.map(p => p.movementArticleQuantity).reduce((sum, current) => sum + current);\n                    this.total = result.map(p => p.movementArticleAmount).reduce((sum, current) => sum + current);\n                    this.amount = this.total * 100 / 122;\n                }, onerror => alert(onerror._body)\n            );\n        });\n    }\n\n    ngOnDestroy() {\n        // Clean sub to avoid memory leak\n        this.sub.unsubscribe();\n    }\n\n    cancelClick() {\n        this.location.back();\n    }\n\n    printClick() {\n        window.print();\n    }\n\n    sendMailClick() {\n        const email = new Email()\n        email.address = this.movement.movementCustomer.customerEmail;\n        email.subject = 'Document n° ' + this.movement.movementNumber;\n        email.content = this.doc.nativeElement.innerHTML;\n\n        this.companyService.sendMail(email)\n            .subscribe(\n                result => alert(result.content),\n                onerror => alert(onerror._body)\n            );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/movement/document.component.ts","module.exports = \"<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"fa-trash-o\\\" [responsive]=\\\"true\\\"></p-confirmDialog>\\n<img *ngIf=\\\"!items\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <button pButton type=\\\"button\\\" title=\\\"Movements\\\" style=\\\"position: absolute; top: 154px; left: 30px; width:50px;\\\" (click)=\\\"cancelClick()\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-reply\\\"></button>\\n  \\n    <p-toolbar *ngIf=\\\"item\\\">\\n        <div class=\\\"ui-toolbar-group-left\\\" style=\\\"margin-left:60px;\\\">\\n            <span><b>n°</b> {{item.movementNumber}}</span> <span><b>date</b>: {{item.movementDate | date: 'yyyy-MM-dd'}}</span>\\n            <br/><span><b>causal</b>: {{item.movementCausal.causalName}}</span>\\n            <br/><span><b>store</b>: {{item.movementStore.storeName}}</span>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\" style=\\\"text-align: right;\\\">\\n            <span><b>status</b>: {{item.movementStatus}}</span>\\n            <br/><button *ngIf=\\\"item.movementStatus!=='Completed'\\\" type=\\\"button\\\" pButton icon=\\\"fa-save\\\" class=\\\"ui-button-success\\\" (click)=\\\"completedClick()\\\" label=\\\"Completed\\\" style=\\\"margin-top: 10px\\\"></button>\\n        </div>\\n    </p-toolbar>\\n\\n    <p-dataTable *ngIf=\\\"!inputComponent.isOpen\\\" [responsive]=\\\"true\\\" [editable]=\\\"true\\\" [totalRecords]=\\\"totalRecords\\\" [value]=\\\"items | priceFilter:priceValue:'movement':amountValue | articleFilter:articleValue\\\" #dt>\\n        <p-header *ngIf=\\\"!committed\\\">\\n            <button pButton style=\\\"position: absolute;left: 10px; top: 8px;\\\" type=\\\"button\\\" title=\\\"Article picker\\\" (click)=\\\"showPickerClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-search-plus\\\"></button>\\n            <p-chips [(ngModel)]=\\\"barcodes\\\" placeholder=\\\"barcode reading\\\" (onAdd)=\\\"addBarcode()\\\"></p-chips>\\n        </p-header>\\n        <p-footer>\\n            <span style=\\\"float: left\\\"><b>{{totalRecords}}</b> rows</span>\\n            <span style=\\\"float: right\\\">items <b>{{totalItems}}</b> amount <b>{{totalAmount | currency: 'EUR' : true}}</b></span>\\n            <p>&nbsp;</p>\\n        </p-footer>\\n        <p-column field=\\\"movementArticleBarcode\\\" header=\\\"Barcode\\\" [editable]=\\\"false\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n        <p-column field=\\\"movementArticleProduct\\\" header=\\\"Product\\\" [editable]=\\\"false\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <input pInputText [(ngModel)]=\\\"articleValue\\\" placeholder=\\\"Search\\\" style=\\\"width: 100%;margin-top: 4px;\\\" styleClass=\\\"ui-column-filter\\\"/>\\n            </ng-template>\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                {{data.movementArticleProduct | articleInfo:data.movementArticleBarcode}}\\n            </ng-template>\\n        </p-column>\\n        <p-column field=\\\"movementArticleQuantity\\\" header=\\\"Quantity\\\" [editable]=\\\"true\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"editor\\\">\\n                <input pInputText type=\\\"number\\\" [disabled]=\\\"committed\\\" [(ngModel)]=\\\"data.movementArticleQuantity\\\" (change)=\\\"onUpdate(data)\\\"/>\\n           </ng-template>\\n        </p-column>\\n        <p-column header=\\\"Price ({{priceValue||'No Filter'}})\\\" [editable]=\\\"true\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <i class=\\\"fa fa-close\\\" (click)=\\\"priceValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n                <p-slider [style]=\\\"{'margin-top':'14px','margin-bottom':'5px'}\\\" [(ngModel)]=\\\"priceValue\\\" [min]=\\\"5\\\" [max]=\\\"1000\\\"></p-slider>\\n            </ng-template>\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"editor\\\">\\n                <input pInputText type=\\\"number\\\" min=\\\"0\\\" [disabled]=\\\"committed\\\" [(ngModel)]=\\\"data.movementArticlePrice\\\" (change)=\\\"onUpdate(data)\\\"/>\\n            </ng-template>\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                {{data.movementArticlePrice | currency: 'EUR' : true}}\\n            </ng-template>\\n        </p-column>\\n        <p-column header=\\\"Amount ({{amountValue||'No Filter'}})\\\" [editable]=\\\"false\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <i class=\\\"fa fa-close\\\" (click)=\\\"amountValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n                <p-slider [style]=\\\"{'margin-top':'14px','margin-bottom':'5px'}\\\" [(ngModel)]=\\\"amountValue\\\" [min]=\\\"5\\\" [max]=\\\"10000\\\"></p-slider>\\n            </ng-template>\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                {{data.movementArticleAmount | currency: 'EUR' : true}}\\n            </ng-template>\\n        </p-column>\\n    </p-dataTable>\\n\\n    <article-picker (onPicked)=\\\"pickerClick($event)\\\"></article-picker>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/movement/movement.component.html\n// module id = ../../../../../src/app/movement/movement.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy, Input, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ConfirmationService, SelectItem } from 'primeng/primeng';\nimport { SessionService } from './../services/session.service';\nimport { MovementService } from './../services/movement.service';\nimport { Movement, MovementArticle } from './../shared/models';\nimport { Helpers } from './../shared/helpers';\nimport { ArticlePickerComponent } from './../shared/article-picker.component';\n\n@Component({\n    selector: 'movement-component',\n    templateUrl: 'movement.component.html'\n})\n\nexport class MovementComponent implements OnInit, OnDestroy {\n    @ViewChild(ArticlePickerComponent) inputComponent: ArticlePickerComponent;\n    private sub: any;\n    movementId: number;\n    totalRecords = 0;\n    totalItems = 0;\n    totalAmount = 0.0;\n    barcodes: string[];\n    item: Movement;\n    items: MovementArticle[];\n    articleValue: string;\n    priceValue: number;\n    amountValue: number;\n    committed: boolean;\n\n    constructor(private activatedRoute: ActivatedRoute,\n                private sessionService: SessionService,\n                private movementService: MovementService,\n                private confirmationService: ConfirmationService,\n                private location: Location) {\n        this.barcodes = [];\n        sessionService.title = 'Movement';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        // Subscribe to route params\n        this.sub = this.activatedRoute.params.subscribe(params => {\n            this.movementId = Number(params['id']);\n            this.movementService.getById(this.movementId)\n                .subscribe(result => {\n                    this.item = result;\n                    this.committed = result.movementStatus !== 'New';\n                }, onerror => alert(onerror._body)\n            );\n            this.movementService.getItemsById(this.movementId)\n                .subscribe(result => {\n                    this.items = result;\n                    this.updateTotals();\n                }, onerror => alert(onerror._body)\n            );\n        });\n    }\n\n    ngOnDestroy() {\n        // Clean sub to avoid memory leak\n        this.sub.unsubscribe();\n    }\n\n    cancelClick() {\n        this.location.back();\n    }\n\n    reloadData() {\n        // let newItems = new Array<MovementArticle>(this.items.length);\n        // for (var i = 0; i < newItems.length; i++) {\n        //     newItems[i] = this.items[i];\n        // }\n        this.items =  this.items.map(p => p);\n        this.updateTotals();\n    }\n\n   updateTotals() {\n        if (!this.items || this.items.length === 0) {\n            this.totalRecords = 0;\n            this.totalItems = 0;\n            this.totalAmount = 0;\n            return;\n        }\n        this.totalRecords = this.items.length;\n        this.totalItems = this.items.map(p => p.movementArticleQuantity).reduce((sum, current) => sum + current);\n        this.totalAmount = this.items.map(p => p.movementArticleAmount).reduce((sum, current) => sum + current);\n    }\n\n    addBarcode() {\n        this.barcodes.forEach(data => {\n            let array = data.split('#');\n            let barcode = array[0];\n            let quantity = array.length === 2 ? Number(array[1]) : 1.0;\n            let newItem = this.items.find(p => p.movementArticleBarcode === barcode);\n            if (newItem) {\n                newItem.movementArticleQuantity += quantity;\n                this.movementService\n                    .updateItem(newItem.movementArticleId, newItem)\n                    .subscribe(result => {\n                        this.barcodes.splice(this.barcodes.indexOf(data), 1);\n                        this.updateTotals();\n                    }, onerror => alert(onerror._body));\n            } else {\n                newItem = new MovementArticle();\n                newItem.movementId = this.movementId;\n                newItem.movementArticleBarcode = barcode;\n                newItem.movementArticleQuantity = quantity;\n                let price = this.item.movementCausal.causalQuantity > 0 ? 'purchase' : this.item.movementCausal.causalQuantity < 0 ? 'selling' : 'none';\n                this.movementService\n                    .createItem(newItem, price)\n                    .subscribe(result => {\n                        this.items.push(result);\n                        this.barcodes.splice(this.barcodes.indexOf(data), 1);\n                        this.reloadData();\n                    }, onerror => alert(onerror._body));\n            }\n        });\n    }\n\n    showPickerClick() {\n        this.inputComponent.loadData();\n    }\n\n    pickerClick(event: any) {\n        this.barcodes = this.barcodes.concat(event);\n        this.addBarcode();\n    }\n\n    onUpdate(data: MovementArticle) {\n        if (data.movementArticleQuantity === 0) {\n            data.movementArticleAmount = 0;\n            this.confirmationService.confirm({\n                message: 'Are you sure that you want to delete this item?',\n                accept: () => {\n                    this.movementService\n                        .deleteItem(data.movementArticleId)\n                        .subscribe(result => {\n                            this.items.splice(this.items.indexOf(data), 1);\n                            this.reloadData();\n                        }, onerror => alert(onerror._body));\n                }\n            });\n        } else {\n            this.movementService\n                .updateItem(data.movementArticleId, data)\n                .subscribe(result => {\n                    data.movementArticleAmount = result.movementArticleAmount;\n                    this.updateTotals();\n                }, onerror => alert(onerror._body));\n        }\n    }\n\n    completedClick() {\n        this.confirmationService.confirm({\n            message: 'Are you sure that you want to complete this movement?',\n            accept: () => {\n                this.item.movementStatus = 'Completed';\n                this.movementService.update(this.item.movementId, this.item)\n                    .subscribe(result => {\n                        this.cancelClick();\n                    }, onerror => alert(onerror._body)\n                );\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/movement/movement.component.ts","module.exports = \"<p-confirmDialog icon=\\\"fa-trash-o\\\" [responsive]=\\\"true\\\"></p-confirmDialog>\\n<img *ngIf=\\\"!items\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\">\\n            <button pButton type=\\\"button\\\" label=\\\"{{totalRecords}} items\\\" title=\\\"Add item\\\" (click)=\\\"addClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-plus\\\"></button>\\n            <button pButton type=\\\"button\\\" title=\\\"Refresh\\\" (click)=\\\"refreshClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-refresh\\\"></button>\\n            <button pButton type=\\\"button\\\" label=\\\"Edit\\\" title=\\\"Edit item\\\" (click)=\\\"editClick()\\\" [disabled]=\\\"!selected\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-edit\\\"></button>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\">\\n            <p-splitButton label=\\\"Details\\\" icon=\\\"fa-bars\\\" (onClick)=\\\"openClick()\\\" [model]=\\\"buttons\\\" [disabled]=\\\"!selected\\\"></p-splitButton>\\n        </div>\\n    </p-toolbar>\\n\\n    <p-dataTable *ngIf=\\\"!displayPanel\\\" [responsive]=\\\"true\\\" [value]=\\\"items | dateFilter:dateStartValue:dateFinishValue | priceFilter:amountValue:'movements'\\\"\\n        selectionMode=\\\"single\\\" [(selection)]=\\\"selected\\\" [contextMenu]=\\\"bts\\\"\\n        [paginator]=\\\"true\\\" [rows]=\\\"20\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinks]=\\\"5\\\" #dt>\\n        <p-column field=\\\"movementNumber\\\" header=\\\"Number\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n        <p-column field=\\\"movementDate\\\" header=\\\"Date\\\" [sortable]=\\\"true\\\" [filter]=\\\"false\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                {{data.movementDate | date:'yyyy-MM-dd'}}\\n            </ng-template>            \\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <i class=\\\"fa fa-close\\\" (click)=\\\"dateStartValue=null;dateFinishValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n                <p-calendar [(ngModel)]=\\\"dateStartValue\\\" [inputStyle]=\\\"{'width':'50%','float':'left'}\\\" dateFormat=\\\"yy-mm-dd\\\" placeholder=\\\"Start\\\" styleClass=\\\"ui-column-filter\\\"></p-calendar>\\n                <p-calendar [(ngModel)]=\\\"dateFinishValue\\\" [inputStyle]=\\\"{'width':'50%','float':'right'}\\\" dateFormat=\\\"yy-mm-dd\\\" placeholder=\\\"Finish\\\" styleClass=\\\"ui-column-filter\\\"></p-calendar>\\n            </ng-template>\\n        </p-column>\\n        <p-column field=\\\"movementCausal.causalName\\\" header=\\\"Causal\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\" filterMatchMode=\\\"equals\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <p-dropdown [options]=\\\"causalsFiltered\\\" [style]=\\\"{'width':'100%'}\\\" (onChange)=\\\"dt.filter($event.value,col.field,col.filterMatchMode)\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n            </ng-template>\\n        </p-column>\\n        <p-column field=\\\"movementStore.storeName\\\" header=\\\"Store\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\" filterMatchMode=\\\"equals\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <p-dropdown [options]=\\\"storesFiltered\\\" [style]=\\\"{'width':'100%'}\\\" (onChange)=\\\"dt.filter($event.value,col.field,col.filterMatchMode)\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n            </ng-template>\\n        </p-column>\\n        <p-column field=\\\"movementCustomer.customerName\\\" header=\\\"Customer\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\" filterMatchMode=\\\"equals\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <p-dropdown [options]=\\\"customersFiltered\\\" [style]=\\\"{'width':'100%'}\\\" [filter]=\\\"true\\\" (onChange)=\\\"dt.filter($event.value,col.field,col.filterMatchMode)\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n            </ng-template>\\n        </p-column>\\n        <p-column field=\\\"movementStatus\\\" header=\\\"Status\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\" filterMatchMode=\\\"equals\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <p-dropdown [options]=\\\"statusFiltered\\\" [style]=\\\"{'width':'100%'}\\\" (onChange)=\\\"dt.filter($event.value,col.field,col.filterMatchMode)\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n            </ng-template>\\n        </p-column>\\n        <p-column header=\\\"Amount ({{amountValue||'No Filter'}})\\\" [editable]=\\\"false\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <i class=\\\"fa fa-close\\\" (click)=\\\"amountValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n                <p-slider [style]=\\\"{'margin-top':'14px','margin-bottom':'5px'}\\\" [(ngModel)]=\\\"amountValue\\\" [min]=\\\"5\\\" [max]=\\\"1000\\\"></p-slider>\\n            </ng-template>\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                {{data.movementAmount | currency: 'EUR' : true}}\\n            </ng-template>\\n        </p-column>\\n    </p-dataTable>\\n    \\n    <p-contextMenu #bts [model]=\\\"buttons\\\"></p-contextMenu>\\n\\n    <p-panel *ngIf=\\\"displayPanel\\\">\\n        <p-header>\\n            <div class=\\\"ui-helper-clearfix\\\">\\n                <span class=\\\"ui-panel-title\\\" style=\\\"font-size:20px;display:inline-block;margin-top:6px\\\"><b>Movement</b></span>\\n                <button pButton type=\\\"button\\\" label=\\\"Close\\\" (click)=\\\"closeClick()\\\" style=\\\"float: right\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-close\\\"></button>\\n            </div>\\n        </p-header>\\n        <form [formGroup]=\\\"dataform\\\">\\n            <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\" *ngIf=\\\"selected\\\">\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label>Id</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">{{selected.movementId}}</div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"number\\\">Number</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <div *ngIf=\\\"selected.movementStatus==='New';then new_number else current_number\\\"></div>\\n                        <ng-template #new_number>\\n                           <input pInputText type=\\\"number\\\" formControlName=\\\"number\\\" [(ngModel)]=\\\"selected.movementNumber\\\" style=\\\"width: 50%\\\"/>\\n                            0 = auto increment\\n                        </ng-template>\\n                        <ng-template #current_number>\\n                            <input pInputText disabled=\\\"true\\\" formControlName=\\\"number\\\" [(ngModel)]=\\\"selected.movementNumber\\\" style=\\\"width: 50%\\\"/>\\n                        </ng-template>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['number'].valid&&dataform.controls['number'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Number is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"date\\\">Date</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <p-calendar formControlName=\\\"date\\\" [(ngModel)]=\\\"selected.movementDate\\\" [disabled]=\\\"selected.movementStatus!=='New'\\\" dateFormat=\\\"yy-mm-dd\\\" [showIcon]=\\\"true\\\"></p-calendar>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['date'].valid&&dataform.controls['date'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Date is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"causal\\\">Causal</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <p-dropdown [options]=\\\"causals\\\" formControlName=\\\"causal\\\" [(ngModel)]=\\\"selected.movementCausal\\\" [disabled]=\\\"selected.movementStatus!=='New'\\\" (onChange)=\\\"onCausalChange($event)\\\" [style]=\\\"{'width':'100%'}\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['causal'].valid&&dataform.controls['causal'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i>\\n                            <span *ngIf=\\\"dataform.controls['causal'].errors['required']\\\">Causal is required</span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"selected.movementCausal.causalIsPos\\\" class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"device\\\">Device</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText disabled=\\\"true\\\" formControlName=\\\"device\\\" [(ngModel)]=\\\"selected.movementDevice\\\"/>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"store\\\">Store</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <p-dropdown [options]=\\\"stores\\\" formControlName=\\\"store\\\" [(ngModel)]=\\\"selected.movementStore\\\" [disabled]=\\\"selected.movementStatus!=='New'||selected.movementCausal.causalIsPos\\\" [style]=\\\"{'width':'100%'}\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['store'].valid&&dataform.controls['store'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i>\\n                            <span *ngIf=\\\"dataform.controls['store'].errors['required']\\\">Store is required</span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"customer\\\">Customer</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <p-dropdown [options]=\\\"customers\\\" formControlName=\\\"customer\\\" [(ngModel)]=\\\"selected.movementCustomer\\\" [disabled]=\\\"selected.movementStatus!=='New'\\\" [filter]=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"description\\\">Description</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <div *ngIf=\\\"selected.movementStatus==='New';then new_content else content\\\"></div>\\n                        <ng-template #new_content>\\n                            <input pInputText type=\\\"text\\\" formControlName=\\\"description\\\" [(ngModel)]=\\\"selected.movementDesc\\\"/>\\n                        </ng-template>\\n                        <ng-template #content>\\n                            <input pInputText disabled=\\\"true\\\" formControlName=\\\"description\\\" [(ngModel)]=\\\"selected.movementDesc\\\"/>\\n                        </ng-template>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-12\\\"><hr></div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"payment\\\">Payment</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <p-dropdown [options]=\\\"payments\\\" formControlName=\\\"payment\\\" [disabled]=\\\"selected.movementStatus==='Completed'\\\" [(ngModel)]=\\\"selected.movementPayment\\\" [style]=\\\"{'width':'100%'}\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"status\\\">Status</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <p-dropdown [options]=\\\"getStatus\\\" formControlName=\\\"status\\\" [(ngModel)]=\\\"selected.movementStatus\\\" [style]=\\\"{'width':'100%'}\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['status'].valid&&dataform.controls['status'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Status is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"note\\\">Note</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <textarea pInputTextarea formControlName=\\\"note\\\" [(ngModel)]=\\\"selected.movementNote\\\" style=\\\"width: 100%\\\"></textarea>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button *ngIf=\\\"selected.movementId>0&&selected.movementStatus==='New'\\\" type=\\\"button\\\" pButton icon=\\\"fa-trash-o\\\" class=\\\"ui-button-secondary\\\" (click)=\\\"deleteClick()\\\" label=\\\"Delete\\\"></button>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\"></div>\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button type=\\\"button\\\" pButton icon=\\\"fa-save\\\" class=\\\"ui-button-success\\\" (click)=\\\"saveClick()\\\" label=\\\"Save\\\" [disabled]=\\\"!dataform.valid\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </p-panel>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/movement/movements.component.html\n// module id = ../../../../../src/app/movement/movements.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { ConfirmationService, SelectItem, MenuItem } from 'primeng/primeng';\nimport { SessionService } from './../services/session.service';\nimport { StoreService } from './../services/store.service';\nimport { CausalService } from './../services/causal.service';\nimport { CustomerService } from './../services/customer.service';\nimport { MovementService } from './../services/movement.service';\nimport { Movement, Device } from './../shared/models';\nimport { Helpers } from './../shared/helpers';\nimport * as FileSaver from 'file-saver';\n\n@Component({\n    selector: 'movements-component',\n    templateUrl: 'movements.component.html'\n})\n\nexport class MovementsComponent implements OnInit {\n    totalRecords = 0;\n    items: Movement[];\n    selected: Movement;\n    device: Device;\n    cashregisters: SelectItem[];\n    stores: SelectItem[];\n    storesFiltered: SelectItem[];\n    causals: SelectItem[];\n    causalsFiltered: SelectItem[];\n    customers: SelectItem[];\n    customersFiltered: SelectItem[];\n    status: SelectItem[];\n    statusFiltered: SelectItem[];\n    payments: SelectItem[];\n    currentStatus: string;\n    displayPanel: boolean;\n    dataform: FormGroup;\n    buttons: MenuItem[];\n    newNumber: number;\n    dateStartValue: Date;\n    dateFinishValue: Date;\n    amountValue: number;\n\n    constructor(private router: Router,\n                private sessionService: SessionService,\n                private storeService: StoreService,\n                private causalService: CausalService,\n                private customerService: CustomerService,\n                private movementService: MovementService,\n                private confirmationService: ConfirmationService,\n                private fb: FormBuilder) {\n        sessionService.title = 'Movements';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        this.dataform = this.fb.group({\n            'number': new FormControl('', Validators.required),\n            'date': new FormControl('', Validators.required),\n            'description': new FormControl('', Validators.nullValidator),\n            'store': new FormControl('', Validators.required),\n            'causal': new FormControl('', Validators.required),\n            'customer': new FormControl('', Validators.nullValidator),\n            'device': new FormControl('', Validators.nullValidator),\n            'payment': new FormControl('', Validators.nullValidator),\n            'status': new FormControl('', Validators.required),\n            'note': new FormControl('', Validators.nullValidator)\n        });\n\n        this.buttons = [\n            { label: 'Document', icon: 'fa-print', command: (event) => this.openClick('document/') },\n            { label: 'Barcode', icon: 'fa-barcode', command: (event) => this.openBarcodeClick() },\n            { label: 'Create copy', icon: 'fa-clone', command: (event) => this.cloneClick() }\n        ];\n\n        this.refreshClick();\n\n        this.movementService\n            .getStatus()\n            .subscribe(result => {\n                this.status = result.map(p => Helpers.newSelectItem(p.value));\n            }\n        );\n\n        this.movementService\n            .getPayments()\n            .subscribe(result => {\n                this.payments = result.map(p => Helpers.newSelectItem(p.value));\n            }\n        );\n\n        this.storeService\n            .getAll()\n            .subscribe(result => {\n                this.stores = result.map(p => Helpers.newSelectItem(p, p.storeName));\n            }\n        );\n\n        this.causalService\n            .getAll()\n            .subscribe(result => {\n                this.causals = result.map(p => Helpers.newSelectItem(p, p.causalName));\n                if (localStorage.getItem('webretailDevice') === null) {\n                    this.causals = this.causals.filter(p => p.value.causalIsPos === false);\n                }\n            }\n        );\n\n        this.customerService\n            .getAll()\n            .subscribe(result => {\n                this.customers = [];\n                this.customers.push({label: '', value: null});\n                this.customers = this.customers.concat(result.map(p => Helpers.newSelectItem(p, p.customerName)));\n            }\n        );\n\n        let jsonObj: any = JSON.parse(localStorage.getItem('webretailDevice'));\n        this.device = jsonObj !== null ? <Device>jsonObj : null;\n    }\n\n    buildFilter(items: Movement[]) {\n        this.storesFiltered = [];\n        this.storesFiltered.push({label: 'All', value: null});\n        let filterStores = Helpers.distinct(items.map((item: Movement) => Helpers.newSelectItem(item.movementStore.storeName)));\n        this.storesFiltered = this.storesFiltered.concat(filterStores);\n\n        this.causalsFiltered = [];\n        this.causalsFiltered.push({label: 'All', value: null});\n        let filterCusals = Helpers.distinct(items.map((item: Movement) => Helpers.newSelectItem(item.movementCausal.causalName)));\n        this.causalsFiltered = this.causalsFiltered.concat(filterCusals);\n\n        this.customersFiltered = [];\n        this.customersFiltered.push({label: 'All', value: null});\n        let filterCustomer = Helpers.distinct(items.map((item: Movement) => Helpers.newSelectItem(item.movementCustomer.customerName)));\n        this.customersFiltered = this.customersFiltered.concat(filterCustomer);\n\n        this.statusFiltered = [];\n        this.statusFiltered.push({label: 'All', value: null});\n        let filterStatus = Helpers.distinct(items.map((item: Movement) => Helpers.newSelectItem(item.movementStatus)));\n        this.statusFiltered = this.statusFiltered.concat(filterStatus);\n    }\n\n    get isNew(): boolean { return this.selected == null || this.selected.movementId === 0; }\n\n    get selectedIndex(): number { return this.items.indexOf(this.selected); }\n\n    get getStatus(): SelectItem[] {\n        if (this.selected.movementId === 0) {\n            return this.status.slice(0, 1);\n        }\n        let index = this.status.findIndex(p => p.label === this.selected.movementStatus);\n        return this.status.slice(index, 5);\n    }\n\n    refreshClick() {\n        this.items = null;\n        this.movementService\n            .getAll()\n            .subscribe(result => {\n                this.items = result;\n                this.totalRecords = this.items.length;\n                this.buildFilter(result);\n             }, onerror => alert(onerror)\n        );\n    }\n\n    addClick() {\n        this.selected = new Movement();\n        this.currentStatus = this.selected.movementStatus;\n        this.selected.movementUser = localStorage.getItem('uniqueID');\n        if (this.stores.length > 0) {\n            this.selected.movementStore = this.stores[0].value;\n        }\n        if (this.causals.length > 0) {\n            this.selected.movementCausal = this.device ? this.causals.find(p => p.value.causalIsPos).value : this.causals[0].value;\n            this.onCausalChange(null);\n        }\n        if (this.customers.length > 0) {\n            this.selected.movementCustomer = this.customers[0].value;\n        }\n        if (this.status.length > 0) {\n            this.selected.movementStatus = this.status[0].value;\n        }\n        this.displayPanel = true;\n    }\n\n    onCausalChange(event: any) {\n        if (this.selected.movementCausal.causalIsPos && this.device !== null) {\n            this.selected.movementDevice = this.device.deviceName;\n            this.selected.movementStore = this.device.store;\n        } else {\n            this.selected.movementDevice = '';\n        }\n    }\n\n    editClick() {\n        if (!this.selected) {\n            return;\n        }\n        this.currentStatus = this.selected.movementStatus;\n        this.displayPanel = true;\n    }\n\n    closeClick() {\n        this.displayPanel = false;\n        this.selected = null;\n        this.currentStatus = null;\n        this.buildFilter(this.items);\n    }\n\n    saveClick() {\n        if (this.isNew) {\n            this.movementService.create(this.selected)\n                .subscribe(result => {\n                    this.selected = result;\n                    this.totalRecords++;\n                    this.openClick();\n                }, onerror => alert(onerror._body));\n        } else {\n            this.movementService.update(this.selected.movementId, this.selected)\n                .subscribe(result => {\n                    this.items[this.selectedIndex] = result;\n                    this.closeClick();\n                }, onerror => {\n                    this.selected.movementStatus = this.currentStatus;\n                    alert(onerror._body);\n                });\n        }\n    }\n\n    deleteClick() {\n        if (!this.selected) {\n            return;\n        }\n        this.confirmationService.confirm({\n            header: 'Confirmation delete on cascade',\n            message: 'All related items will be deleted. Are you sure that you want to delete this movement?',\n            accept: () => {\n                this.movementService.delete(this.selected.movementId)\n                    .subscribe(result => {\n                        this.items.splice(this.selectedIndex, 1);\n                        this.totalRecords--;\n                        this.closeClick();\n                    }, onerror => alert(onerror._body));\n            }\n        });\n    }\n\n    cloneClick() {\n        if (!this.selected) {\n            return;\n        }\n        this.confirmationService.confirm({\n            header: 'Confirmation copy',\n            message: 'Are you sure that you want to create a copy of this movement?',\n            accept: () => {\n                this.movementService.clone(this.selected.movementId)\n                    .subscribe(result => {\n                        this.selected = result;\n                        this.items.push(this.selected);\n                        this.editClick();\n                    }, onerror => alert(onerror._body));\n            }\n        });\n    }\n\n    openClick(detail = '') {\n        if (!this.selected) {\n            return;\n        }\n        this.router.navigateByUrl('movement/' + detail + this.selected.movementId);\n    }\n\n    openBarcodeClick() {\n        if (!this.selected) {\n            return;\n        }\n        this.movementService\n            .getBarcode(this.selected.movementId)\n            .subscribe(\n                data => {\n                    let blob = new Blob([data], {type: 'application/pdf'});\n                    let filename = 'barcode_' + this.selected.movementNumber + '_' + this.selected.movementDate + '.pdf';\n                    FileSaver.saveAs(blob, filename);\n                    // var url = window.URL.createObjectURL(blob);\n                    // window.location.href = url;\n                },\n                err => console.error(err),\n            () => console.log('done')\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/movement/movements.component.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { Product } from './../shared/models';\n\n@Pipe({\n  name: 'articleFilter'\n})\nexport class ArticleFilterPipe implements PipeTransform {\n  transform(value: any[], args?: string): any {\n    if (!value) { return; }\n    if (!args) { return value; }\n\n    let search = args.toLowerCase();\n    return value.filter(item => this.contain(item.movementArticleProduct, search));\n  }\n\n  contain(item: Product, value: string): boolean {\n    let info = item.productName.toLowerCase();\n    const ids = item.articles[0].attributeValues.map(p => p.attributeValueId);\n\n    item.attributes.map(p => p.attributeValues.forEach(b => {\n        if (ids.indexOf(b.attributeValue.attributeValueId) > -1) {\n          info += ` ${b.attributeValue.attributeValueName.toLowerCase()}`;\n        }\n    }));\n    return info.includes(value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/pipes/article-filter.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { Product } from './../shared/models';\n\n@Pipe({\n  name: 'articleInfo'\n})\nexport class ArticleInfoPipe implements PipeTransform {\n  transform(value: Product, args?: string): string {\n    if (value == null || value.productId === 0) {\n      return '';\n    }\n    if (args == null) {\n      return value.productName;\n    }\n    let barcode = args;\n    let info = value.productName;\n    const ids = value.articles.find(p => p.articleBarcode === barcode).attributeValues.map(p => p.attributeValueId);\n\n    value.attributes.map(p => p.attributeValues.forEach(b => {\n        if (ids.indexOf(b.attributeValue.attributeValueId) > -1) {\n          info += ` ${b.attributeValue.attributeValueName}`;\n        }\n    }));\n\n    return info;\n    }\n  }\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/pipes/articleinfo.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'categoryFilter'\n})\nexport class CategoryFilterPipe implements PipeTransform {\n  transform(value: any[], args0?: any, args1?: any): any {\n    if (!value) { return; }\n    if (!args0) { return value; }\n\n    let category = args0;\n    if (args1 != null) {\n      return value.filter(item => this.contain(item.movementArticleProduct.categories, category));\n    }\n    return value.filter(item => this.contain(item.categories, category));\n  }\n\n  contain(items: any[], value: string): boolean {\n    if (!value) { return true; }\n    for (let i = 0; i < items.length; i++) {\n        if (items[i].category.categoryName.indexOf(value) >= 0) {\n            return true;\n        }\n    }\n    return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/pipes/category-filter.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dateFilter'\n})\n\nexport class DateFilterPipe implements PipeTransform {\n  transform(value: any[], arg0?: Date, arg1?: Date): any {\n\n    if (!value) {\n      return;\n    }\n\n    if (arg0 == null) {\n      return value;\n    }\n\n    let dateStart = arg0;\n    let dateFinish = arg1;\n\n    if (arg1 != null) {\n      return value.filter(item => this.getDate(item) >= dateStart && this.getDate(item) <= dateFinish);\n    }\n\n    return value.filter(item => this.getDate(item).toDateString() === dateStart.toDateString());\n  }\n\n  getDate(item: any) : Date {\n    return new Date(item.movementDate ? item.movementDate.substring(0, 10) : item.invoiceDate.substring(0, 10));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/pipes/date-filter.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'periodFilter'\n})\n\nexport class PeriodFilterPipe implements PipeTransform {\n  transform(value: any[], arg0?: Date, arg1?: Date): any {\n\n    if (!value) {\n      return;\n    }\n\n    if (arg0 == null && arg1 == null) {\n      return value;\n    }\n\n    let dateStart = arg0;\n    let dateFinish = arg1;\n\n    if (arg0 != null && arg1 == null) {\n      return value.filter(item => new Date(item.startAt).toISOString() === dateStart.toISOString());\n    }\n\n    if (arg0 == null && arg1 != null) {\n      return value.filter(item => new Date(item.finishAt).toISOString() === dateFinish.toISOString());\n    }\n\n    return value.filter(item => new Date(item.startAt) >= dateStart && new Date(item.finishAt) <= dateFinish);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/pipes/period-filter.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'priceFilter'\n})\n\nexport class PriceFilterPipe implements PipeTransform {\n  transform(value: any[], args0?: any, args1?: any, args2?: any): any {\n\n    if (!value) {\n      return;\n    }\n    if (args0 == null) {\n      return value;\n    }\n\n    let type = args1;\n    let maxValue = args0;\n    switch (type) {\n      case 'discounts':\n        return value.filter(data => (data.discountPercentage > 0 ? data.discountPercentage : data.discountPrice) <= maxValue);\n      case 'discount':\n        let item = args2;\n        return value.filter(data => (item.discountPercentage === 0\n          ? ((data.discountProduct.productSellingPrice - item.discountPrice) / data.discountProduct.productSellingPrice * 100.0)\n          : data.discountProduct.productSellingPrice - (data.discountProduct.productSellingPrice * item.discountPercentage / 100)\n        ) <= maxValue);\n      case 'movements':\n        return value.filter(data => data.movementAmount <= maxValue);\n      case 'movement':\n        if (args2 == null) {\n          return value.filter(data => data.movementArticlePrice <= maxValue);\n        }\n        let maxAmount = args2;\n        if (args0 == null) {\n          return value.filter(data => data.movementArticleAmount <= maxAmount);\n        }\n        return value.filter(data => data.movementArticlePrice <= maxValue && data.movementArticleAmount <= maxAmount);\n      case 'invoices':\n        return value.filter(data => data.invoiceAmount <= maxValue);\n      default:\n        return value.filter(data => (data.discount ? data.discount.discountPrice : data.productSellingPrice) <= maxValue);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/pipes/price-filter.pipe.ts","module.exports = \"<p-growl [value]=\\\"msgs\\\"></p-growl>\\n<img *ngIf=\\\"isBusy\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n    \\n    <p-panel>\\n        <p-header>\\n            <div class=\\\"ui-helper-clearfix\\\">\\n                <span class=\\\"ui-panel-title\\\" style=\\\"font-size:20px;display:inline-block;margin-top:6px\\\"><b>Import</b></span>\\n            </div>\\n        </p-header>\\n        <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\n            <div class=\\\"ui-grid-row\\\">\\n                <div class=\\\"ui-grid-col-8\\\">\\n                    <p-dropdown [options]=\\\"products\\\" [(ngModel)]=\\\"productCode\\\" [style]=\\\"{'width':'100%'}\\\" [filter]=\\\"true\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>                     \\n                </div>\\n                <div class=\\\"ui-grid-col-4\\\">\\n                    <button type=\\\"button\\\" pButton icon=\\\"fa-save\\\" class=\\\"ui-button-success\\\" (click)=\\\"importClick()\\\" label=\\\"Import\\\" [disabled]=\\\"isBusy\\\"></button>\\n                </div>\\n            </div>\\n        </div>  \\n    </p-panel>   \\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/import.component.html\n// module id = ../../../../../src/app/product/import.component.html\n// module chunks = main","import { Component, OnInit  } from '@angular/core';\nimport { SessionService } from './../services/session.service';\nimport { Message, SelectItem } from 'primeng/primeng';\nimport { ImportService, CodartInfo, Translate, Image } from './../services/import.service';\nimport {\n    Product, Brand, Category, ProductCategory,\n    Attribute, AttributeValue, ProductAttribute, ProductAttributeValue,\n    Article, ArticleAttributeValue, Media, Translation\n} from './../shared/models';\nimport { Helpers } from '../shared/helpers';\n\n@Component({\n    selector: 'import-component',\n    templateUrl: 'import.component.html'\n})\n\nexport class ImportComponent implements OnInit  {\n\n    msgs: Message[] = [];\n    isBusy: boolean;\n    productCode: String;\n    product: Product;\n    products: SelectItem[];\n\n    constructor(private sessionService: SessionService,\n                private importService: ImportService) {\n        sessionService.title = 'Import';\n    }\n\n    ngOnInit() {\n        if (!this.sessionService.isAuthenticated) {\n            return;\n        }\n\n        this.getProducts();\n     }\n\n     getProducts() {\n        this.isBusy = true;\n        this.importService.getProducts()\n        .subscribe(res => {\n            this.products = res.map(p => Helpers.newSelectItem(p.id, `${p.id} : ${p.key}`));\n            this.isBusy = false;\n        }, onerror => this.showError(onerror._body));\n     }\n\n     importClick() {\n        this.isBusy = true;\n        this.importService.getProductById(this.productCode)\n        .subscribe(res => {\n            this.product = this.convertProduct(res);\n            this.importService.create(this.product)\n            .subscribe(result => {\n                this.msgs.push({\n                    severity: 'success',\n                    summary: 'import',\n                    detail: 'Totals: added ' + result.added + ' updated ' + result.updated + ' deleted ' + result.deleted\n                });\n                this.isBusy = false;\n            }, onerror => this.showError(onerror._body));\n        }, onerror => this.showError(onerror._body));\n    }\n\n    showError(error: any) {\n        this.msgs.push({severity: 'error', summary: 'import', detail: error});\n        this.isBusy = false;\n    }\n\n    convertProduct(product: CodartInfo): Product {\n        // Brand\n        let brand = new Brand();\n        brand.brandName = 'Tessilnova';\n\n        // Categories\n        let category = new Category(0, product.category.desc);\n        category.categoryIsPrimary = true;\n        category.translations = product.category.translates.map(p => new Translation(p.code, p.value));\n\n        let subcategory = new Category(0, product.subcategory.desc);\n        subcategory.categoryIsPrimary = false;\n        subcategory.translations = product.subcategory.translates.map(p => new Translation(p.code, p.value));\n\n        // Texture\n        let texture = product.producer.desc.replace('Tessilnova ', '');\n        let textureAttribute = <ProductAttribute>{\n            attribute: new Attribute(0, 'Texture', [new Translation('IT', 'Tessuto')]),\n            attributeValues: [\n                <ProductAttributeValue>{ attributeValue: new AttributeValue(0, 0, product.producer.id.trim(), texture, []) }\n            ]\n        };\n\n        // Colors\n        let colors = Helpers.distinct(product.codarts.map(p => Helpers.newSelectItem(p.colorId.trim(), p.color)));\n        let colorAttribute = <ProductAttribute>{\n            attribute: new Attribute(0, 'Color', [new Translation('IT', 'Colore')]),\n            attributeValues: colors.map(p => <ProductAttributeValue>{\n                attributeValue: new AttributeValue(0, 0, p.value, p.label,\n                    product.translates.filter(t => t.key === p.label).map(t => new Translation(t.code, t.value))\n                )\n            })\n        };\n\n        // Sizes\n        let sizes = product.codarts.map(p => p.size).filter((x, i, a) => x && a.indexOf(x) === i);\n        let sizeAttribute = <ProductAttribute>{\n            attribute: new Attribute(0, 'Size', [new Translation('IT', 'Misura')]),\n            attributeValues: sizes.map(p => <ProductAttributeValue>{ attributeValue: new AttributeValue(0, 0, p, p,\n                product.translates.filter(t => t.key === p).map(t => new Translation(t.code, t.value))\n            ) })\n        };\n\n        // Articles\n        let articles: Article[] = [];\n        product.codarts.forEach(p => {\n            let article = new Article();\n            article.articleBarcode = p.barcode;\n            article.attributeValues = [\n                <ArticleAttributeValue>{ attributeValue: new AttributeValue(0, 0, product.producer.id.trim(), texture, []) },\n                <ArticleAttributeValue>{ attributeValue: new AttributeValue(0, 0, p.colorId.trim(), p.color, []) },\n                <ArticleAttributeValue>{ attributeValue: new AttributeValue(0, 0, p.size, p.size, []) }\n            ];\n            articles.push(article);\n        });\n\n        // Medias\n        let medias = product.medias.map(p => new Media(p.filename, p.url, p.number));\n\n        // Translations\n        let translations = product\n            .translates.filter(p => p.key === product.id)\n            .map(p => new Translation(p.code, p.value));\n\n        // Product\n        let item = new Product();\n        item.productCode = product.id;\n        item.productName = product.name;\n        item.productUm = 'QT';\n        item.productSellingPrice = product.price;\n        item.brand = brand;\n        item.categories = [\n            <ProductCategory>{ productId: 0, category: category },\n            <ProductCategory>{ productId: 0, category: subcategory }\n        ];\n        item.attributes = [ textureAttribute, colorAttribute, sizeAttribute ];\n        item.articles = articles;\n        item.medias = medias;\n        item.translations = product.translates.filter(p => p.key === product.id).map(p => new Translation(p.code, p.value));\n\n        return item;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/import.component.ts","module.exports = \"<p-growl [value]=\\\"msgs\\\"></p-growl>\\n<img *ngIf=\\\"!productInfo||!articleForm||isBusy\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n   <button pButton type=\\\"button\\\" title=\\\"Products\\\" style=\\\"position: absolute; top: 144px; left: 30px; width:50px;\\\" (click)=\\\"cancelClick()\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-reply\\\"></button>\\n\\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\" style=\\\"margin-left:60px\\\">\\n            Code: {{product?.productCode}}\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\">\\n            <p-splitButton label=\\\"Edit\\\" icon=\\\"fa-edit\\\" (onClick)=\\\"editClick()\\\" [(disabled)]=\\\"isBusy\\\" [model]=\\\"buttons\\\"></p-splitButton>\\n        </div>\\n    </p-toolbar>\\n\\n    <p-tree *ngIf=\\\"!display\\\" [value]=\\\"productInfo\\\" layout=\\\"horizontal\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedNode\\\"></p-tree>\\n    <!--<div style=\\\"margin-top:8px\\\">Selected Node => {{selectedNode ? selectedNode.type + ' : ' + selectedNode.data : 'none'}}</div>-->\\n\\n    <p-panel *ngIf=\\\"display\\\">\\n        <p-header>\\n            <div class=\\\"ui-helper-clearfix\\\">\\n                <span class=\\\"ui-panel-title\\\" style=\\\"font-size:18px;display:inline-block;margin-top:6px\\\">Edit node</span>\\n                <button pButton type=\\\"button\\\" label=\\\"Close\\\" (click)=\\\"closeClick()\\\" style=\\\"float: right\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-close\\\"></button>\\n            </div>\\n        </p-header>\\n        <p-pickList [source]=\\\"nodesSource\\\" [target]=\\\"nodesTarget\\\" [responsive]=\\\"true\\\" [showTargetControls]=\\\"false\\\"\\n            (onMoveToSource)=\\\"removeNodes($event)\\\" (onMoveToTarget)=\\\"addNodes($event)\\\">\\n            <ng-template let-attr pTemplate=\\\"item\\\">\\n                <span>{{attr.data}}</span> | <span>{{attr.label}}</span>\\n            </ng-template>\\n        </p-pickList>\\n    </p-panel>\\n\\n    <table *ngIf=\\\"articleForm\\\" class=\\\"table\\\" cellpadding=\\\"2\\\" cellspacing=\\\"2\\\">\\n        <thead>\\n            <tr> \\n                <td *ngFor=\\\"let h of articleForm.header\\\" align=\\\"center\\\" style=\\\"background-color: whitesmoke\\\"><strong>{{h}}</strong></td> \\n            </tr>\\n        </thead>\\n        <tfoot>\\n            <tr> \\n                <td style=\\\"background-color: whitesmoke;text-align: center;\\\"><strong>{{totalRecords}}</strong><br/>items</td> \\n            </tr>\\n        </tfoot>\\n        <tbody> \\n            <tr *ngFor=\\\"let item of articleForm.body\\\"> \\n                <td *ngFor=\\\"let col of item\\\" align=\\\"center\\\">\\n                    <input *ngIf=\\\"col.id>0\\\" pInputText type=\\\"text\\\" size=\\\"13\\\" title=\\\"{{col.value}}\\\" [(ngModel)]=\\\"col.value\\\" />\\n                    <span *ngIf=\\\"col.id===0\\\" title=\\\"{{col.value}}\\\">{{col.value}}</span> \\n                </td> \\n            </tr> \\n        </tbody>\\n    </table>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/product.component.html\n// module id = ../../../../../src/app/product/product.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { TreeNode, Message, MenuItem } from 'primeng/primeng';\nimport {\n    Product, ProductCategory, Category, ProductAttribute, Attribute,\n    ProductAttributeValue, Article, ArticleAttributeValue, AttributeValue, ArticleForm\n} from './../shared/models';\nimport { Helpers } from './../shared/helpers';\nimport { SessionService } from './../services/session.service';\nimport { ProductService } from './../services/product.service';\nimport { CategoryService } from './../services/category.service';\nimport { AttributeService } from './../services/attribute.service';\n\n@Component({\n    selector: 'product',\n    templateUrl: 'product.component.html'\n})\n\nexport class ProductComponent implements OnInit, OnDestroy {\n\n    private sub: any;\n    msgs: Message[] = [];\n    buttons: MenuItem[];\n    product: Product;\n    articleForm: ArticleForm;\n    totalRecords = 0;\n    selected: any;\n    productInfo: TreeNode[];\n    selectedNode: TreeNode;\n    nodesSource: TreeNode[];\n    nodesTarget: TreeNode[];\n    display: boolean;\n    isBusy: boolean;\n\n    constructor(private activatedRoute: ActivatedRoute,\n                private sessionService: SessionService,\n                private productService: ProductService,\n                private categoryService: CategoryService,\n                private attributeService: AttributeService,\n                private location: Location) {\n        sessionService.title = 'Product';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        // Subscribe to route params\n        this.sub = this.activatedRoute.params.subscribe(params => {\n            let id = params['id'];\n            this.productService.getProduct(id)\n                .subscribe(result => {\n                    this.product = result;\n                    this.createTree();\n                    this.createSheet();\n                }, onerror => this.msgs.push({severity: 'error', summary: 'Get product', detail: onerror._body})\n            );\n        });\n\n        this.buttons = [\n            { label: 'Generate items', icon: 'fa-database', command: () => this.buildClick() },\n            { label: 'Save barcodes', icon: 'fa-barcode', command: () => this.saveClick() }\n        ];\n    }\n\n    ngOnDestroy() {\n        // Clean sub to avoid memory leak\n        this.sub.unsubscribe();\n    }\n\n    cancelClick() {\n        this.location.back();\n    }\n\n    closeClick() {\n        this.display = false;\n        this.selectedNode = null;\n    }\n\n    createTree() {\n        let rootNode = Helpers.newNode(this.product.productName, this.product.productCode, 'product');\n        rootNode.expanded = this.product.articles.length === 0;\n\n        // let producerNode = Helpers.newNode('Brand', '[]', 'brands');\n        // producerNode.expanded = true;\n        // producerNode.children.push(Helpers.newNode(this.product.brand.brandName, this.product.brand.brandId.toString(), 'brand'));\n        // rootNode.children.push(producerNode);\n\n        let categoriesNode = Helpers.newNode('Categories', '[]', 'categories');\n        this.product.categories.forEach(elem => {\n            categoriesNode.children.push(Helpers.newNode(elem.category.categoryName, elem.category.categoryId.toString(), 'category'));\n        });\n        categoriesNode.expanded = categoriesNode.children.length > 0;\n        rootNode.children.push(categoriesNode);\n\n        let attributesNode = Helpers.newNode('Attributes', '[]', 'attributes');\n        this.product.attributes.forEach(elem => {\n            let node = Helpers.newNode(elem.attribute.attributeName, elem.attribute.attributeId.toString(), `attribute:${elem.productAttributeId}`);\n            elem.attributeValues.forEach(e =>\n                node.children.push(Helpers.newNode(e.attributeValue.attributeValueName, e.attributeValue.attributeValueId.toString(), 'attributeValue'))\n            );\n            node.expanded = node.children.length > 0;\n            attributesNode.children.push(node);\n        });\n        attributesNode.expanded = attributesNode.children.length > 0;\n        rootNode.children.push(attributesNode);\n\n        this.productInfo = [rootNode];\n    }\n\n    createSheet() {\n        this.totalRecords = this.product.articles.length;\n        this.productService.getArticles(this.product.productId, '0')\n            .subscribe(result => {\n                this.articleForm = result;\n            }, onerror => alert(onerror._body));\n    }\n\n    editClick() {\n        if (!this.selectedNode) {\n            this.msgs.push({severity: 'warn', summary: 'Warning', detail: 'A node must be selected before editing!'});\n            return;\n        }\n\n        this.nodesSource = [];\n\n        let type = this.selectedNode.type;\n        switch (type) {\n            case 'categories':\n                this.nodesTarget = this.productInfo[0].children.find(p => p.type === 'categories').children;\n                this.categoryService.getAll()\n                    .subscribe(result => {\n                        result.forEach(p => {\n                            if (this.nodesTarget.findIndex(e => e.data === p.categoryId) < 0) {\n                                this.nodesSource.push(Helpers.newNode(p.categoryName, p.categoryId.toString(), 'category'));\n                            }\n                        });\n                    }, onerror => this.msgs.push({severity: 'error', summary: 'Get categories', detail: onerror._body}));\n                break;\n            case 'attributes':\n                this.nodesTarget = this.productInfo[0].children.find(p => p.type === 'attributes').children;\n                this.attributeService.getAll()\n                    .subscribe(result => {\n                        result.forEach(p => {\n                            if (this.nodesTarget.findIndex(e => e.data === p.attributeId) < 0) {\n                                this.nodesSource.push(Helpers.newNode(p.attributeName, p.attributeId.toString(), 'attribute:0'));\n                            }\n                        });\n                    }, onerror => this.msgs.push({severity: 'error', summary: 'Get attributes', detail: onerror._body}));\n                break;\n            case (type.startsWith('attribute:') ? type : undefined):\n                this.nodesTarget = this.productInfo[0].children.find(p => p.type === 'attributes')\n                                                .children.find(p => p.data === this.selectedNode.data)\n                                                .children;\n                this.attributeService.getValueByAttributeId(this.selectedNode.data)\n                    .subscribe(result => {\n                        result.forEach(p => {\n                            if (this.nodesTarget.findIndex(e => e.data === p.attributeValueId) < 0) {\n                                this.nodesSource.push(Helpers.newNode(p.attributeValueName, p.attributeValueId.toString(), 'attributeValue'));\n                            }\n                        });\n                    }, onerror => this.msgs.push({severity: 'error', summary: 'Get values by attributeId', detail: onerror._body}));\n                break;\n            default:\n                this.msgs.push({severity: 'warn', summary: 'warning', detail: 'You can not update anything to this node!'});\n                return;\n        }\n\n        this.display = true;\n    }\n\n    addNodes(event: any) {\n        let productCategories: ProductCategory[] = [];\n        let productAttributes: ProductAttribute[] = [];\n        let productAttributeValues: ProductAttributeValue[] = [];\n        let nodes: TreeNode[] = event.items;\n\n        nodes.forEach(p => {\n            switch (p.type) {\n                case 'category':\n                    let productCategory = <ProductCategory>{\n                        productId: this.product.productId,\n                        category: new Category(p.data, p.label)\n                    };\n                    productCategories.push(productCategory);\n                    break;\n                case (p.type.startsWith('attribute:') ? p.type : undefined):\n                    let productAttribute = <ProductAttribute>{\n                        productId: this.product.productId,\n                        attribute: new Attribute(p.data, p.label, [])\n                    };\n                    productAttributes.push(productAttribute);\n                    break;\n                case 'attributeValue':\n                    let productAttributeValue = <ProductAttributeValue>{\n                        productAttributeId: Number(this.selectedNode.type.split(':')[1]),\n                        attributeValue: new AttributeValue(0, p.data, '', p.label, [])\n                    };\n                    productAttributeValues.push(productAttributeValue);\n                    break;\n            }\n        });\n\n        if (productCategories.length > 0) {\n            this.productService\n                .addCategories(productCategories)\n                .subscribe(result => this.msgs.push({\n                        severity: 'success',\n                        summary: 'Success',\n                        detail: 'Added ' + result.length + ' categories'\n                    }), onerror => this.msgs.push({severity: 'error', summary: 'Add categories', detail: onerror._body}));\n        } else if (productAttributes.length > 0) {\n            this.productService\n                .addAttributes(productAttributes)\n                .subscribe(result => {\n                    result.forEach((p, i) => {\n                        this.nodesTarget[i].type = `attribute:${p.productAttributeId}`;\n                    });\n                    this.msgs.push({\n                        severity: 'success',\n                        summary: 'Success',\n                        detail: 'Added ' + result.length + ' attributes'\n                    });\n                }, onerror => this.msgs.push({severity: 'error', summary: 'Add attributes', detail: onerror._body}));\n        } else if (productAttributeValues.length > 0) {\n            this.productService\n                .addAttributeValues(productAttributeValues)\n                .subscribe(result => this.msgs.push({\n                        severity: 'success',\n                        summary: 'Success',\n                        detail: 'Added ' + result.length + ' attribute values'\n                    }), onerror => this.msgs.push({severity: 'error', summary: 'Add attribute values', detail: onerror._body}));\n        }\n    }\n\n    removeNodes(event: any) {\n        let productCategories: ProductCategory[] = [];\n        let productAttributes: ProductAttribute[] = [];\n        let productAttributeValues: ProductAttributeValue[] = [];\n        let nodes: TreeNode[] = event.items;\n\n        nodes.forEach(p => {\n            switch (p.type) {\n                case 'category':\n                    let productCategory = <ProductCategory>{\n                        productId: this.product.productId,\n                        category: new Category(p.data, p.label)\n                    };\n                    productCategories.push(productCategory);\n                    break;\n                case (p.type.startsWith('attribute:') ? p.type : undefined):\n                    let productAttribute = <ProductAttribute>{\n                        productId: this.product.productId,\n                        attribute: new Attribute(p.data, p.label, [])\n                    };\n                    productAttributes.push(productAttribute);\n                    break;\n                case 'attributeValue':\n                    let productAttributeValue = <ProductAttributeValue>{\n                        productAttributeId: Number(this.selectedNode.type.split(':')[1]),\n                        attributeValue: new AttributeValue(0, p.data, '', p.label, [])\n                    };\n                    productAttributeValues.push(productAttributeValue);\n                    break;\n            }\n        });\n\n        if (productCategories.length > 0) {\n            this.productService\n                .removeCategories(productCategories)\n                .subscribe(result => this.msgs.push({\n                        severity: 'success',\n                        summary: 'Success',\n                        detail: 'Removed ' + result.length + ' categories'\n                    }), onerror => this.msgs.push({severity: 'error', summary: 'Remove categories', detail: onerror._body}));\n        } else if (productAttributes.length > 0) {\n            this.productService\n                .removeAttributes(productAttributes)\n                .subscribe(result => {\n                    this.msgs.push({\n                        severity: 'success',\n                        summary: 'Success',\n                        detail: 'Removed ' + result.length + ' attributes'\n                    });\n                }, onerror => this.msgs.push({severity: 'error', summary: 'Remove attributes', detail: onerror._body}));\n        } else if (productAttributeValues.length > 0) {\n            this.productService\n                .removeAttributeValues(productAttributeValues)\n                .subscribe(result => this.msgs.push({\n                        severity: 'success',\n                        summary: 'Success',\n                        detail: 'Removed ' + result.length + ' attribute values'\n                    }), onerror => this.msgs.push({severity: 'error', summary: 'Remove attribute Values', detail: onerror._body}));\n        }\n    }\n\n    buildClick() {\n        this.isBusy = true;\n        this.productService.build(this.product.productId)\n            .subscribe(result => {\n                this.productService.getProduct(this.product.productId)\n                    .subscribe(res => {\n                        this.product = res;\n                        this.productInfo[0].expanded = false;\n                        this.createSheet();\n                        this.isBusy = false;\n                        this.msgs.push({\n                            severity: 'success',\n                            summary: 'Articles build',\n                            detail: 'Totals: added ' + result.added + ' updated ' + result.updated + ' deleted ' + result.deleted\n                        });\n                    }\n                );\n            }, onerror => {\n                this.isBusy = false;\n                this.msgs.push({\n                    severity: 'error',\n                    summary: 'Articles build',\n                    detail: onerror._body\n                });\n            });\n    }\n\n    saveClick() {\n        let count = 0;\n        this.isBusy = true;\n        let length = this.articleForm.body.length - 1;\n        let barcode = this.articleForm.body[length][this.articleForm.body[length].length - 1].value;\n        this.articleForm.body\n            .forEach(pp => {\n                pp.forEach(p => {\n                    if (p.id > 0) {\n                        let article = new Article();\n                        article.articleId = p.id;\n                        article.articleBarcode = p.value;\n                        this.productService\n                            .updateArticle(p.id, article)\n                            .subscribe(result => {\n                                count++;\n                                if (result.articleBarcode === barcode) {\n                                    this.isBusy = false;\n                                    this.msgs.push({\n                                        severity: 'success',\n                                        summary: 'Save barcodes',\n                                        detail: count + ' barcodes successfully saved!'\n                                    });\n                                }\n                            });\n                    }\n                });\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/product.component.ts","module.exports = \"<p-confirmDialog header=\\\"Confirmation delete on cascade\\\" icon=\\\"fa-trash-o\\\" [responsive]=\\\"true\\\"></p-confirmDialog>\\n<img *ngIf=\\\"!products\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n    \\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\">\\n            <button pButton type=\\\"button\\\" label=\\\"{{totalRecords}} items\\\" title=\\\"Add product\\\" (click)=\\\"addClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-plus\\\"></button>\\n            <button pButton type=\\\"button\\\" title=\\\"Refresh\\\" (click)=\\\"refreshClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-refresh\\\"></button>\\n            <button pButton type=\\\"button\\\" label=\\\"Edit\\\" title=\\\"Edit product\\\" (click)=\\\"editClick()\\\" [disabled]=\\\"!selected\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-edit\\\"></button>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\">\\n            <p-splitButton label=\\\"Details\\\" icon=\\\"fa-bars\\\" (onClick)=\\\"openClick()\\\" [model]=\\\"buttons\\\" [disabled]=\\\"!selected\\\"></p-splitButton>\\n        </div>\\n    </p-toolbar>\\n\\n    <p-dataTable *ngIf=\\\"!displayPanel\\\" [responsive]=\\\"true\\\" [value]=\\\"products | priceFilter:sliderValue:'price' | categoryFilter:categoryValue\\\" \\n        selectionMode=\\\"single\\\" [(selection)]=\\\"selected\\\"\\n        [paginator]=\\\"true\\\" [rows]=\\\"20\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinks]=\\\"5\\\" #dt>\\n        <p-column field=\\\"productCode\\\" header=\\\"Code\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n        <p-column field=\\\"productName\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n        <p-column field=\\\"brand.brandName\\\" header=\\\"Brand\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"equals\\\" [style]=\\\"{'overflow':'visible'}\\\" >\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <p-dropdown [options]=\\\"brands\\\" [filter]=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\" (onChange)=\\\"dt.filter($event.value,col.field,col.filterMatchMode)\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n            </ng-template>\\n        </p-column>     \\n        <p-column header=\\\"Categories\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\" >\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <p-dropdown [options]=\\\"categories\\\" [filter]=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\" [(ngModel)]=\\\"categoryValue\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n            </ng-template>\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <li *ngFor=\\\"let item of data.categories\\\"> {{ item.category.categoryName }} </li>\\n            </ng-template>\\n        </p-column>\\n        <p-column header=\\\"Price ({{sliderValue||'No Filter'}})\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\" >\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <i class=\\\"fa fa-close\\\" (click)=\\\"sliderValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n                <p-slider [style]=\\\"{'margin-top':'14px','margin-bottom':'5px'}\\\" [(ngModel)]=\\\"sliderValue\\\" [min]=\\\"5\\\" [max]=\\\"1000\\\"></p-slider>\\n            </ng-template>\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"data.discount;then discount_content else price_content\\\"></div>\\n                <ng-template #discount_content>\\n                    <span class=\\\"percentage\\\">-{{data.discount.discountPercentage}}%</span>\\n                    <del>{{data.productSellingPrice | currency: 'EUR' : true}}</del><br><strong>{{data.discount.discountPrice | currency: 'EUR' : true}}</strong>\\n                </ng-template>\\n                <ng-template #price_content>\\n                    {{data.productSellingPrice | currency: 'EUR' : true}}\\n                </ng-template>\\n            </ng-template>\\n        </p-column>\\n    </p-dataTable>\\n\\n    <p-panel *ngIf=\\\"displayPanel\\\">\\n        <p-header>\\n            <div class=\\\"ui-helper-clearfix\\\">\\n                <span class=\\\"ui-panel-title\\\" style=\\\"font-size:20px;display:inline-block;margin-top:6px\\\"><b>Product</b></span>\\n                <button pButton type=\\\"button\\\" label=\\\"Close\\\" (click)=\\\"closeClick()\\\" style=\\\"float: right\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-close\\\"></button>\\n            </div>\\n        </p-header>\\n        <form [formGroup]=\\\"dataform\\\">\\n            <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label>Id</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">{{selected.productId}}</div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"code\\\">Code</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"code\\\" [(ngModel)]=\\\"selected.productCode\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['code'].valid&&dataform.controls['code'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i>\\n                            <span *ngIf=\\\"dataform.controls['code'].errors['required']\\\">Code is required</span>\\n                            <span *ngIf=\\\"dataform.controls['code'].errors['minlength']\\\">Must be equals than 5 characters</span>\\n                            <span *ngIf=\\\"dataform.controls['code'].errors['maxlength']\\\">Must be equals than 5 characters</span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"name\\\">Name</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"name\\\" [(ngModel)]=\\\"selected.productName\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['name'].valid&&dataform.controls['name'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Name is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"brand\\\">Brand</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <p-dropdown [options]=\\\"allbrands\\\" formControlName=\\\"brand\\\" [(ngModel)]=\\\"selected.brand\\\" [style]=\\\"{'width':'100%'}\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['brand'].valid&&dataform.controls['brand'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i>\\n                            <span *ngIf=\\\"dataform.controls['brand'].errors['required']\\\">Brand is required</span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"um\\\">Unit of Measure</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <p-dropdown [options]=\\\"ums\\\" formControlName=\\\"um\\\" [(ngModel)]=\\\"selected.productUm\\\" [style]=\\\"{'width':'100%'}\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['um'].valid&&dataform.controls['um'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i>\\n                            <span *ngIf=\\\"dataform.controls['um'].errors['required']\\\">Unit of Measure is required</span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"selling\\\">Selling Price</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText type=\\\"number\\\" min=\\\"0\\\" formControlName=\\\"selling\\\" [(ngModel)]=\\\"selected.productSellingPrice\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['selling'].valid&&dataform.controls['selling'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Selling Price is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"purchase\\\">Purchase Price</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText type=\\\"number\\\" min=\\\"0\\\" formControlName=\\\"purchase\\\" [(ngModel)]=\\\"selected.productPurchasePrice\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['purchase'].valid&&dataform.controls['purchase'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Purchase Price is required\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"isActive\\\">Active</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\"><p-inputSwitch onLabel=\\\"Yes\\\" offLabel=\\\"No\\\" formControlName=\\\"isActive\\\" [(ngModel)]=\\\"selected.productIsActive\\\"></p-inputSwitch></div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"updated\\\">Updated</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">{{selected.updatedAt | date:'yyyy-MM-dd HH:mm:ss'}}</div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button *ngIf=\\\"selected.productId>0\\\" type=\\\"button\\\" pButton icon=\\\"fa-trash-o\\\" class=\\\"ui-button-secondary\\\" (click)=\\\"deleteClick()\\\" label=\\\"Delete\\\"></button>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\"></div>\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button type=\\\"button\\\" pButton icon=\\\"fa-save\\\" class=\\\"ui-button-success\\\" (click)=\\\"saveClick()\\\" label=\\\"Save\\\" [disabled]=\\\"!dataform.valid\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </p-panel>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/products.component.html\n// module id = ../../../../../src/app/product/products.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { ConfirmationService, SelectItem, MenuItem } from 'primeng/primeng';\nimport { Product, ProductCategory } from './../shared/models';\nimport { Helpers } from './../shared/helpers';\nimport { SessionService } from './../services/session.service';\nimport { BrandService } from './../services/brand.service';\nimport { ProductService } from './../services/product.service';\n\n@Component({\n    selector: 'products',\n    templateUrl: 'products.component.html'\n})\n\nexport class ProductsComponent implements OnInit {\n    totalRecords = 0;\n    products: Product[];\n    selected: Product;\n    categories: SelectItem[];\n    allbrands: SelectItem[];\n    ums: SelectItem[];\n    brands: SelectItem[];\n    categoryValue: string;\n    sliderValue: number;\n    displayPanel: boolean;\n    dataform: FormGroup;\n    buttons: MenuItem[];\n\n    constructor(private router: Router,\n                private sessionService: SessionService,\n                private productService: ProductService,\n                private brandService: BrandService,\n                private confirmationService: ConfirmationService,\n                private fb: FormBuilder) {\n        sessionService.title = 'Products';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        this.dataform = this.fb.group({\n            'brand': new FormControl('', Validators.required),\n            'code': new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(5)]),\n            'name': new FormControl('', Validators.required),\n            'um': new FormControl('', Validators.required),\n            'selling': new FormControl('', Validators.required),\n            'purchase': new FormControl('', Validators.required),\n            'isActive': new FormControl('', Validators.required)\n        });\n\n        this.buttons = [\n            { label: 'Stock', icon: 'fa-list-ol', command: (event) => this.stockClick() },\n            { label: 'Publication', icon: 'fa-shopping-cart', command: (event) => this.publicationClick() }\n        ];\n\n        this.refreshClick();\n\n        this.brandService.getAll()\n            .subscribe(result => {\n                this.allbrands = result.map(p => Helpers.newSelectItem(p, p.brandName));\n                this.ums = Helpers.getUnitOfMeasure();\n            }, onerror => alert(onerror._body));\n    }\n\n    get isNew(): boolean { return this.selected == null || this.selected.productId === 0; }\n\n    get selectedIndex(): number { return this.products.indexOf(this.selected); }\n\n    buildFilter(items: Product[]) {\n        this.brands = [];\n        this.brands.push({label: 'All', value: null});\n        let filterBrands = Helpers.distinct(items.map((item: Product) => Helpers.newSelectItem(item.brand.brandName)));\n        this.brands = this.brands.concat(filterBrands);\n\n        this.categories = [];\n        this.categories.push({label: 'All', value: null});\n        let array = items.map((p: Product) => p.categories.map((c: ProductCategory) => c.category.categoryName)).join(',');\n        let filterCategories = Helpers.distinct(array.split(',').map((item: string) => Helpers.newSelectItem(item)));\n        this.categories = this.categories.concat(filterCategories);\n    }\n\n    refreshClick() {\n        this.products = null;\n        this.productService.getProducts()\n            .subscribe(result => {\n                this.products = result;\n                this.totalRecords = this.products.length;\n                this.buildFilter(result);\n            }, onerror => alert(onerror._body)\n        );\n    }\n\n    openClick() {\n        this.router.navigateByUrl('product/' + this.selected.productId);\n    }\n\n    stockClick() {\n        this.router.navigateByUrl('product/' + this.selected.productId + '/stock');\n    }\n\n    publicationClick() {\n        this.router.navigateByUrl('product/' + this.selected.productId + '/publication');\n    }\n\n    addClick() {\n        this.selected = new Product();\n        this.selected.brand = this.allbrands.length > 0 ? this.allbrands[0].value : null;\n        this.selected.productUm =  this.ums[0].value;\n        this.displayPanel = true;\n    }\n\n    editClick() {\n        this.displayPanel = true;\n    }\n\n    closeClick() {\n        this.displayPanel = false;\n        this.selected = null;\n        this.buildFilter(this.products);\n    }\n\n    saveClick() {\n        if (this.isNew) {\n            this.productService.create(this.selected)\n                .subscribe(result => {\n                    this.selected = result;\n                    this.totalRecords++;\n                    this.openClick();\n                }, onerror => alert(onerror._body));\n        } else {\n            this.productService.update(this.selected.productId, this.selected)\n                .subscribe(result => {\n                    this.products[this.selectedIndex] = result;\n                    this.closeClick();\n                }, onerror => alert(onerror._body));\n        }\n    }\n\n    deleteClick() {\n        this.confirmationService.confirm({\n            message: 'All information related to this product will be deleted. Are you sure that you want to delete this product?',\n            accept: () => {\n                this.productService.delete(this.selected.productId)\n                    .subscribe(result => {\n                        this.products.splice(this.selectedIndex, 1);\n                        this.totalRecords--;\n                        this.closeClick();\n                    }, onerror => alert(onerror._body));\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/products.component.ts","module.exports = \"<p-growl [value]=\\\"msgs\\\"></p-growl>\\n<p-confirmDialog width=\\\"425\\\"></p-confirmDialog>\\n<img *ngIf=\\\"isBusy\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\" *ngIf=\\\"product\\\">\\n\\n    <button pButton type=\\\"button\\\" title=\\\"Products\\\" style=\\\"position: absolute; top: 154px; left: 30px; width:50px;\\\" (click)=\\\"cancelClick()\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-reply\\\"></button>\\n        \\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\" style=\\\"margin-left:80px; margin-top:-12px;\\\">\\n            <h3><strong>{{product.productName}}</strong>: {{status}}</h3>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\" style=\\\"text-align: right\\\">\\n            <button pButton type=\\\"button\\\" label=\\\"Save\\\" icon=\\\"fa-save\\\" class=\\\"ui-button-success\\\" style=\\\"margin-right: 20px\\\" (click)=\\\"saveClick()\\\"></button>\\n        </div>\\n    </p-toolbar>\\n\\n    <p-steps [model]=\\\"items\\\" [(activeIndex)]=\\\"activeIndex\\\" styleClass=\\\"steps-custom\\\" [readonly]=\\\"false\\\"></p-steps>\\n\\n    <div class=\\\"steps-container\\\">\\n\\n        <table *ngIf=\\\"activeIndex<3\\\" class='table' cellpadding=\\\"2\\\" cellspacing=\\\"2\\\">\\n            <tr>\\n                <td colspan=\\\"3\\\">Selected Key: <strong>{{selectedKey}}</strong></td>\\n            </tr>\\n            <tr>\\n                <td style=\\\"width: 100px\\\"><p-dropdown [options]=\\\"countries\\\" [(ngModel)]=\\\"translation.country\\\"></p-dropdown></td>\\n                <td><textarea pInputTextarea class=\\\"inputtext\\\" [(ngModel)]=\\\"translation.value\\\"></textarea></td>\\n                <td style=\\\"width: 50px\\\"><button type=\\\"button\\\" label=\\\"Add\\\" pButton (click)=\\\"addTranslateClick()\\\" icon=\\\"fa-plus-circle\\\"></button></td>\\n            </tr>\\n        </table>\\n        \\n        <div *ngIf=\\\"activeIndex===0\\\">\\n            <span class=\\\"steps-status\\\">\\n                <i class=\\\"fa fa-info-circle\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n                {{publicationService.step2}}\\n            </span>\\n            <p-panel header=\\\"Translated descriptions\\\">\\n                <table class='table' cellpadding=\\\"2\\\" cellspacing=\\\"2\\\">\\n                    <tbody>\\n                        <tr *ngFor=\\\"let item of product.translations\\\">\\n                            <td>{{item.country === \\\"EN\\\" ? 'English' : 'Italian'}}</td>\\n                            <td><textarea pInputTextarea class=\\\"inputtext\\\" [(ngModel)]=\\\"item.value\\\">{{item.value}}</textarea></td>\\n                            <td>\\n                                <button type=\\\"button\\\" pButton (click)=\\\"updateTranslateClick(product.translations, item)\\\" icon=\\\"fa-save\\\"></button>\\n                                <button type=\\\"button\\\" pButton (click)=\\\"deleteTranslateClick(product.translations, item)\\\" icon=\\\"fa-trash\\\"></button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </p-panel>\\n        </div>\\n\\n        <div *ngIf=\\\"activeIndex===1\\\">\\n            <div class=\\\"steps-status\\\">\\n                <i class=\\\"fa fa-info-circle\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n                {{publicationService.step1}}\\n            </div>\\n            <p-panel header=\\\"Translated categories\\\">\\n                <table *ngFor=\\\"let c of product.categories\\\" class='table' style=\\\"margin-bottom: 5px; background-color: white;\\\" cellpadding=\\\"2\\\" cellspacing=\\\"2\\\">\\n                    <thead>\\n                        <tr>\\n                            <td colspan=\\\"2\\\"><strong>{{c.category.categoryName}}</strong></td>\\n                            <td style=\\\"width: 100px; text-align: right;\\\">\\n                                    <button type=\\\"button\\\" label=\\\"Select\\\" pButton (click)=\\\"selectTranslateClick(c.category.translations, c.category.categoryName)\\\" icon=\\\"fa-plus-circle\\\"></button>\\n                                </td>\\n                            </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let item of c.category.translations\\\">\\n                            <td>{{item.country === \\\"EN\\\" ? 'English' : 'Italian'}}</td>\\n                            <td><input type=\\\"text\\\" pInputText class=\\\"inputtext\\\" [(ngModel)]=\\\"item.value\\\"/></td>\\n                            <td>\\n                                <button type=\\\"button\\\" pButton (click)=\\\"updateTranslateClick(c.category.translations, item)\\\" icon=\\\"fa-save\\\"></button>\\n                                <button type=\\\"button\\\" pButton (click)=\\\"deleteTranslateClick(c.category.translations, item)\\\" icon=\\\"fa-trash\\\"></button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </p-panel>    \\n        </div>\\n\\n        <div *ngIf=\\\"activeIndex===2\\\">\\n            <span class=\\\"steps-status\\\">\\n                <i class=\\\"fa fa-info-circle\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n                Optional\\n            </span>\\n            <p-panel header=\\\"Translated attributes\\\">\\n                <table *ngFor=\\\"let a of product.attributes\\\" class='table' style=\\\"margin-bottom: 5px; background-color: white;\\\" cellpadding=\\\"2\\\" cellspacing=\\\"2\\\">\\n                    <tr>\\n                        <td colspan=\\\"2\\\"><strong>{{a.attribute.attributeName}}</strong></td>\\n                        <td style=\\\"width: 100px; text-align: right;\\\">\\n                            <button type=\\\"button\\\" label=\\\"Select\\\" pButton (click)=\\\"selectTranslateClick(a.attribute.translations, a.attribute.attributeName)\\\" icon=\\\"fa-plus-circle\\\"></button>\\n                        </td>\\n                    </tr>\\n                    <tr *ngFor=\\\"let item of a.attribute.translations\\\">\\n                        <td>{{item.country === \\\"EN\\\" ? 'English' : 'Italian'}}</td>\\n                        <td><input type=\\\"text\\\" pInputText class=\\\"inputtext\\\" [(ngModel)]=\\\"item.value\\\"/></td>\\n                        <td>\\n                            <button type=\\\"button\\\" pButton (click)=\\\"updateTranslateClick(a.attribute.translations, item)\\\" icon=\\\"fa-save\\\"></button>\\n                            <button type=\\\"button\\\" pButton (click)=\\\"deleteTranslateClick(a.attribute.translations, item)\\\" icon=\\\"fa-trash\\\"></button>\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td colspan=\\\"3\\\">\\n                            <table *ngFor=\\\"let b of a.attributeValues\\\" class='table' style=\\\"margin-bottom: 5px; background-color: white;\\\" cellpadding=\\\"2\\\" cellspacing=\\\"2\\\">\\n                                <tr>\\n                                    <td colspan=\\\"2\\\"><strong>{{b.attributeValue.attributeValueName}}</strong></td>\\n                                    <td style=\\\"width: 100px; text-align: right;\\\">\\n                                        <button type=\\\"button\\\" label=\\\"Select\\\" pButton (click)=\\\"selectTranslateClick(b.attributeValue.translations, b.attributeValue.attributeValueName)\\\" icon=\\\"fa-plus-circle\\\"></button>\\n                                    </td>\\n                                </tr>\\n                                <tr *ngFor=\\\"let item of b.attributeValue.translations\\\">\\n                                    <td>{{item.country === \\\"EN\\\" ? 'English' : 'Italian'}}</td>\\n                                    <td><input type=\\\"text\\\" pInputText class=\\\"inputtext\\\" [(ngModel)]=\\\"item.value\\\"/></td>\\n                                    <td>\\n                                        <button type=\\\"button\\\" pButton (click)=\\\"updateTranslateClick(b.attributeValue.translations, item)\\\" icon=\\\"fa-save\\\"></button>\\n                                        <button type=\\\"button\\\" pButton (click)=\\\"deleteTranslateClick(b.attributeValue.translations, item)\\\" icon=\\\"fa-trash\\\"></button>\\n                                    </td>\\n                                </tr>\\n                            </table>\\n                        </td>\\n                    </tr>\\n                </table>\\n            </p-panel>   \\n        </div>\\n\\n        <div *ngIf=\\\"activeIndex===3\\\">\\n            <span class=\\\"steps-status\\\">\\n                <i class=\\\"fa fa-info-circle\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n                {{publicationService.step4}}\\n            </span>\\n            <p-carousel headerText=\\\"Medias\\\" [value]=\\\"product.medias\\\">\\n                <ng-template let-media pTemplate=\\\"item\\\">\\n                    <div class=\\\"ui-grid ui-grid-responsive\\\" style=\\\"background-color: white\\\">\\n                        <div class=\\\"ui-grid-row\\\">\\n                            <div class=\\\"ui-grid-col-12\\\"><img src=\\\"{{media.url}}\\\" height=\\\"240px\\\" width=\\\"100%\\\" (click)=\\\"selectMedia(media.url);\\\"/></div>\\n                        </div>\\n                        <div class=\\\"ui-grid-row\\\">\\n                            <div class=\\\"ui-grid-col-12\\\">\\n                                <button type=\\\"button\\\" pButton icon=\\\"fa-trash\\\" style=\\\"margin-right: 30px\\\" (click)=\\\"deleteMediaClick(media)\\\"></button>\\n                                <span>N°</span>\\n                                <p-spinner size=\\\"5\\\" [(ngModel)]=\\\"media.number\\\"></p-spinner>\\n                                <button type=\\\"button\\\" pButton icon=\\\"fa-save\\\" style=\\\"margin-left: 10px\\\" (click)=\\\"updateMediaClick(media)\\\"></button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </ng-template>\\n            </p-carousel>\\n            \\n            <p-fileUpload name=\\\"files\\\" url=\\\"/api/media\\\" multiple=\\\"multiple\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" \\n                (onBeforeUpload)=\\\"onBeforeUpload($event)\\\" (onUpload)=\\\"onUpload($event)\\\"></p-fileUpload>\\n\\n            <p-panel header=\\\"{{selectedMedia}}\\\">\\n                <img src=\\\"{{selectedMedia}}\\\" width=\\\"100%\\\" *ngIf=\\\"selectedMedia\\\"/>\\n            </p-panel>\\n        </div>\\n\\n        <div *ngIf=\\\"activeIndex===4\\\">\\n            <span class=\\\"steps-status\\\">\\n                <i class=\\\"fa fa-info-circle\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n                {{status}}\\n            </span>\\n            <p-panel header=\\\"Publish in the store\\\">\\n                <div style=\\\"padding: 30px\\\">\\n                    <p>\\n                        <strong>Start</strong>\\n                        <br/>\\n                        <p-calendar [(ngModel)]=\\\"publication.publicationStartAt\\\" dateFormat=\\\"yy-mm-dd\\\" [showIcon]=\\\"true\\\"></p-calendar>\\n                    </p>\\n                    <p>\\n                        <strong>Finish</strong>\\n                        <br/>\\n                        <p-calendar [(ngModel)]=\\\"publication.publicationFinishAt\\\" dateFormat=\\\"yy-mm-dd\\\" [showIcon]=\\\"true\\\"></p-calendar>\\n                    </p>\\n                    <br/>\\n                    <p>\\n                        <strong>Featured</strong>\\n                        <br/>\\n                        <p-inputSwitch [(ngModel)]=\\\"publication.publicationFeatured\\\"></p-inputSwitch>\\n                    </p>\\n                </div>\\n            </p-panel>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/publication.component.html\n// module id = ../../../../../src/app/product/publication.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Message, MenuItem, SelectItem, Button, ConfirmationService } from 'primeng/primeng';\nimport { Observable } from 'rxjs/Rx';\nimport { SessionService } from '../services/session.service'\nimport { PublicationService } from '../services/publication.service'\nimport { Publication, Translation, Media } from '../shared/models'\n\n@Component({\n    selector: 'publication',\n    templateUrl: 'publication.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class PublicationComponent implements OnInit {\n\n    private sub: any;\n    private items: MenuItem[];\n    private selectedArray: any;\n    selectedMedia: string;\n    selectedKey: string;\n    msgs: Message[] = [];\n    isBusy: boolean;\n    activeIndex = 0;\n    countries: SelectItem[];\n    categories: SelectItem[];\n    attributes: SelectItem[];\n    translation: Translation;\n\n    constructor(private sessionService: SessionService,\n                private activatedRoute: ActivatedRoute,\n                private confirmationService: ConfirmationService,\n                private publicationService: PublicationService,\n                private location: Location) {\n\n        sessionService.title = 'Publication';\n\n        this.countries = [];\n        this.countries.push({label: 'English', value: 'EN'});\n        this.countries.push({label: 'Italian', value: 'IT'});\n    }\n\n    get product() { return this.publicationService.product; }\n\n    get publication() { return this.publicationService.publication; }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(true);\n\n        this.translation = new Translation(this.countries[0].value, '');\n        this.selectedKey = 'Description';\n\n        // Subscribe to route params\n        this.sub = this.activatedRoute.params.subscribe(params => {\n            let id = params['id'];\n            this.publicationService.getProduct(id).subscribe(result => {\n                this.publicationService.product = result;\n                this.selectedArray = this.product.translations;\n                this.categories = this.publicationService.getCategories();\n                this.attributes = this.publicationService.getAttributes();\n                this.publicationService.getPublication(id).subscribe(res => {\n                    res.productId = result.productId;\n                    this.publicationService.publication = res;\n                    this.isBusy = false;\n                });\n            });\n        });\n\n        this.items = [{\n                label: 'Translate Description',\n                command: (event: any) => { this.activeIndex = 0; this.onIndexChanged(); }\n            },\n            {\n                label: 'Translate Categories',\n                command: (event: any) => { this.activeIndex = 1; this.onIndexChanged(); }\n            },\n            {\n                label: 'Translate Attributes',\n                command: (event: any) => { this.activeIndex = 2; this.onIndexChanged(); }\n            },\n            {\n                label: 'Medias',\n                command: (event: any) => { this.activeIndex = 3; this.onIndexChanged(); }\n            },\n            {\n                label: 'Publish',\n                command: (event: any) => { this.activeIndex = 4; this.onIndexChanged(); }\n            }\n        ];\n    }\n\n    ngOnDestroy() {\n        // Clean sub to avoid memory leak\n        this.sub.unsubscribe();\n\n        this.msgs = null;\n        this.selectedMedia = null;\n        this.countries = null;\n        this.publicationService.product = null;\n        this.translation = null;\n        this.categories = null;\n        this.attributes = null;\n    }\n\n    cancelClick() {\n        this.location.back();\n    }\n\n    onIndexChanged() {\n        switch (this.activeIndex) {\n            case 0:\n                this.selectedKey = 'Description';\n                this.selectedArray = this.product.translations;\n                break;\n            case 1:\n                this.selectedKey = this.product.categories[0].category.categoryName;\n                this.selectedArray = this.product.categories[0].category.translations;\n                break;\n            case 2:\n                this.selectedKey = this.product.attributes[0].attribute.attributeName;\n                this.selectedArray = this.product.attributes[0].attribute.translations;\n                break;\n            default:\n                break;\n        }\n        this.translation = new Translation(this.translation.country, '');\n    }\n\n    // Step 1 2 3\n    addTranslateClick() {\n        if (this.translation.value === '') {\n            this.msgs.push({severity: 'warn', summary: 'Attention', detail: 'Translate is not empty!'});\n            return;\n        }\n        let translate = this.publicationService.getTranslate(this.selectedArray, this.translation.country);\n        if (translate) {\n            this.msgs.push({severity: 'warn', summary: 'Attention', detail: 'Translate for this country alrady present!'});\n            return;\n        }\n        let item = new Translation(this.translation.country, this.translation.value);\n        this.publicationService.addTranslate(this.selectedArray, item);\n        this.translation.value = '';\n    }\n\n    selectTranslateClick(array, key) {\n        this.selectedKey = key;\n        this.selectedArray = array;\n        this.translation = new Translation(this.translation.country, '');\n    }\n\n    updateTranslateClick(array, item) {\n        if (item.value === '') {\n            return;\n        }\n\n        this.publicationService.updateTranslate(array, item);\n        this.msgs.push({severity: 'success', summary: 'Update translate', detail: 'Successfully updated!'});\n    }\n\n    deleteTranslateClick(array, item) {\n        this.confirmationService.confirm({\n            message: 'Do you want to delete this translate?',\n            header: 'Delete Confirmation',\n            icon: 'fa fa-trash',\n            accept: () => {\n                this.publicationService.deleteTranslate(array, item);\n            }\n        });\n    }\n\n    // Step 4\n    onBeforeUpload(event) {\n        // event.formData.append('codartCode', this.publicationService.codartinfo.id);\n    }\n\n    onUpload(event) {\n        let index = this.product.medias.length;\n        event.files.forEach(file => {\n            index++;\n            let media = new Media(file.name, 'media/' + file.name, index);\n            this.publicationService.addMedia(media);\n        });\n    }\n\n    updateMediaClick(item) {\n        this.publicationService.updateMedia(item);\n    }\n\n    deleteMediaClick(item) {\n        this.confirmationService.confirm({\n            message: 'Do you want to delete this media?',\n            header: 'Delete Confirmation',\n            icon: 'fa fa-trash',\n            accept: () => {\n                this.publicationService.deleteMedia(item.id);\n            }\n        });\n    }\n\n    selectMedia(url: string) {\n        this.selectedMedia = url;\n    }\n\n    saveClick() {\n        this.isBusy = true;\n        this.publicationService.saveProduct().subscribe(result => {\n            this.publicationService.product = result;\n            this.msgs.push({severity: 'success', summary: 'Product', detail: 'Successfully saved!'});\n            if (this.publication.publicationStartAt) {\n                if (this.publication.publicationId === 0) {\n                    this.publicationService.create(this.publication)\n                        .subscribe(response => {\n                            this.isBusy = false;\n                            this.msgs.push({severity: 'success', summary: 'Publication', detail: 'Successfully published!'});\n                        });\n                } else {\n                    this.publicationService.update(this.publication.publicationId, this.publication)\n                        .subscribe(response => this.isBusy = false );\n                }\n            }\n        });\n    }\n\n    get status(): string {\n        let status = this.publicationService.getStatus();\n        return status === 'Completed' ? this.publicationService.published ? 'Published' : 'Ready for sale' : 'Check ' + status;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/publication.component.ts","module.exports = \"<img *ngIf=\\\"isBusy\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n   <button pButton type=\\\"button\\\" title=\\\"Products\\\" style=\\\"position: absolute; top: 144px; left: 30px; width:50px;\\\" (click)=\\\"cancelClick()\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-reply\\\"></button>\\n    \\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\" style=\\\"margin-left:60px\\\">\\n            <ul *ngIf=\\\"product\\\">\\n                <li><strong>Product</strong> {{product.productName}}</li>\\n                <li><strong>Brand</strong> {{product.brand.brandName}}</li>\\n                <li><strong>Category</strong>\\n                    <ul>\\n                        <li *ngFor=\\\"let item of product.categories\\\">{{ item.category.categoryName }}</li>\\n                    </ul>\\n                </li>\\n                <li><strong>Inventory</strong>\\n                    <ul>\\n                        <li>Items: <strong>{{totalRecords}}</strong></li>\\n                        <li>Stock: <strong>{{totalStocks}}</strong></li>\\n                        <li>Booked: <strong>{{totalBookeds}}</strong></li>\\n                    </ul>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\">\\n            <p-multiSelect [options]=\\\"stores\\\" defaultLabel=\\\"All stores\\\" (onChange)=\\\"onStoreChanged($event)\\\"></p-multiSelect>\\n        </div>\\n    </p-toolbar>\\n\\n    <table *ngIf=\\\"articleForm\\\" class=\\\"table\\\" cellpadding=\\\"2\\\" cellspacing=\\\"2\\\">    \\n        <thead>\\n            <tr> \\n                <td *ngFor=\\\"let h of articleForm.header\\\" align=\\\"center\\\" style=\\\"background-color: whitesmoke\\\"><strong>{{h}}</strong></td> \\n            </tr>\\n        </thead>\\n        <tbody> \\n            <tr *ngFor=\\\"let item of articleForm.body\\\"> \\n                <td *ngFor=\\\"let col of item\\\" align=\\\"center\\\">\\n                    <span *ngIf=\\\"col.id===0\\\" title=\\\"{{col.value}}\\\">{{col.value}}</span> \\n                    <span *ngIf=\\\"col.id>0\\\" title=\\\"{{col.value}}\\\">{{col.stock}} - {{col.booked}}</span> \\n                </td> \\n            </tr> \\n        </tbody>\\n    </table>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/stock.component.html\n// module id = ../../../../../src/app/product/stock.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { SelectItem } from 'primeng/primeng';\nimport {\n    Product, ProductCategory, Category, ProductAttribute, Attribute,\n    ProductAttributeValue, Article, ArticleAttributeValue, AttributeValue, ArticleForm\n} from './../shared/models';\nimport { Helpers } from './../shared/helpers';\nimport { SessionService } from './../services/session.service';\nimport { ProductService } from './../services/product.service';\nimport { StoreService } from './../services/store.service';\n\n@Component({\n    selector: 'stock',\n    templateUrl: 'stock.component.html'\n})\n\nexport class StockComponent implements OnInit, OnDestroy {\n    private sub: any;\n    stores: SelectItem[];\n    product: Product;\n    articleForm: ArticleForm;\n    totalRecords = 0;\n    totalStocks = 0;\n    totalBookeds = 0;\n    isBusy: boolean;\n\n    constructor(private activatedRoute: ActivatedRoute,\n                private sessionService: SessionService,\n                private productService: ProductService,\n                private storeService: StoreService,\n                private location: Location) {\n        sessionService.title = 'Stock';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        this.isBusy = true;\n\n        // Subscribe to route params\n        this.sub = this.activatedRoute.params.subscribe(params => {\n            let id = params['id'];\n            this.productService.getProduct(id)\n                .subscribe(result => {\n                    this.product = result;\n                    this.totalRecords = this.product.articles.length;\n                    this.createSheet('0');\n                }, onerror => alert(onerror._body)\n            );\n        });\n\n        this.storeService.getAll()\n            .subscribe(result => {\n                this.stores = result.map(p => Helpers.newSelectItem(p.storeId, p.storeName));\n            }, onerror => alert(onerror._body)\n        );\n    }\n\n    ngOnDestroy() {\n        // Clean sub to avoid memory leak\n        this.sub.unsubscribe();\n    }\n\n    cancelClick() {\n        this.location.back();\n    }\n\n    createSheet(storeIds: string) {\n        this.isBusy = true;\n        if (storeIds === '') {\n            storeIds = '0';\n        }\n        this.totalStocks = 0;\n        this.totalBookeds = 0;\n        this.productService.getArticles(this.product.productId, storeIds)\n            .subscribe(result => {\n                this.articleForm = result;\n                this.articleForm.body.forEach(a => {\n                    a.forEach(b => {\n                        this.totalStocks += b.stock;\n                        this.totalBookeds += b.booked;\n                    });\n                });\n                this.isBusy = false;\n            }, onerror => alert(onerror._body));\n    }\n\n    onStoreChanged(event: any) {\n        this.createSheet(event.value.join(','));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/product/stock.component.ts","module.exports = \"<img *ngIf=\\\"!items\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\">\\n            <p-calendar [(ngModel)]=\\\"dateStartValue\\\" [inputStyle]=\\\"{'width':'120px'}\\\" dateFormat=\\\"yy-mm-dd\\\" [showIcon]=\\\"true\\\"></p-calendar>\\n            <p-calendar [(ngModel)]=\\\"dateFinishValue\\\" [inputStyle]=\\\"{'width':'120px','margin-left':'30px'}\\\" dateFormat=\\\"yy-mm-dd\\\" [showIcon]=\\\"true\\\"></p-calendar>\\n            <button pButton type=\\\"button\\\" label=\\\"Show\\\" (click)=\\\"getData()\\\" style=\\\"margin-left: 50px\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-refresh\\\"></button>\\n        </div>\\n    </p-toolbar>\\n\\n    <p-dataTable [value]=\\\"items\\\" sortField=\\\"movementDevice\\\" \\n        rowGroupMode=\\\"subheader\\\" groupField=\\\"movementDevice\\\" expandableRowGroups=\\\"true\\\" [sortableRowGroup]=\\\"false\\\"\\n        [responsive]=\\\"true\\\">\\n        <p-footer>\\n            <span style=\\\"float: left\\\"><b>{{totalItems}}</b> receipts</span>\\n            <span style=\\\"float: right\\\">Total amount <b>{{totalAmount | currency: 'EUR' : true}}</b></span>\\n            <p>&nbsp;</p>\\n        </p-footer>\\n        <ng-template pTemplate=\\\"rowgroupheader\\\" let-rowData>{{rowData['movementDevice']}}</ng-template>\\n        <p-column field=\\\"movementNumber\\\" header=\\\"Number\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"movementDate\\\" header=\\\"Date\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"movementAmount\\\" header=\\\"Amount\\\" [sortable]=\\\"true\\\">\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <span>{{data[col.field] | currency: 'EUR' : true}}</span>\\n            </ng-template>\\n        </p-column>\\n        <ng-template pTemplate=\\\"rowgroupfooter\\\" let-data>\\n            <td colspan=\\\"2\\\" style=\\\"text-align:right\\\">Subtotal amount</td>\\n            <td><b>{{calculateGroupTotal(data['movementDevice']) | currency: 'EUR' : true }}</b></td>\\n        </ng-template>\\n    </p-dataTable>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/report/receipts.component.html\n// module id = ../../../../../src/app/report/receipts.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { SessionService } from './../services/session.service';\nimport { MovementService } from './../services/movement.service';\nimport { Movement, Period } from './../shared/models';\nimport { DateFilterPipe } from './../pipes/date-filter.pipe';\n\n@Component({\n    selector: 'reportreceipts-component',\n    templateUrl: 'receipts.component.html'\n})\n\nexport class ReportReceiptsComponent implements OnInit {\n    totalItems = 0;\n    totalAmount = 0.0;\n    items: Movement[];\n    private period: Period;\n\n    constructor(private sessionService: SessionService,\n                private movementService: MovementService) {\n        sessionService.title = 'Receipts';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n        this.period = new Period();\n        this.getData();\n    }\n\n    @Input() set dateStartValue(value: Date) {\n        this.period.start = value;\n    }\n    get dateStartValue(): Date {\n        return this.period.start;\n    }\n\n    @Input() set dateFinishValue(value: Date) {\n        this.period.finish = value;\n    }\n    get dateFinishValue(): Date {\n        return this.period.finish;\n    }\n\n    calculateGroupTotal(device: string) {\n        let total = 0;\n        if (this.items) {\n            for (let movemet of this.items) {\n                if (movemet.movementDevice === device) {\n                    total += movemet.movementAmount;\n                }\n            }\n        }\n        return total;\n    }\n\n    updateTotals() {\n        this.totalItems = this.items.length;\n        if (this.totalItems > 0) {\n            this.totalAmount = this.items.map(p => p.movementAmount).reduce((sum, current) => sum + current);\n        }\n    }\n\n    getData() {\n        this.movementService\n            .getReceipted(this.period)\n            .subscribe(result => {\n                this.items = result;\n                this.updateTotals();\n            }, onerror => alert(onerror._body)\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/report/receipts.component.ts","module.exports = \"<img *ngIf=\\\"!items\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\">\\n            <p-calendar [(ngModel)]=\\\"dateStartValue\\\" [inputStyle]=\\\"{'width':'120px'}\\\" dateFormat=\\\"yy-mm-dd\\\" [showIcon]=\\\"true\\\"></p-calendar>\\n            <p-calendar [(ngModel)]=\\\"dateFinishValue\\\" [inputStyle]=\\\"{'width':'120px','margin-left':'30px'}\\\" dateFormat=\\\"yy-mm-dd\\\" [showIcon]=\\\"true\\\"></p-calendar>\\n            <button pButton type=\\\"button\\\" label=\\\"Show\\\" (click)=\\\"getData()\\\" style=\\\"margin-left: 50px\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-refresh\\\"></button>\\n        </div>\\n    </p-toolbar>\\n\\n    <p-dataTable [value]=\\\"items | priceFilter:priceValue:'movement':amountValue | articleFilter:articleValue | categoryFilter:categoryValue:'sales'\\\" [totalRecords]=\\\"totalRecords\\\" [responsive]=\\\"true\\\" #dt>\\n        <p-footer>\\n            <span style=\\\"float: left\\\"><b>{{totalItems}}</b> receipts</span>\\n            <span style=\\\"float: right\\\">Total amount <b>{{totalAmount | currency: 'EUR' : true}}</b></span>\\n            <p>&nbsp;</p>\\n        </p-footer>\\n        <p-column field=\\\"movementArticleProduct.brand.brandName\\\" header=\\\"Brand\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"contains\\\"></p-column>     \\n        <p-column header=\\\"Categories\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\" >\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n               <input pInputText [(ngModel)]=\\\"categoryValue\\\" placeholder=\\\"Search\\\" style=\\\"width: 100%;margin-top: 4px;\\\" styleClass=\\\"ui-column-filter\\\"/>\\n            </ng-template>\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <li *ngFor=\\\"let item of data.movementArticleProduct.categories\\\"> {{item.category.categoryName}} </li>\\n            </ng-template>\\n        </p-column>\\n        <p-column header=\\\"Product\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <input pInputText [(ngModel)]=\\\"articleValue\\\" placeholder=\\\"Search\\\" style=\\\"width: 100%;margin-top: 4px;\\\" styleClass=\\\"ui-column-filter\\\"/>\\n            </ng-template>\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                {{data.movementArticleProduct | articleInfo:data.movementArticleBarcode}}\\n            </ng-template>\\n        </p-column>\\n        <p-column field=\\\"movementArticleQuantity\\\" header=\\\"Quantity\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n        <p-column field=\\\"movementArticlePrice\\\" header=\\\"Price ({{priceValue||'No Filter'}})\\\" [sortable]=\\\"true\\\" [filter]=\\\"false\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <i class=\\\"fa fa-close\\\" (click)=\\\"priceValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n                <p-slider [style]=\\\"{'margin-top':'14px','margin-bottom':'5px'}\\\" [(ngModel)]=\\\"priceValue\\\" [min]=\\\"1\\\" [max]=\\\"1000\\\"></p-slider>\\n            </ng-template>\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                {{data.movementArticlePrice | currency: 'EUR' : true}}\\n            </ng-template>\\n        </p-column>\\n        <p-column field=\\\"movementArticleAmount\\\" header=\\\"Amount ({{amountValue||'No Filter'}})\\\" [editable]=\\\"false\\\" [sortable]=\\\"true\\\" [filter]=\\\"false\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n            <ng-template pTemplate=\\\"filter\\\" let-col>\\n                <i class=\\\"fa fa-close\\\" (click)=\\\"amountValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n                <p-slider [style]=\\\"{'margin-top':'14px','margin-bottom':'5px'}\\\" [(ngModel)]=\\\"amountValue\\\" [min]=\\\"1\\\" [max]=\\\"10000\\\"></p-slider>\\n            </ng-template>\\n            <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                {{data.movementArticleAmount | currency: 'EUR' : true}}\\n            </ng-template>\\n        </p-column>\\n    </p-dataTable>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/report/sales.component.html\n// module id = ../../../../../src/app/report/sales.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { SessionService } from './../services/session.service';\nimport { MovementService } from './../services/movement.service';\nimport { MovementArticle, Period } from './../shared/models';\nimport { DateFilterPipe } from './../pipes/date-filter.pipe';\n\n@Component({\n    selector: 'reportsales-component',\n    templateUrl: 'sales.component.html'\n})\n\nexport class ReportSalesComponent implements OnInit {\n    private period: Period;\n    totalItems = 0;\n    totalAmount = 0.0;\n    items: MovementArticle[];\n    articleValue: string;\n    categoryValue: string;\n    priceValue: number;\n    amountValue: number;\n\n    constructor(private sessionService: SessionService,\n                private movementService: MovementService) {\n        sessionService.title = 'Sales';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(true);\n\n        this.period = new Period();\n        this.getData();\n    }\n\n    @Input() set dateStartValue(value: Date) {\n        this.period.start = value;\n    }\n    get dateStartValue(): Date {\n        return this.period.start;\n    }\n\n    @Input() set dateFinishValue(value: Date) {\n        this.period.finish = value;\n     }\n    get dateFinishValue(): Date {\n        return this.period.finish;\n    }\n\n    calculateGroupTotal(brand: string) {\n        let total = 0;\n        if (this.items) {\n            for (let movemet of this.items) {\n                if (movemet.movementArticleProduct.brand.brandName === brand) {\n                    total += movemet.movementArticleAmount;\n                }\n            }\n        }\n        return total;\n    }\n\n    getData() {\n        this.movementService\n            .getSales(this.period)\n            .subscribe(result => {\n                this.items = result;\n                this.totalItems = result.length;\n                if (this.totalItems > 0) {\n                    this.totalAmount = this.items.map(p => p.movementArticleAmount).reduce((sum, current) => sum + current);\n                }\n            }, onerror => alert(onerror._body)\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/report/sales.component.ts","module.exports = \"<img *ngIf=\\\"isBusy\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\">\\n            <p-dropdown [(ngModel)]=\\\"selectedYear\\\" [editable]=\\\"true\\\" [options]=\\\"years\\\" [style]=\\\"{'width':'100px'}\\\"></p-dropdown>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\">\\n            <button type=\\\"button\\\" pButton (click)=\\\"showCategory()\\\" [disabled]=\\\"isBusy\\\" label=\\\"Category\\\" icon=\\\"fa-refresh\\\"></button>\\n            <button type=\\\"button\\\" pButton (click)=\\\"showProduct()\\\" [disabled]=\\\"isBusy\\\" label=\\\"Product\\\" icon=\\\"fa-refresh\\\"></button>\\n        </div>\\n    </p-toolbar>\\n\\n    <div>\\n        <p-chart #saleChart type=\\\"line\\\" [data]=\\\"sales\\\" [options]=\\\"saleOptions\\\"></p-chart>\\n        <br/>\\n        <p-chart #deviceChart type=\\\"doughnut\\\" [data]=\\\"devices\\\" [options]=\\\"deviceOptions\\\" style=\\\"float: left; width: 48%;\\\"></p-chart>\\n        <p-chart #totalChart type=\\\"polarArea\\\" [data]=\\\"totals\\\" [options]=\\\"totalOptions\\\" style=\\\"float: right; width: 48%;\\\"></p-chart>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/report/statistics.component.html\n// module id = ../../../../../src/app/report/statistics.component.html\n// module chunks = main","import { ViewChild, Component, OnInit } from '@angular/core';\nimport { SessionService } from './../services/session.service';\nimport { StatisticService } from './../services/statistic.service';\nimport { SelectItem, UIChart } from 'primeng/primeng';\n\n@Component({\n    selector: 'statistics-component',\n    templateUrl: 'statistics.component.html'\n})\n\nexport class StatisticsComponent implements OnInit {\n\n    @ViewChild('deviceChart') deviceChart: UIChart;\n    @ViewChild('saleChart') saleChart: UIChart;\n    @ViewChild('totalChart') totalChart: UIChart;\n    isBusy: boolean;\n    years: SelectItem[];\n    selectedYear: number;\n    sales: any;\n    saleOptions: any;\n    devices: any;\n    deviceOptions: any;\n    totals: any;\n    totalOptions: any;\n\n    constructor(private sessionService: SessionService,\n                private statisticService: StatisticService) {\n        sessionService.title = 'Statistics';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(true);\n\n        this.deviceOptions = {\n            title: {\n                display: true,\n                text: 'Amount of devices'\n            },\n            legend: {\n                position: 'top',\n                labels: {\n                    boxWidth: 20\n                }\n            }\n        };\n\n        this.saleOptions = {\n            title: {\n                display: true\n            },\n            legend: {\n                position: 'top',\n                labels: {\n                    boxWidth: 20\n                }\n            }\n        };\n\n        this.totalOptions = {\n            title: {\n                display: true\n            },\n            legend: {\n                position: 'top',\n                labels: {\n                    boxWidth: 20\n                }\n            }\n        };\n\n        this.showDevice();\n        this.years = [];\n        this.selectedYear = new Date().getFullYear();\n        for (let i = 2017; i <= this.selectedYear; i++) {\n            this.years.push({label: i.toString(), value: i});\n        }\n        this.showCategory();\n    }\n\n    showDevice() {\n        this.statisticService.getUseByDeviceAsync().subscribe(result => {\n            this.devices = result;\n            this.totals = result;\n            this.delay(1000).then(() => this.deviceChart.refresh());\n        });\n    }\n\n    showCategory() {\n        this.isBusy = true;\n        this.saleOptions.title.text = 'Sales for month of top 15 categories';\n        this.totalOptions.title.text = 'Amount of categories';\n\n        this.statisticService.getCategoryByYearAsync(this.selectedYear).subscribe(result => {\n            this.totals = result;\n            this.statisticService.getCategoryForMonthByYearAsync(this.selectedYear).subscribe(res => {\n                this.sales = res;\n                this.refresh();\n            });\n        });\n    }\n\n    showProduct() {\n        this.isBusy = true;\n        this.saleOptions.title.text = 'Sales for month of top 15 products';\n        this.totalOptions.title.text = 'Amount of products';\n\n        this.statisticService.getProductByYearAsync(this.selectedYear).subscribe(result => {\n            this.totals = result;\n            this.statisticService.getProductForMonthByYearAsync(this.selectedYear).subscribe(res => {\n                this.sales = res;\n                this.refresh();\n            });\n        });\n    }\n\n    refresh() {\n        this.delay(1000).then(() => {\n            this.saleChart.refresh();\n            this.totalChart.refresh();\n            this.isBusy = false;\n        });\n    }\n\n    delay(ms: number) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/report/statistics.component.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport { Account } from '../shared/models';\nimport { Helpers } from '../shared/helpers';\n\n@Injectable()\nexport class AccountService {\n\n    constructor(private http: Http) {\n    }\n\n    getAll(): Observable<Account[]> {\n        return this.http.get('/api/account', { headers: Helpers.getHeaders() })\n            .map(result => <Account[]>result.json());\n    }\n\n    getById(id: string): Observable<Account> {\n        return this.http.get('/api/account/' + id, { headers: Helpers.getHeaders() })\n            .map(result => <Account>result.json());\n    }\n\n    create(model: Account): Observable<Account> {\n        return this.http.post('/api/account', model, { headers: Helpers.getHeaders() })\n            .map(result => <Account>result.json());\n    }\n\n    update(id: string, model: Account): Observable<Account> {\n        return this.http.put('/api/account/' + id, model, { headers: Helpers.getHeaders() })\n            .map(result => <Account>result.json());\n    }\n\n    delete(id: string): Observable<any> {\n        return this.http.delete('/api/account/' + id, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/account.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport { Attribute, AttributeValue } from '../shared/models';\nimport { Helpers } from '../shared/helpers';\n\n@Injectable()\nexport class AttributeService {\n\n    constructor(private http: Http) { }\n\n    getAll(): Observable<Attribute[]> {\n        return this.http.get('/api/attribute', { headers: Helpers.getHeaders() })\n            .map(result => <Attribute[]>result.json());\n    }\n\n    getById(id: number): Observable<Attribute> {\n        return this.http.get('/api/attribute/' + id, { headers: Helpers.getHeaders() })\n            .map(result => <Attribute>result.json());\n    }\n\n    create(model: Attribute): Observable<Attribute> {\n        return this.http.post('/api/attribute', model, { headers: Helpers.getHeaders() })\n            .map(result => <Attribute>result.json());\n    }\n\n    update(id: number, model: Attribute): Observable<Attribute> {\n        return this.http.put('/api/attribute/' + id, model, { headers: Helpers.getHeaders() })\n            .map(result => <Attribute>result.json());\n    }\n\n    delete(id: number): Observable<any> {\n        return this.http.delete('/api/attribute/' + id, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n\n    getValueAll(): Observable<AttributeValue[]> {\n        return this.http.get('/api/attributevalue', { headers: Helpers.getHeaders() })\n            .map(result => <AttributeValue[]>result.json());\n    }\n\n    getValueByAttributeId(id: number): Observable<AttributeValue[]> {\n        return this.http.get('/api/attribute/' + id + '/value', { headers: Helpers.getHeaders() })\n            .map(result => <AttributeValue[]>result.json());\n    }\n\n    getValueById(id: number): Observable<AttributeValue> {\n        return this.http.get('/api/attributevalue/' + id, { headers: Helpers.getHeaders() })\n            .map(result => <AttributeValue>result.json());\n    }\n\n    createValue(model: AttributeValue): Observable<AttributeValue> {\n        return this.http.post('/api/attributevalue', model, { headers: Helpers.getHeaders() })\n            .map(result => <AttributeValue>result.json());\n    }\n\n    updateValue(id: number, model: AttributeValue): Observable<AttributeValue> {\n        return this.http.put('/api/attributevalue/' + id, model, { headers: Helpers.getHeaders() })\n            .map(result => <AttributeValue>result.json());\n    }\n\n    deleteValue(id: number): Observable<any> {\n        return this.http.delete('/api/attributevalue/' + id, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/attribute.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport { Brand } from '../shared/models';\nimport { Helpers } from '../shared/helpers';\n\n@Injectable()\nexport class BrandService {\n\n    constructor(private http: Http) {\n    }\n\n    getAll(): Observable<Brand[]> {\n        return this.http.get('/api/brand', { headers: Helpers.getHeaders() })\n            .map(result => <Brand[]>result.json());\n    }\n\n    getById(id: number): Observable<Brand> {\n        return this.http.get('/api/brand/' + id, { headers: Helpers.getHeaders() })\n            .map(result => <Brand>result.json());\n    }\n\n    create(model: Brand): Observable<Brand> {\n        return this.http.post('/api/brand', model, { headers: Helpers.getHeaders() })\n            .map(result => <Brand>result.json());\n    }\n\n    update(id: number, model: Brand): Observable<Brand> {\n        return this.http.put('/api/brand/' + id, model, { headers: Helpers.getHeaders() })\n            .map(result => <Brand>result.json());\n    }\n\n    delete(id: number): Observable<any> {\n        return this.http.delete('/api/brand/' + id, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/brand.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport { Category } from '../shared/models';\nimport { Helpers } from '../shared/helpers';\n\n@Injectable()\nexport class CategoryService {\n\n    constructor(private http: Http) {\n    }\n\n    getAll(): Observable<Category[]> {\n        return this.http.get('/api/category', { headers: Helpers.getHeaders() })\n            .map(result => <Category[]>result.json());\n    }\n\n    getById(id: number): Observable<Category> {\n        return this.http.get('/api/category/' + id, { headers: Helpers.getHeaders() })\n            .map(result => <Category>result.json());\n    }\n\n    create(model: Category): Observable<Category> {\n        return this.http.post('/api/category', model, { headers: Helpers.getHeaders() })\n            .map(result => <Category>result.json());\n    }\n\n    update(id: number, model: Category): Observable<Category> {\n        return this.http.put('/api/category/' + id, model, { headers: Helpers.getHeaders() })\n            .map(result => <Category>result.json());\n    }\n\n    delete(id: number): Observable<any> {\n        return this.http.delete('/api/category/' + id, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/category.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport { Causal } from '../shared/models';\nimport { Helpers } from '../shared/helpers';\n\n@Injectable()\nexport class CausalService {\n\n    constructor(private http: Http) {\n    }\n\n    getAll(): Observable<Causal[]> {\n        return this.http.get('/api/causal', { headers: Helpers.getHeaders() })\n            .map(result => <Causal[]>result.json());\n    }\n\n    getById(id: number): Observable<Causal> {\n        return this.http.get('/api/causal/' + id, { headers: Helpers.getHeaders() })\n            .map(result => <Causal>result.json());\n    }\n\n    create(model: Causal): Observable<Causal> {\n        return this.http.post('/api/causal', model, { headers: Helpers.getHeaders() })\n            .map(result => <Causal>result.json());\n    }\n\n    update(id: number, model: Causal): Observable<Causal> {\n        return this.http.put('/api/causal/' + id, model, { headers: Helpers.getHeaders() })\n            .map(result => <Causal>result.json());\n    }\n\n    delete(id: number): Observable<any> {\n        return this.http.delete('/api/causal/' + id, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/causal.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport { Company, Email } from '../shared/models';\nimport { Helpers } from '../shared/helpers';\n\n@Injectable()\nexport class CompanyService {\n\n    constructor(private http: Http) {\n    }\n\n    get(): Observable<Company> {\n        return this.http.get('/api/company', { headers: Helpers.getHeaders() })\n            .map(result => <Company>result.json());\n    }\n\n    create(model: Company): Observable<Company> {\n        return this.http.post('/api/company', model, { headers: Helpers.getHeaders() })\n            .map(result => <Company>result.json());\n    }\n\n    update(model: Company): Observable<Company> {\n        return this.http.put('/api/company', model, { headers: Helpers.getHeaders() })\n            .map(result => <Company>result.json());\n    }\n\n    sendMail(model: Email): Observable<Email> {\n        return this.http.post('/api/email', model, { headers: Helpers.getHeaders() })\n            .map(result => <Email>result.json());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/company.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport { Customer } from '../shared/models';\nimport { Helpers } from '../shared/helpers';\n\n@Injectable()\nexport class CustomerService {\n\n    constructor(private http: Http) {\n    }\n\n    getAll(): Observable<Customer[]> {\n        return this.http.get('/api/customer', { headers: Helpers.getHeaders() })\n            .map(result => <Customer[]>result.json());\n    }\n\n    getById(id: number): Observable<Customer> {\n        return this.http.get('/api/customer/' + id, { headers: Helpers.getHeaders() })\n            .map(result => <Customer>result.json());\n    }\n\n    create(model: Customer): Observable<Customer> {\n        return this.http.post('/api/customer', model, { headers: Helpers.getHeaders() })\n            .map(result => <Customer>result.json());\n    }\n\n    update(id: number, model: Customer): Observable<Customer> {\n        return this.http.put('/api/customer/' + id, model, { headers: Helpers.getHeaders() })\n            .map(result => <Customer>result.json());\n    }\n\n    delete(id: number): Observable<any> {\n        return this.http.delete('/api/customer/' + id, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/customer.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport { Device } from '../shared/models';\nimport { Helpers } from '../shared/helpers';\n\n@Injectable()\nexport class DeviceService {\n\n    constructor(private http: Http) {\n    }\n\n    getAll(): Observable<Device[]> {\n        return this.http.get('/api/device', { headers: Helpers.getHeaders() })\n            .map(result => <Device[]>result.json());\n    }\n\n    getById(id: number): Observable<Device> {\n        return this.http.get('/api/device/' + id, { headers: Helpers.getHeaders() })\n            .map(result => <Device>result.json());\n    }\n\n    create(model: Device): Observable<Device> {\n        return this.http.post('/api/device', model, { headers: Helpers.getHeaders() })\n            .map(result => <Device>result.json());\n    }\n\n    update(id: number, model: Device): Observable<Device> {\n        return this.http.put('/api/device/' + id, model, { headers: Helpers.getHeaders() })\n            .map(result => <Device>result.json());\n    }\n\n    delete(id: number): Observable<any> {\n        return this.http.delete('/api/device/' + id, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/device.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport { Discount, DiscountProduct } from '../shared/models';\nimport { Helpers } from '../shared/helpers';\n\n@Injectable()\nexport class DiscountService {\n\n    constructor(private http: Http) {\n    }\n\n    getAll(): Observable<Discount[]> {\n        return this.http.get('/api/discount', { headers: Helpers.getHeaders() })\n            .map(result => <Discount[]>result.json());\n    }\n\n    getById(id: number): Observable<Discount> {\n        return this.http.get('/api/discount/' + id, { headers: Helpers.getHeaders() })\n            .map(result => <Discount>result.json());\n    }\n\n    getItemsById(id: number): Observable<DiscountProduct[]> {\n        return this.http.get('/api/discount/' + id + '/product', { headers: Helpers.getHeaders() })\n            .map(result => <DiscountProduct[]>result.json());\n    }\n\n    getByProductId(productId: number): Observable<Discount> {\n        return this.http.get('/api/product/' + productId + '/discount', { headers: Helpers.getHeaders() })\n            .map(result => <Discount>result.json());\n    }\n\n    create(model: Discount): Observable<Discount> {\n        return this.http.post('/api/discount', model, { headers: Helpers.getHeaders() })\n            .map(result => <Discount>result.json());\n    }\n\n    update(id: number, model: Discount): Observable<Discount> {\n        return this.http.put('/api/discount/' + id, model, { headers: Helpers.getHeaders() })\n            .map(result => <Discount>result.json());\n    }\n\n    delete(id: number): Observable<any> {\n        return this.http.delete('/api/discount/' + id, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n\n    addProduct(model: DiscountProduct): Observable<DiscountProduct> {\n        return this.http.post('/api/discountproduct', model, { headers: Helpers.getHeaders() })\n            .map(result => <DiscountProduct>result.json());\n    }\n\n    removeProduct(id: number): Observable<any> {\n        return this.http.delete('/api/discountproduct/' + id, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/discount.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport { Product } from '../shared/models';\nimport { Helpers } from '../shared/helpers';\n\n@Injectable()\nexport class ImportService {\n\n    apiRoot: String = 'http://www.tessilnova.com';\n\n    constructor(private http: Http) {\n    }\n\n    getProducts(): Observable<Translate[]> {\n        let apiURL = `${this.apiRoot}/api/codart/products`;\n        return this.http.get(apiURL, { headers: Helpers.getHeaders() })\n            .map(result => <Translate[]>result.json());\n    }\n\n    getProductById(id: String): Observable<CodartInfo> {\n        let apiURL = `${this.apiRoot}/api/codart/${id}`;\n        return this.http.get(apiURL, { headers: Helpers.getHeaders() })\n            .map(result => <CodartInfo>result.json());\n    }\n\n    create(model: Product): Observable<any> {\n        return this.http.post('/api/product/import', model, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n}\n\nexport interface CodartInfo {\n    id: string;\n    name: string;\n    desc: string;\n    price: number;\n    discount: number;\n    producer: Producer;\n    category: Category;\n    subcategory: Category;\n    featured: boolean;\n    published: Date;\n    codarts: Codart[];\n    medias: Image[];\n    translates: Translate[];\n}\n\nexport interface Category {\n    id: string;\n    desc: string;\n    translates: Translate[];\n}\n\nexport interface Producer {\n    id: string;\n    desc: string;\n}\n\nexport interface Codart {\n    id: number;\n    barcode: string;\n    colorId: string;\n    color: string;\n    size: string;\n}\n\nexport interface Image {\n    id: number;\n    codartCode: string;\n    filename: string;\n    number: number;\n    url: string;\n}\n\nexport interface Translate {\n    id: number;\n    key: string;\n    code: string;\n    value: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/import.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport { Invoice, Movement, MovementArticle, ItemValue } from '../shared/models';\nimport { Helpers } from '../shared/helpers';\n\n@Injectable()\nexport class InvoiceService {\n\n    constructor(private http: Http) {\n    }\n\n    getPayments(): Observable<ItemValue[]> {\n        return this.http.get('/api/invoicepayment', { headers: Helpers.getHeaders() })\n            .map(result => <ItemValue[]>result.json());\n    }\n\n    getAll(): Observable<Invoice[]> {\n        return this.http.get('/api/invoice', { headers: Helpers.getHeaders() })\n            .map(result => <Invoice[]>result.json());\n    }\n\n    getById(id: number): Observable<Invoice> {\n        return this.http.get('/api/invoice/' + id, { headers: Helpers.getHeaders() })\n            .map(result => <Invoice>result.json());\n    }\n\n    create(model: Invoice): Observable<Invoice> {\n        return this.http.post('/api/invoice', model, { headers: Helpers.getHeaders() })\n            .map(result => <Invoice>result.json());\n    }\n\n    update(id: number, model: Invoice): Observable<Invoice> {\n        return this.http.put('/api/invoice/' + id, model, { headers: Helpers.getHeaders() })\n            .map(result => <Invoice>result.json());\n    }\n\n    delete(id: number): Observable<any> {\n        return this.http.delete('/api/invoice/' + id, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n\n    getMovementsById(id: number): Observable<Movement[]> {\n        return this.http.get('/api/invoicemovement/' + id, { headers: Helpers.getHeaders() })\n            .map(result => <Movement[]>result.json());\n    }\n\n    getMovementArticlesById(id: number): Observable<MovementArticle[]> {\n        return this.http.get('/api/invoicemovementarticle/' + id, { headers: Helpers.getHeaders() })\n            .map(result => <MovementArticle[]>result.json());\n    }\n\n    addMovement(id: number, movementId: number): Observable<any> {\n        let json = <ItemValue>{ value: movementId.toString() };\n        return this.http.post('/api/invoicemovement/' + id, json,\n            { headers: Helpers.getHeaders() }).map(result => result.json());\n    }\n\n    removeMovement(id: number): Observable<any> {\n        return this.http.delete('/api/invoicemovement/' + id, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/invoice.service.ts","import { Injectable } from '@angular/core';\nimport { Http, ResponseContentType } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport { Movement, MovementArticle, ItemValue, Period } from '../shared/models';\nimport { Helpers } from '../shared/helpers';\n\n@Injectable()\nexport class MovementService {\n\n    constructor(private http: Http) {\n    }\n\n    getAll(): Observable<Movement[]> {\n        return this.http.get('/api/movement', { headers: Helpers.getHeaders() })\n            .map(result => <Movement[]>result.json());\n    }\n\n    getSales(period: Period): Observable<MovementArticle[]> {\n        return this.http.post('/api/movementsales', period, { headers: Helpers.getHeaders() })\n            .map(result => <MovementArticle[]>result.json());\n    }\n\n    getReceipted(period: Period): Observable<Movement[]> {\n        return this.http.post('/api/movementreceipted', period, { headers: Helpers.getHeaders() })\n            .map(result => <Movement[]>result.json());\n    }\n\n    getById(id: number): Observable<Movement> {\n        return this.http.get('/api/movement/' + id, { headers: Helpers.getHeaders() })\n            .map(result => <Movement>result.json());\n    }\n\n    getByCustomerId(id: number): Observable<Movement[]> {\n        return this.http.get('/api/movementcustomer/' + id, { headers: Helpers.getHeaders() })\n            .map(result => <Movement[]>result.json());\n    }\n\n    create(model: Movement): Observable<Movement> {\n        return this.http.post('/api/movement', model, { headers: Helpers.getHeaders() })\n            .map(result => <Movement>result.json());\n    }\n\n    clone(id: number): Observable<Movement> {\n        return this.http.post('/api/movement/' + id, null, { headers: Helpers.getHeaders() })\n            .map(result => <Movement>result.json());\n    }\n\n    update(id: number, model: Movement): Observable<Movement> {\n        return this.http.put('/api/movement/' + id, model, { headers: Helpers.getHeaders() })\n            .map(result => <Movement>result.json());\n    }\n\n    delete(id: number): Observable<any> {\n        return this.http.delete('/api/movement/' + id, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n\n    getItemsById(movementId: number): Observable<MovementArticle[]> {\n        return this.http.get('/api/movementarticle/' + movementId, { headers: Helpers.getHeaders() })\n            .map(result => <MovementArticle[]>result.json());\n    }\n\n    createItem(model: MovementArticle, price: string): Observable<MovementArticle> {\n        return this.http.post('/api/movementarticle/' + price, model, { headers: Helpers.getHeaders() })\n            .map(result => <MovementArticle>result.json());\n    }\n\n    updateItem(id: number, model: MovementArticle): Observable<MovementArticle> {\n        return this.http.put('/api/movementarticle/' + id, model, { headers: Helpers.getHeaders() })\n            .map(result => <MovementArticle>result.json());\n    }\n\n    deleteItem(id: number): Observable<any> {\n        return this.http.delete('/api/movementarticle/' + id, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n\n    getStatus(): Observable<ItemValue[]> {\n        return this.http.get('/api/movementstatus', { headers: Helpers.getHeaders() })\n            .map(result => <ItemValue[]>result.json());\n    }\n\n    getPayments(): Observable<ItemValue[]> {\n        return this.http.get('/api/movementpayment', { headers: Helpers.getHeaders() })\n            .map(result => <ItemValue[]>result.json());\n    }\n\n    getBarcode(movementId: number): Observable<Blob> {\n        return this.http.get('/api/pdf/barcode/' + movementId, { headers: Helpers.getHeaders(), responseType: ResponseContentType.Blob })\n            .map(result => <Blob>result.blob());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/movement.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport {\n    Product, ProductCategory, ProductAttribute,\n    ProductAttributeValue, Article, ArticleForm\n} from '../shared/models';\nimport { Helpers } from '../shared/helpers';\n\n@Injectable()\nexport class ProductService {\n\n    constructor(private http: Http) {\n    }\n\n    getProducts(): Observable<Product[]> {\n        return this.http.get('api/product', { headers: Helpers.getHeaders() })\n            .map(result => <Product[]>result.json());\n    }\n\n    getProduct(id: number): Observable<Product> {\n        return this.http.get('/api/product/' + id, { headers: Helpers.getHeaders() })\n            .map(result => <Product>result.json());\n    }\n\n    getArticles(id: number, storeIds: string): Observable<ArticleForm> {\n        return this.http.get('/api/product/' + id + '/store/' + storeIds, { headers: Helpers.getHeaders() })\n            .map(result => <ArticleForm>result.json());\n    }\n\n    updateArticle(id: number, model: Article): Observable<Article> {\n        return this.http.put('/api/article/' + id, model, { headers: Helpers.getHeaders() })\n            .map(result => <Article>result.json());\n    }\n\n    create(model: Product): Observable<Product> {\n        return this.http.post('/api/product', model, { headers: Helpers.getHeaders() })\n            .map(result => <Product>result.json());\n    }\n\n    update(id: number, model: Product): Observable<Product> {\n        return this.http.put('/api/product/' + id, model, { headers: Helpers.getHeaders() })\n            .map(result => <Product>result.json());\n    }\n\n    delete(id: number): Observable<any> {\n        return this.http.delete('/api/product/' + id, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n\n    addCategories(models: ProductCategory[]): Observable<ProductCategory[]> {\n        return this.http.post('/api/productcategory', models, { headers: Helpers.getHeaders() })\n            .map(result => <ProductCategory[]>result.json());\n    }\n\n    removeCategories(models: ProductCategory[]): Observable<any> {\n        return this.http.put('/api/productcategory', models, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n\n    addAttributes(models: ProductAttribute[]): Observable<ProductAttribute[]> {\n        return this.http.post('/api/productattribute', models, { headers: Helpers.getHeaders() })\n            .map(result => <ProductAttribute[]>result.json());\n    }\n\n    removeAttributes(models: ProductAttribute[]): Observable<any> {\n        return this.http.put('/api/productattribute', models, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n\n    addAttributeValues(models: ProductAttributeValue[]): Observable<ProductAttributeValue[]> {\n        return this.http.post('/api/productattributevalue', models, { headers: Helpers.getHeaders() })\n            .map(result => <ProductAttributeValue[]>result.json());\n    }\n\n    removeAttributeValues(models: ProductAttributeValue[]): Observable<any> {\n        return this.http.put('/api/productattributevalue', models, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n\n    build(id: number): Observable<any> {\n        return this.http.get('/api/product/' + id + '/build', { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/product.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport { SelectItem } from 'primeng/primeng';\nimport { Product, Media, Translation, Publication } from '../shared/models'\nimport { Helpers } from '../shared/helpers'\n\n@Injectable()\nexport class PublicationService {\n\n    public publication: Publication;\n    public product: Product;\n\n    constructor(private http: Http) {\n    }\n\n    getProduct(id: number): Observable<Product> {\n        return this.http.get('api/product/' + id, { headers: Helpers.getHeaders() })\n            .map(result => <Product>result.json());\n    }\n\n    getPublication(productId: number): Observable<Publication> {\n        return this.http.get('/api/product/' + productId + '/publication', { headers: Helpers.getHeaders() })\n            .map(result => <Publication>result.json());\n    }\n\n    saveProduct(): Observable<Product> {\n        return this.http.put('api/product/' + this.product.productId + '/publication', this.product, { headers: Helpers.getHeaders() })\n            .map(result => <Product>result.json());\n    }\n\n    create(model: Publication): Observable<Publication> {\n        return this.http.post('/api/publication', model, { headers: Helpers.getHeaders() })\n            .map(result => <Publication>result.json());\n    }\n\n    update(id: number, model: Publication): Observable<Publication> {\n        return this.http.put('/api/publication/' + id, model, { headers: Helpers.getHeaders() })\n            .map(result => <Publication>result.json());\n    }\n\n    delete(id: number): Observable<any> {\n        return this.http.delete('/api/publication/' + id, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n\n    get translateDescriptions(): Translation[] { return this.product.translations; }\n    get translateAttributes(): Translation[] {\n        let items: Translation[] = [];\n        this.product.attributes.forEach(p => {\n            p.attribute.translations.map(t => items.push(t));\n            p.attributeValues.forEach(v => v.attributeValue.translations.map(t => items.push(t)))\n        });\n        return items;\n    }\n    get published() { return this.publication != null; }\n\n    get step1() { return this.product.translations.length === 2 ? 'Completed' : 'In progress'; }\n    get step2() { return this.product.categories.map(p => p.category.translations.length === 2) ? 'Completed' : 'In progress'; }\n    get step4() { return this.product.medias.length > 0 ? 'Completed' : 'In progress'; }\n\n    getStatus(): string {\n        if (this.step1 !== 'Completed') {\n            return 'step 1';\n        } else if (this.step2 !== 'Completed') {\n            return 'step 2';\n        } else if (this.step4 !== 'Completed') {\n            return 'step 4';\n        }\n        return 'Completed';\n    }\n\n    getCategories(): SelectItem[] {\n        return this.product.categories.map(p => Helpers.newSelectItem(p.category.categoryName));\n    }\n\n    getAttributes(): SelectItem[] {\n        let items: SelectItem[] = [];\n        this.product.attributes.forEach(p => {\n            items.push(Helpers.newSelectItem(p.attribute.attributeName));\n            p.attributeValues.forEach(v => items.push(Helpers.newSelectItem(v.attributeValue.attributeValueName)))\n        });\n        return items;\n    }\n\n    getTranslate(array, country): Translation {\n        return array.find(p => p.country === country);\n    }\n\n    addTranslate(array, item) {\n        array.push(item);\n    }\n\n    updateTranslate(array, item) {\n        let translate = this.getTranslate(array, item.country);\n        translate.value = item.value;\n    }\n\n    deleteTranslate(array, item) {\n        let index = array.indexOf(item);\n        array.splice(index, 1);\n    }\n\n    addMedia(item) {\n        this.product.medias.push(item);\n    }\n\n    updateMedia(item) {\n        let media = this.product.medias.find(p => p.name === item.name);\n        media.number = item.number;\n    }\n\n    deleteMedia(item) {\n        let index = this.product.medias.indexOf(item);\n        this.product.medias.splice(index, 1);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/publication.service.ts","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport { Login, Token } from '../shared/models';\nimport { Helpers } from '../shared/helpers';\n\n@Injectable()\nexport class SessionService {\n\n    title: string;\n\n    constructor(private router: Router, private http: Http) {\n        this.title = '';\n    }\n\n    login(user: Login): Observable<Token> {\n        let body = { username: user.username, password: user.password };\n        return this.http.post('/api/login', body, { headers: Helpers.getHeaders() })\n            .map(response => <Token>response.json());\n    }\n\n    logout() {\n        let body = { token: localStorage.getItem('token') };\n        this.http.post('/api/logout', body, { headers: Helpers.getHeaders() })\n            .map((response) => response.json())\n            .subscribe(result => result);\n        this.removeCredentials();\n    }\n\n    grantCredentials(data: any) {\n        localStorage.setItem('uniqueID', data.uniqueID);\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('role', data.role);\n        this.router.navigate(['home']);\n    }\n\n    removeCredentials() {\n        localStorage.removeItem('uniqueID');\n        localStorage.removeItem('token');\n        localStorage.removeItem('role');\n        this.router.navigate(['home']);\n    }\n\n    get isAuthenticated(): boolean {\n        return localStorage.getItem('token') != null;\n    }\n\n    get isAdmin(): boolean {\n        return localStorage.getItem('role') === 'Admin';\n    }\n\n    checkCredentials(isAdmin: boolean) {\n        if (!this.isAuthenticated || isAdmin && !this.isAdmin) {\n            this.removeCredentials();\n        }\n    }\n\n    getCredentials(): Observable<any>  {\n        return this.http.get('/api/authenticated', { headers: Helpers.getHeaders() })\n            .map(response => response.json());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/session.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport { Helpers } from '../shared/helpers';\n\n@Injectable()\nexport class StatisticService {\n\n    constructor(private http: Http) {\n    }\n\n    getUseByDeviceAsync(): Observable<any> {\n        return this.http.get('/api/statistic/device', { headers: Helpers.getHeaders() })\n            .map(result => <any>result.json());\n    }\n\n    getCategoryByYearAsync(year: number): Observable<any> {\n        return this.http.get('/api/statistic/category/' + year, { headers: Helpers.getHeaders() })\n            .map(result => <any>result.json());\n    }\n\n    getCategoryForMonthByYearAsync(year: number): Observable<any> {\n        return this.http.get('/api/statistic/categoryformonth/' + year, { headers: Helpers.getHeaders() })\n            .map(result => <any>result.json());\n    }\n\n    getProductByYearAsync(year: number): Observable<any> {\n        return this.http.get('/api/statistic/product/' + year, { headers: Helpers.getHeaders() })\n            .map(result => <any>result.json());\n    }\n\n    getProductForMonthByYearAsync(year: number): Observable<any> {\n        return this.http.get('/api/statistic/productformonth/' + year, { headers: Helpers.getHeaders() })\n            .map(result => <any>result.json());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/statistic.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport { Store } from '../shared/models';\nimport { Helpers } from '../shared/helpers';\n\n@Injectable()\nexport class StoreService {\n\n    constructor(private http: Http) {\n    }\n\n    getAll(): Observable<Store[]> {\n        return this.http.get('/api/store', { headers: Helpers.getHeaders() })\n            .map(result => <Store[]>result.json());\n    }\n\n    getById(id: number): Observable<Store> {\n        return this.http.get('/api/store/' + id, { headers: Helpers.getHeaders() })\n            .map(result => <Store>result.json());\n    }\n\n    create(model: Store): Observable<Store> {\n        return this.http.post('/api/store', model, { headers: Helpers.getHeaders() })\n            .map(result => <Store>result.json());\n    }\n\n    update(id: number, model: Store): Observable<Store> {\n        return this.http.put('/api/store/' + id, model, { headers: Helpers.getHeaders() })\n            .map(result => <Store>result.json());\n    }\n\n    delete(id: number): Observable<any> {\n        return this.http.delete('/api/store/' + id, { headers: Helpers.getHeaders() })\n            .map(result => result.json());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/services/store.service.ts","module.exports = \"<p-dataTable *ngIf=\\\"isOpen\\\" [responsive]=\\\"true\\\" [value]=\\\"products | priceFilter:sliderValue | categoryFilter:categoryValue\\\" \\n    selectionMode=\\\"single\\\" (onRowSelect)=\\\"onRowSelect($event)\\\"\\n    rowExpandMode=\\\"single\\\" expandableRows=\\\"true\\\" (onRowExpand)=\\\"onRowExpand($event)\\\"\\n    [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinks]=\\\"5\\\" #dt>\\n    <p-header>\\n        <div class=\\\"ui-helper-clearfix\\\" style=\\\"text-align: left\\\">\\n            <span style=\\\"font-size:20px;display:inline-block;margin-top:3px\\\"><b>Article picker</b></span>\\n            <button pButton type=\\\"button\\\" label=\\\"Close\\\" (click)=\\\"hidePickerClick()\\\" style=\\\"float: right\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-close\\\"></button>\\n        </div>\\n    </p-header>\\n    <p-column field=\\\"productCode\\\" header=\\\"Code\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n    <p-column field=\\\"productName\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n    <p-column field=\\\"brand.brandName\\\" header=\\\"Brand\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"equals\\\" [style]=\\\"{'overflow':'visible'}\\\" >\\n        <ng-template pTemplate=\\\"filter\\\" let-col>\\n            <p-dropdown [options]=\\\"brands\\\" [filter]=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\" (onChange)=\\\"dt.filter($event.value,col.field,col.filterMatchMode)\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n        </ng-template>\\n    </p-column>     \\n    <p-column header=\\\"Categories\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\" >\\n        <ng-template pTemplate=\\\"filter\\\" let-col>\\n            <p-dropdown [options]=\\\"categories\\\" [filter]=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\" [(ngModel)]=\\\"categoryValue\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n        </ng-template>\\n        <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <li *ngFor=\\\"let item of data.categories\\\"> {{ item.category.categoryName }} </li>\\n        </ng-template>\\n    </p-column>\\n    <p-column header=\\\"Price ({{sliderValue||'No Filter'}})\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\" >\\n        <ng-template pTemplate=\\\"filter\\\" let-col>\\n            <i class=\\\"fa fa-close\\\" (click)=\\\"sliderValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n            <p-slider [style]=\\\"{'margin-top':'14px','margin-bottom':'5px'}\\\" [(ngModel)]=\\\"sliderValue\\\" [min]=\\\"5\\\" [max]=\\\"1000\\\"></p-slider>\\n        </ng-template>\\n        <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <div *ngIf=\\\"data.discount;then discount_content else price_content\\\"></div>\\n            <ng-template #discount_content>\\n                <span class=\\\"percentage\\\">-{{data.discount.discountPercentage}}%</span>\\n                <del>{{data.productSellingPrice | currency: 'EUR' : true}}</del><br><strong>{{data.discount.discountPrice | currency: 'EUR' : true}}</strong>\\n            </ng-template>\\n            <ng-template #price_content>\\n                {{data.productSellingPrice | currency: 'EUR' : true}}\\n            </ng-template>\\n        </ng-template>\\n    </p-column>\\n    <ng-template pTemplate=\\\"rowexpansion\\\">\\n        <div style=\\\"text-align: center\\\">\\n            <img *ngIf=\\\"!articleForm\\\" src=\\\"/assets/loading.gif\\\" width=\\\"100px\\\">\\n            <table *ngIf=\\\"articleForm\\\" class=\\\"table\\\" cellpadding=\\\"2\\\" cellspacing=\\\"2\\\">    \\n                <tr> \\n                    <td *ngFor=\\\"let h of articleForm.header\\\" align=\\\"center\\\" style=\\\"background-color: whitesmoke\\\"><strong>{{h}}</strong></td> \\n                </tr> \\n                <tbody> \\n                    <tr *ngFor=\\\"let item of articleForm.body\\\"> \\n                        <td *ngFor=\\\"let col of item\\\" align=\\\"center\\\"> \\n                            <span *ngIf=\\\"col.id===0\\\">{{col.value}}</span>\\n                            <input *ngIf=\\\"col.id>0\\\" pInputText type=\\\"number\\\" min=\\\"0\\\" [(ngModel)]=\\\"col.data\\\" style=\\\"width: 100%\\\" tooltipPosition=\\\"left\\\" pTooltip=\\\"{{col.value}} : {{col.stock}} - {{col.booked}}\\\"/>\\n                        </td> \\n                    </tr> \\n                </tbody>\\n            </table>\\n            <button pButton label=\\\"Pickup\\\" type=\\\"button\\\" (click)=\\\"pickerClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-reply-all\\\"></button>\\n        </div>\\n    </ng-template>\\n</p-dataTable>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/article-picker.component.html\n// module id = ../../../../../src/app/shared/article-picker.component.html\n// module chunks = main","import { Component, Input, EventEmitter, ViewChild } from '@angular/core';\nimport { DataTable, SelectItem, MenuItem } from 'primeng/primeng';\nimport { Product, ProductCategory, ProductAttributeValue, ArticleForm, ArticleItem } from './models';\nimport { Helpers } from './helpers';\nimport { ProductService } from './../services/product.service';\n\n@Component({\n    selector: 'article-picker',\n    templateUrl: 'article-picker.component.html',\n    outputs: ['onPicked']\n})\n\nexport class ArticlePickerComponent {\n    @ViewChild('dt') datatable: DataTable;\n    totalRecords = 0;\n    products: Product[];\n    selected: Product;\n    categories: SelectItem[];\n    allbrands: SelectItem[];\n    brands: SelectItem[];\n    categoryValue: string;\n    sliderValue: number;\n    articleForm: ArticleForm;\n    onPicked = new EventEmitter();\n    public isOpen: boolean;\n\n    constructor(private productService: ProductService) {\n        this.isOpen = false;\n    }\n\n    public loadData() {\n        this.isOpen = true;\n        if (!this.products) {\n            this.productService\n                .getProducts()\n                .subscribe(result => {\n                    this.products = result;\n                    this.totalRecords = this.products.length;\n                    this.buildFilter(result);\n                }, onerror => alert(onerror._body)\n            );\n        }\n    }\n\n    hidePickerClick() {\n        this.isOpen = false;\n    }\n\n    pickerClick() {\n        let data: string[] = [];\n        this.articleForm.body\n            .forEach(p => p.forEach(e => {\n                if (e.data > 0) {\n                    data.push(`${e.value}#${e.data}`);\n                }\n            }));\n        this.onPicked.emit(data);\n        this.isOpen = false;\n    }\n\n    buildFilter(items: Product[]) {\n        this.brands = [];\n        this.brands.push({label: 'All', value: null});\n        let filterBrands = Helpers.distinct(items.map((item: Product) => Helpers.newSelectItem(item.brand.brandName)));\n        this.brands = this.brands.concat(filterBrands);\n\n        this.categories = [];\n        this.categories.push({label: 'All', value: null});\n        let array = items.map((p: Product) => p.categories.map((c: ProductCategory) => c.category.categoryName)).join(',');\n        let filterCategories = Helpers.distinct(array.split(',').map((item: string) => Helpers.newSelectItem(item)));\n        this.categories = this.categories.concat(filterCategories);\n    }\n\n    onRowSelect(event: any) {\n        this.datatable.toggleRow(event.data);\n    }\n\n    onRowExpand(expandedItem: any) {\n        this.getArticles(expandedItem.data.productId);\n    }\n\n    getArticles(productId: number) {\n        this.articleForm = null;\n        // from server\n        this.productService.getArticles(productId, '0')\n            .subscribe(result => {\n                this.articleForm = result;\n            }, onerror => alert(onerror._body));\n        /*\n        // or from client\n        this.header = [];\n        this.articles = [];\n        let productAttributeValues: ProductAttributeValue[] = [];\n\n        let lenght = this.selected.attributes.length - 1;\n        if (lenght > 0) {\n            this.selected.attributes.forEach(elem => {\n                this.header.push(elem.attribute.attributeName);\n                productAttributeValues = productAttributeValues.concat(elem.attributeValues);\n            });\n            this.header.pop();\n\n            this.selected.attributes[lenght].attributeValues.forEach(elem => {\n                this.header.push(elem.attributeValue.attributeValueName);\n            });\n        }\n\n        let source = Observable.from(this.selected.articles)\n            .groupBy(\n                function (x) {\n                    return x.attributeValues\n                        .map(p => p.attributeValueId)\n                        .slice(0, x.attributeValues.length - 1)\n                        .join('#');\n                },\n                function (x) { return x; }\n            );\n\n        source.subscribe(obs => {\n            let row: any[] = [];\n            let isFirst = true;\n            obs.forEach(e => {\n                let qta = `${e.quantity}#${e.barcode}`;\n                if (isFirst) {\n                    e.attributeValues.forEach(ex => {\n                        let productAttributeValue = productAttributeValues.find(\n                            p => p.attributeValue.attributeValueId === ex.attributeValueId\n                        );\n                        row.push(productAttributeValue.attributeValue.attributeValueName);\n                    });\n                    isFirst = false;\n                    row[row.length - 1] = qta;\n                } else {\n                    row.push(qta);\n                }\n            }).then(p => {\n                this.articles.push(row);\n            });\n        });\n        */\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/article-picker.component.ts","module.exports = \"<footer class=\\\"footer\\\">\\n    <p>&copy; 2017 Gerardo Grisolini. All rights reserved.</p>\\n</footer>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/footer.component.html\n// module id = ../../../../../src/app/shared/footer.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'customfooter',\n    templateUrl: 'footer.component.html'\n})\n\nexport class FooterComponent {\n    public currentYear: number = new Date().getFullYear();\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/footer.component.ts","import { Headers } from '@angular/http';\nimport { SelectItem, TreeNode } from 'primeng/primeng';\n\nexport class Helpers {\n\n    static distinct(a: any[]): any[] {\n        let seen: any = {};\n        let out: any[] = [];\n        let len = a.length;\n        let j = 0;\n        for (let i = 0; i < len; i++) {\n            let item = a[i];\n            if (seen[item.label] !== 1) {\n                seen[item.label] = 1;\n                out[j++] = item;\n            }\n        }\n        return out;\n    }\n\n    static getHeaders(): Headers {\n        let headers = new Headers();\n        headers.append('Authorization', `Bearer ${localStorage.getItem('token')}`);\n        headers.append('Content-Type', 'application/json');\n        return headers;\n    }\n\n    static newSelectItem(value: any, label?: string): SelectItem {\n        return <SelectItem>{ label: label ? label : value, value: value };\n    }\n\n    static newNode(label: string, data: string, type: string): TreeNode {\n        return <TreeNode>{\n                'label': label,\n                'data': data,\n                'type': type,\n                'children': []\n        };\n    }\n\n    static getUnitOfMeasure(): SelectItem[] {\n        return <SelectItem[]>[\n            Helpers.newSelectItem('QT', 'Quantity'),\n            Helpers.newSelectItem('MT', 'Meter'),\n            Helpers.newSelectItem('KG', 'Kilogram')\n        ];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/helpers.ts","// Classes\n\nexport class Company {\n  public companyId: number;\n  public companyName: string;\n  public companyDesc: string;\n  public companyWebsite: string;\n  public companyEmail: string;\n  public companyPhone: string;\n  public companyAddress: string;\n  public companyCity: string;\n  public companyZip: string;\n  public companyCountry: string;\n  public companyFiscalCode: string;\n  public companyVatNumber: string;\n  public smtpHost: string;\n  public smtpSsl: boolean;\n  public smtpUsername: string;\n  public smtpPassword: string;\n  public barcodeCounter: number;\n\n  constructor() {\n    this.companyId = 0;\n    this.companyName = '';\n    this.companyDesc = '';\n    this.companyWebsite = '';\n    this.companyEmail = '';\n    this.companyPhone = '';\n    this.companyAddress = '';\n    this.companyCity = '';\n    this.companyZip = '';\n    this.companyCountry = '';\n    this.companyFiscalCode = '';\n    this.companyVatNumber = '';\n    this.smtpHost = '';\n    this.smtpSsl = false;\n    this.smtpUsername = '';\n    this.smtpPassword = '';\n    this.barcodeCounter = 0;\n  }\n}\n\nexport class Login {\n  constructor(\n    public username: string,\n    public password: string) { }\n}\n\nexport class Account {\n  public uniqueID: string;\n  public firstname: string;\n  public lastname: string;\n  public email: string;\n  public username: string;\n  public password: string;\n  public isAdmin: boolean;\n\n  constructor() {\n    this.uniqueID = '';\n    this.firstname = '';\n    this.lastname = '';\n    this.email = '';\n    this.username = '';\n    this.password = '';\n    this.isAdmin = false;\n  }\n}\n\nexport class Store {\n  public storeId: number;\n  public storeName: string;\n  public storeAddress: string;\n  public storeCity: string;\n  public storeZip: string;\n  public storeCountry: string;\n  public updatedAt: number;\n\n  constructor() {\n    this.storeId = 0;\n    this.storeName = '';\n    this.storeAddress = '';\n    this.storeCity = '';\n    this.storeZip = '';\n    this.storeCountry = '';\n    this.updatedAt = 0;\n  }\n}\n\nexport class Brand {\n  public brandId: number;\n  public brandName: string;\n\n  constructor() {\n    this.brandId = 0;\n    this.brandName = '';\n  }\n}\n\nexport class Category {\n  public categoryId: number;\n  public categoryName: string;\n  public categoryIsPrimary: boolean;\n  public translations: Translation[];\n\n  constructor(categoryId: number, categoryName: string) {\n    this.categoryId = categoryId;\n    this.categoryName = categoryName;\n    this.categoryIsPrimary = false;\n    this.translations = [];\n  }\n}\n\nexport class Media {\n  constructor(\n    public name: string,\n    public url: string,\n    public number: number) { }\n}\n\nexport class Translation {\n  constructor(\n    public country: string,\n    public value: string) { }\n}\n\nexport class Product {\n  public productId: number;\n  public productCode: string;\n  public productName: string;\n  public productUm: string;\n  public productSellingPrice: number;\n  public productPurchasePrice: number;\n  public medias: Media[];\n  public translations: Translation[];\n  public discount?: Discount;\n  public brand: Brand;\n  public categories: ProductCategory[];\n  public attributes: ProductAttribute[];\n  public articles: Article[];\n  public productIsActive: boolean;\n  public productCreated: Date;\n  public updatedAt: number;\n\n  constructor() {\n    this.productId = 0;\n    this.productCode = '';\n    this.productName = '';\n    this.productUm = '';\n    this.productSellingPrice = 0;\n    this.productPurchasePrice = 0;\n    this.medias = [];\n    this.translations = [];\n    this.categories = [];\n    this.attributes = [];\n    this.articles = [];\n    this.productIsActive = false;\n    this.productCreated = new Date();\n    this.updatedAt = 0;\n  }\n}\n\nexport class Article {\n  public articleId: number;\n  public articleBarcode: string;\n  public quantity: number;\n  public booked: number;\n  public attributeValues: ArticleAttributeValue[];\n\n  constructor() {\n    this.articleId = 0;\n    this.articleBarcode = '';\n    this.quantity = 0;\n    this.booked = 0;\n    this.attributeValues = [];\n  }\n}\n\nexport class Attribute {\n  constructor(\n    public attributeId: number,\n    public attributeName: string,\n    public translations: Translation[]\n  ) { }\n}\n\nexport class AttributeValue {\n  constructor(\n    public attributeId: number,\n    public attributeValueId: number,\n    public attributeValueCode: string,\n    public attributeValueName: string,\n    public translations: Translation[]\n  ) { }\n}\n\nexport class Publication {\n  public publicationId: number;\n  public productId: number;\n  public publicationFeatured: boolean;\n  public publicationStartAt: Date;\n  public publicationFinishAt: Date;\n  public publicationUpdated: Date;\n\n  constructor(productId: number) {\n    this.publicationId = 0;\n    this.productId = productId;\n    this.publicationFeatured = false;\n    // this.publicationStartAt = new Date();\n    // this.publicationFinishAt = new Date();\n    // this.publicationUpdated = new Date();\n  }}\n\nexport class Causal {\n  public causalId: number;\n  public causalName: string;\n  public causalQuantity: number;\n  public causalBooked: number;\n  public causalIsPos: boolean;\n  public updatedAt: number;\n\n  constructor() {\n    this.causalId = 0;\n    this.causalName = '';\n    this.causalQuantity = 0;\n    this.causalBooked = 0;\n    this.causalIsPos = false;\n    this.updatedAt = 0;\n  }\n}\n\nexport class Customer {\n  public customerId: number;\n  public customerName: string;\n  public customerEmail: string;\n  public customerPhone: string;\n  public customerAddress: string;\n  public customerCity: string;\n  public customerZip: string;\n  public customerCountry: string;\n  public customerFiscalCode: string;\n  public customerVatNumber: string;\n  public updatedAt: number;\n\n  constructor() {\n    this.customerId = 0;\n    this.customerName = '';\n    this.customerEmail = '';\n    this.customerPhone = '';\n    this.customerAddress = '';\n    this.customerCity = '';\n    this.customerZip = '';\n    this.customerCountry = '';\n    this.customerFiscalCode = '';\n    this.customerVatNumber = '';\n    this.updatedAt = 0;\n  }\n}\n\nexport class Movement {\n  public movementId: number;\n  public invoiceId: number;\n  public movementNumber: number;\n  public movementDate: Date;\n  public movementDesc: string;\n  public movementStore: Store;\n  public movementCausal: Causal;\n  public movementCustomer: Customer;\n  public movementNote: string;\n  public movementStatus: string;\n  public movementUser: string;\n  public movementDevice: string;\n  public movementAmount: number;\n  public movementPayment: string;\n  public movementUpdated: Date;\n\n  constructor() {\n    this.movementId = 0;\n    this.movementNumber = 0;\n    this.movementDate = new Date();\n    this.movementDesc = '';\n    this.movementNote = '';\n    this.movementStatus = 'New';\n    this.movementUser = '';\n    this.movementDevice = '';\n    this.movementAmount = 0.0;\n    this.movementPayment = '';\n    this.movementUpdated = new Date();\n  }\n}\n\nexport class MovementArticle {\n  public movementArticleId: number;\n  public movementId: number;\n  public movementArticleBarcode: string;\n  public movementArticleProduct: Product;\n  public movementArticleQuantity: number;\n  public movementArticlePrice: number;\n  public movementArticleAmount: number;\n\n  constructor() {\n    this.movementArticleId = 0;\n    this.movementId = 0;\n    this.movementArticleBarcode = '';\n    this.movementArticleProduct = null;\n    this.movementArticleQuantity = 1.0;\n    this.movementArticlePrice = 0.0;\n    this.movementArticleAmount = 0.0;\n  }\n}\n\nexport class Invoice {\n  public invoiceId: number;\n  public invoiceNumber: number;\n  public invoiceDate: Date;\n  public invoiceCustomer: Customer;\n  public invoicePayment: string;\n  public invoiceNote: string;\n  public invoiceAmount: number;\n  public invoiceUpdate: Date;\n\n  constructor() {\n    this.invoiceId = 0;\n    this.invoiceNumber = 0;\n    this.invoiceDate = new Date();\n    this.invoicePayment = '';\n    this.invoiceNote = '';\n    this.invoiceAmount = 0.0;\n    this.invoiceUpdate = new Date();\n  }\n}\n\nexport class Discount {\n  public discountId: number;\n  public discountName: string;\n  public discountPercentage: number;\n  public discountPrice: number;\n  public discountStartAt: Date;\n  public discountFinishAt: Date;\n  public discountUpdated: Date;\n\n  constructor() {\n    this.discountId = 0;\n    this.discountName = '';\n    this.discountPercentage = 0;\n    this.discountPrice = 0;\n    this.discountUpdated = new Date();\n  }\n}\n\nexport class DiscountProduct {\n  public discountProductId: number;\n  public discountId: number;\n  public discountProduct: Product;\n\n  constructor() {\n    this.discountProductId = 0;\n    this.discountId = 0;\n    this.discountProduct = new Product();\n  }\n}\n\nexport class Device {\n  public deviceId: number;\n  public deviceName: string;\n  public deviceToken: string;\n  public store: Store;\n  public updatedAt: number;\n\n  constructor() {\n    this.deviceId = 0;\n    this.deviceName = '';\n    this.deviceToken = '';\n    this.store = new Store();\n    this.updatedAt = 0;\n  }\n}\n\nexport class Email {\n  public address: string;\n  public subject: string;\n  public content: string;\n\n  constructor() {\n    this.address = '';\n    this.subject = '';\n    this.content = '';\n  }\n}\n\nexport class Period {\n  public start: Date;\n  public finish: Date;\n\n  constructor() {\n    this.start = new Date();\n    this.finish = new Date(this.start.getFullYear(), 12, 31);\n  }\n}\n\n// Interfaces\n\nexport interface Token {\n    error: string;\n    login: string;\n    token: string;\n    role: string;\n}\n\nexport interface ProductCategory {\n  // productCategoryId: number;\n  productId: number;\n  category: Category;\n}\n\nexport interface ProductAttribute {\n  productAttributeId: number;\n  productId: number;\n  attribute: Attribute;\n  attributeValues: ProductAttributeValue[];\n}\n\nexport interface ProductAttributeValue {\n  // productAttributeValueId: number;\n  productAttributeId: number;\n  attributeValue: AttributeValue;\n}\n\nexport interface ArticleAttributeValue {\n  // articleAttributeValueId: number;\n  // articleId: number;\n  attributeValueId: number;\n  attributeValue: AttributeValue;\n}\n\nexport interface ItemValue {\n  value: string;\n}\n\nexport interface ArticleForm {\n  header: string[];\n  body: ArticleItem[][];\n}\n\nexport interface ArticleItem {\n  id: number;\n  value: string;\n  stock: number;\n  booked: number;\n  data: number;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/models.ts","module.exports = \"<p-dataTable *ngIf=\\\"isOpen\\\" [responsive]=\\\"true\\\" [value]=\\\"movements | dateFilter:dateStartValue:dateFinishValue\\\" \\n    selectionMode=\\\"multiple\\\" [(selection)]=\\\"selected\\\"\\n    [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinks]=\\\"5\\\" #dt>\\n    <p-header>\\n        <div class=\\\"ui-helper-clearfix\\\" style=\\\"text-align: left\\\">\\n            <span style=\\\"font-size:20px;display:inline-block;margin-top:3px\\\"><b>Movement picker</b></span>\\n            <button pButton type=\\\"button\\\" label=\\\"Close\\\" (click)=\\\"hidePickerClick()\\\" style=\\\"float: right\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-close\\\"></button>\\n        </div>\\n    </p-header>\\n    <p-footer>\\n        <button pButton type=\\\"button\\\" label=\\\"Pickup\\\" (click)=\\\"pickerClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-reply-all\\\"></button>\\n    </p-footer>\\n    <p-column [style]=\\\"{'width':'50px'}\\\" selectionMode=\\\"multiple\\\"></p-column>\\n    <p-column field=\\\"movementNumber\\\" header=\\\"Number\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n    <p-column header=\\\"Date\\\" [sortable]=\\\"true\\\" [filter]=\\\"false\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n        <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            {{data.movementDate | date:'yyyy-MM-dd'}}\\n        </ng-template>            \\n        <ng-template pTemplate=\\\"filter\\\" let-col>\\n            <i class=\\\"fa fa-close\\\" (click)=\\\"dateStartValue=null;dateFinishValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n            <p-calendar [(ngModel)]=\\\"dateStartValue\\\" [inputStyle]=\\\"{'width':'50%','float':'left'}\\\" dateFormat=\\\"yy-mm-dd\\\" placeholder=\\\"Start\\\" styleClass=\\\"ui-column-filter\\\"></p-calendar>\\n            <p-calendar [(ngModel)]=\\\"dateFinishValue\\\" [inputStyle]=\\\"{'width':'50%','float':'right'}\\\" dateFormat=\\\"yy-mm-dd\\\" placeholder=\\\"Finish\\\" styleClass=\\\"ui-column-filter\\\"></p-calendar>\\n        </ng-template>\\n    </p-column>\\n    <p-column field=\\\"movementCausal.causalName\\\" header=\\\"Causal\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\" filterMatchMode=\\\"equals\\\">\\n        <ng-template pTemplate=\\\"filter\\\" let-col>\\n            <p-dropdown [options]=\\\"causalsFiltered\\\" [style]=\\\"{'width':'100%'}\\\" (onChange)=\\\"dt.filter($event.value,col.field,col.filterMatchMode)\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n        </ng-template>\\n    </p-column>\\n    <p-column field=\\\"movementStore.storeName\\\" header=\\\"Store\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\" filterMatchMode=\\\"equals\\\">\\n        <ng-template pTemplate=\\\"filter\\\" let-col>\\n            <p-dropdown [options]=\\\"storesFiltered\\\" [style]=\\\"{'width':'100%'}\\\" (onChange)=\\\"dt.filter($event.value,col.field,col.filterMatchMode)\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n        </ng-template>\\n    </p-column>\\n</p-dataTable>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/movement-picker.component.html\n// module id = ../../../../../src/app/shared/movement-picker.component.html\n// module chunks = main","import { Component, Input, EventEmitter, ViewChild } from '@angular/core';\nimport { DataTable, SelectItem, MenuItem } from 'primeng/primeng';\nimport { Movement } from './models';\nimport { Helpers } from './helpers';\nimport { MovementService } from './../services/movement.service';\n\n@Component({\n    selector: 'movement-picker',\n    templateUrl: 'movement-picker.component.html',\n    outputs: ['onPicked']\n})\n\nexport class MovementPickerComponent {\n    @ViewChild('dt') datatable: DataTable;\n    totalRecords = 0;\n    movements: Movement[];\n    selected: Movement[];\n    stores: SelectItem[];\n    storesFiltered: SelectItem[];\n    causals: SelectItem[];\n    causalsFiltered: SelectItem[];\n    onPicked = new EventEmitter();\n    dateStartValue: Date;\n    dateFinishValue: Date;\n    public isOpen: boolean;\n\n    constructor(private movementService: MovementService) {\n        this.isOpen = false;\n    }\n\n    public loadData(customerId: number) {\n        this.isOpen = true;\n        if (!this.movements) {\n            this.movementService\n                .getByCustomerId(customerId)\n                .subscribe(result => {\n                    this.movements = result;\n                    this.totalRecords = this.movements.length;\n                    this.buildFilter(result);\n                }, onerror => alert(onerror._body)\n            );\n        }\n    }\n\n    hidePickerClick() {\n        this.isOpen = false;\n    }\n\n    pickerClick() {\n        let data: number[] = [];\n        this.selected.forEach(e => data.push(e.movementId));\n        this.onPicked.emit(data);\n        this.isOpen = false;\n    }\n\n    buildFilter(items: Movement[]) {\n        this.storesFiltered = [];\n        this.storesFiltered.push({label: 'All', value: null});\n        let filterStores = Helpers.distinct(items.map((item: Movement) => Helpers.newSelectItem(item.movementStore.storeName)));\n        this.storesFiltered = this.storesFiltered.concat(filterStores);\n\n        this.causalsFiltered = [];\n        this.causalsFiltered.push({label: 'All', value: null});\n        let filterCusals = Helpers.distinct(items.map((item: Movement) => Helpers.newSelectItem(item.movementCausal.causalName)));\n        this.causalsFiltered = this.causalsFiltered.concat(filterCusals);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/movement-picker.component.ts","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n    <img src=\\\"/assets/latest.jpg\\\" height=\\\"72\\\" width=\\\"100%\\\"/>\\r\\n    <h3 style=\\\"margin-top:-46px;margin-left:25px;\\\"><a class=\\\"brand\\\" [routerLink]=\\\"['/home']\\\">Webretail</a></h3>\\r\\n    <h3 style=\\\"margin-top:-36px;margin-left:46%;margin-bottom:20px;color:#604b20;width:300px\\\">{{sessionService.title}}</h3>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\r\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!isAuthenticated\\\" id=\\\"navbar\\\" class=\\\"collapse navbar-collapse\\\">\\r\\n            <ul class=\\\"nav navbar-nav navbar-left\\\">\\r\\n                <li><a [routerLink]=\\\"['/login']\\\"><i class=\\\"glyphicon glyphicon-log-in\\\"></i> Login</a></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"isAuthenticated\\\" id=\\\"navbar\\\" class=\\\"collapse navbar-collapse\\\">\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n                <li class=\\\"dropdown\\\">\\r\\n                    <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                        <i class=\\\"glyphicon glyphicon-th\\\"></i>Product <b class=\\\"caret\\\"></b>\\r\\n                    </a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li><a [routerLink]=\\\"['/product']\\\"><i class=\\\"glyphicon glyphicon-th\\\"></i>Products</a></li>\\r\\n                        <li><a [routerLink]=\\\"['/brand']\\\"><i class=\\\"glyphicon glyphicon-th-list\\\"></i>Brands</a></li>\\r\\n                        <li><a [routerLink]=\\\"['/category']\\\"><i class=\\\"glyphicon glyphicon-th-list\\\"></i>Categories</a></li>\\r\\n                        <li><a [routerLink]=\\\"['/attribute']\\\"><i class=\\\"glyphicon glyphicon-th-list\\\"></i>Attributes</a></li>\\r\\n                        <li><a [routerLink]=\\\"['/discount']\\\"><i class=\\\"glyphicon glyphicon-scissors\\\"></i>Discounts</a></li>\\r\\n                        <li><a [routerLink]=\\\"['/import']\\\"><i class=\\\"glyphicon glyphicon-download\\\"></i>Import</a></li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li class=\\\"dropdown\\\">\\r\\n                    <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                        <i class=\\\"glyphicon glyphicon-indent-left\\\"></i>Movement <b class=\\\"caret\\\"></b>\\r\\n                    </a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li><a [routerLink]=\\\"['/movement']\\\"><i class=\\\"glyphicon glyphicon-indent-left\\\"></i>Movements</a></li>\\r\\n                        <li><a [routerLink]=\\\"['/causal']\\\"><i class=\\\"glyphicon glyphicon-th-list\\\"></i>Causals</a></li>\\r\\n                        <li><a [routerLink]=\\\"['/customer']\\\"><i class=\\\"glyphicon glyphicon-user\\\"></i>Customers</a></li>\\r\\n                        <li><a [routerLink]=\\\"['/invoice']\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i>Invoices</a></li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li class=\\\"dropdown\\\">\\r\\n                    <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                        <i class=\\\"glyphicon glyphicon-blackboard\\\"></i>Report <b class=\\\"caret\\\"></b>\\r\\n                    </a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li><a [routerLink]=\\\"['/report/receipts']\\\"><i class=\\\"glyphicon glyphicon-modal-window\\\"></i>Receipts</a></li>\\r\\n                        <li><a [routerLink]=\\\"['/report/sales']\\\"><i class=\\\"glyphicon glyphicon-scale\\\"></i>Sales</a></li>\\r\\n                        <li><a [routerLink]=\\\"['/report/statistics']\\\"><i class=\\\"glyphicon glyphicon-dashboard\\\"></i>Statistics</a></li>\\r\\n                   </ul>\\r\\n                </li>\\r\\n            </ul>\\r\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n                <li class=\\\"dropdown\\\">\\r\\n                    <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                        <i class=\\\"glyphicon glyphicon-cog\\\"></i>Setting <b class=\\\"caret\\\"></b>\\r\\n                    </a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li *ngIf=\\\"!isAdmin\\\"><a [routerLink]=\\\"['/account/myinfo']\\\"><i class=\\\"glyphicon glyphicon-user\\\"></i>Account</a></li>\\r\\n                        <li *ngIf=\\\"isAdmin\\\"><a [routerLink]=\\\"['/company']\\\"><i class=\\\"glyphicon glyphicon-home\\\"></i>Company</a></li>\\r\\n                        <li *ngIf=\\\"isAdmin\\\"><a [routerLink]=\\\"['/account']\\\"><i class=\\\"glyphicon glyphicon-user\\\"></i>Accounts</a></li>\\r\\n                        <li><a [routerLink]=\\\"['/store']\\\"><i class=\\\"glyphicon glyphicon-inbox\\\"></i>Stores</a></li>\\r\\n                        <li><a [routerLink]=\\\"['/device']\\\"><i class=\\\"glyphicon glyphicon-phone\\\"></i>Devices</a></li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li><a style=\\\"cursor: pointer\\\" (click)=\\\"logoutClick()\\\"><i class=\\\"glyphicon glyphicon-log-out\\\"></i>Exit&nbsp;</a></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/navigation.component.html\n// module id = ../../../../../src/app/shared/navigation.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { SessionService } from './../services/session.service';\n\n@Component({\n    selector: 'navigation',\n    templateUrl: 'navigation.component.html'\n})\n\nexport class NavigationComponent {\n\n    constructor(private sessionService: SessionService) {\n    }\n\n    get isAuthenticated(): boolean {\n        return this.sessionService.isAuthenticated;\n    }\n\n    get isAdmin(): boolean {\n        return this.sessionService.isAdmin;\n    }\n\n    logoutClick() {\n        this.sessionService.logout();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/navigation.component.ts","module.exports = \"<p-dataTable *ngIf=\\\"isOpen\\\" [responsive]=\\\"true\\\" [value]=\\\"products | priceFilter:sliderValue | categoryFilter:categoryValue\\\" \\n    selectionMode=\\\"multiple\\\" [(selection)]=\\\"selected\\\"\\n    [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinks]=\\\"5\\\" #dt>\\n    <p-header>\\n        <div class=\\\"ui-helper-clearfix\\\" style=\\\"text-align: left\\\">\\n            <span style=\\\"font-size:20px;display:inline-block;margin-top:3px\\\"><b>Product picker</b></span>\\n            <button pButton type=\\\"button\\\" label=\\\"Close\\\" (click)=\\\"hidePickerClick()\\\" style=\\\"float: right\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-close\\\"></button>\\n        </div>\\n    </p-header>\\n    <p-footer>\\n        <button pButton type=\\\"button\\\" label=\\\"Pickup\\\" (click)=\\\"pickerClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-reply-all\\\"></button>\\n    </p-footer>\\n    <p-column [style]=\\\"{'width':'50px'}\\\" selectionMode=\\\"multiple\\\"></p-column>\\n    <p-column field=\\\"productCode\\\" header=\\\"Code\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n    <p-column field=\\\"productName\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\n    <p-column field=\\\"brand.brandName\\\" header=\\\"Brand\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"equals\\\" [style]=\\\"{'overflow':'visible'}\\\" >\\n        <ng-template pTemplate=\\\"filter\\\" let-col>\\n            <p-dropdown [options]=\\\"brands\\\" [filter]=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\" (onChange)=\\\"dt.filter($event.value,col.field,col.filterMatchMode)\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n        </ng-template>\\n    </p-column>     \\n    <p-column header=\\\"Categories\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\" >\\n        <ng-template pTemplate=\\\"filter\\\" let-col>\\n            <p-dropdown [options]=\\\"categories\\\" [filter]=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\" [(ngModel)]=\\\"categoryValue\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n        </ng-template>\\n        <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <li *ngFor=\\\"let item of data.categories\\\"> {{ item.category.categoryName }} </li>\\n        </ng-template>\\n    </p-column>\\n    <p-column header=\\\"Price ({{sliderValue||'No Filter'}})\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\" >\\n        <ng-template pTemplate=\\\"filter\\\" let-col>\\n            <i class=\\\"fa fa-close\\\" (click)=\\\"sliderValue=null;dt.filter(null,col.field,col.filterMatchMode)\\\"></i>\\n            <p-slider [style]=\\\"{'margin-top':'14px','margin-bottom':'5px'}\\\" [(ngModel)]=\\\"sliderValue\\\" [min]=\\\"5\\\" [max]=\\\"1000\\\"></p-slider>\\n        </ng-template>\\n        <ng-template let-col let-data=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <div *ngIf=\\\"data.discount;then discount_content else price_content\\\"></div>\\n            <ng-template #discount_content>\\n                <span class=\\\"percentage\\\">-{{data.discount.discountPercentage}}%</span>\\n                <del>{{data.productSellingPrice | currency: 'EUR' : true}}</del><br><strong>{{data.discount.discountPrice | currency: 'EUR' : true}}</strong>\\n            </ng-template>\\n            <ng-template #price_content>\\n                {{data.productSellingPrice | currency: 'EUR' : true}}\\n            </ng-template>\\n        </ng-template>\\n    </p-column>\\n</p-dataTable>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/product-picker.component.html\n// module id = ../../../../../src/app/shared/product-picker.component.html\n// module chunks = main","import { Component, Input, EventEmitter, ViewChild } from '@angular/core';\nimport { DataTable, SelectItem, MenuItem } from 'primeng/primeng';\nimport { Product, ProductCategory } from './models';\nimport { Helpers } from './helpers';\nimport { ProductService } from './../services/product.service';\n\n@Component({\n    selector: 'product-picker',\n    templateUrl: 'product-picker.component.html',\n    outputs: ['onPicked']\n})\n\nexport class ProductPickerComponent {\n    @ViewChild('dt') datatable: DataTable;\n    totalRecords = 0;\n    products: Product[];\n    selected: Product[];\n    categories: SelectItem[];\n    allbrands: SelectItem[];\n    brands: SelectItem[];\n    categoryValue: string;\n    sliderValue: number;\n    onPicked = new EventEmitter();\n    public isOpen: boolean;\n\n    constructor(private productService: ProductService) {\n        this.isOpen = false;\n    }\n\n    public loadData() {\n        this.isOpen = true;\n        if (!this.products) {\n            this.productService\n                .getProducts()\n                .subscribe(result => {\n                    this.products = result;\n                    this.totalRecords = this.products.length;\n                    this.buildFilter(result);\n                }, onerror => alert(onerror._body)\n            );\n        }\n    }\n\n    hidePickerClick() {\n        this.isOpen = false;\n    }\n\n    pickerClick() {\n        let data: string[] = [];\n        this.selected.forEach(e => data.push(e.productCode));\n        this.onPicked.emit(data);\n        this.isOpen = false;\n    }\n\n    buildFilter(items: Product[]) {\n        this.brands = [];\n        this.brands.push({label: 'All', value: null});\n        let filterBrands = Helpers.distinct(items.map((item: Product) => Helpers.newSelectItem(item.brand.brandName)));\n        this.brands = this.brands.concat(filterBrands);\n\n        this.categories = [];\n        this.categories.push({label: 'All', value: null});\n        let array = items.map((p: Product) => p.categories.map((c: ProductCategory) => c.category.categoryName)).join(',');\n        let filterCategories = Helpers.distinct(array.split(',').map((item: string) => Helpers.newSelectItem(item)));\n        this.categories = this.categories.concat(filterCategories);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/shared/product-picker.component.ts","module.exports = \"<p-confirmDialog header=\\\"Confirmation delete on cascade\\\" icon=\\\"fa-trash-o\\\" [responsive]=\\\"true\\\"></p-confirmDialog>\\n<img *ngIf=\\\"!stores\\\" src=\\\"/assets/loading.gif\\\" class=\\\"loading\\\">\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <p-toolbar>\\n        <div class=\\\"ui-toolbar-group-left\\\">\\n            <button pButton type=\\\"button\\\" label=\\\"{{totalRecords}} items\\\" title=\\\"Add item\\\" (click)=\\\"addClick()\\\" class=\\\"ui-button-primary\\\" icon=\\\"fa-plus\\\"></button>\\n        </div>\\n        <div class=\\\"ui-toolbar-group-right\\\">\\n            <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n            <input #gb type=\\\"text\\\" pInputText placeholder=\\\"Search\\\" style=\\\"width: 180px\\\">\\n        </div>\\n    </p-toolbar>\\n\\n    <p-dataTable *ngIf=\\\"!displayPanel\\\" [responsive]=\\\"true\\\" [value]=\\\"stores\\\"\\n        selectionMode=\\\"single\\\" [(selection)]=\\\"selected\\\" (onRowSelect)=\\\"onRowSelect($event)\\\"\\n        [paginator]=\\\"true\\\" [rows]=\\\"15\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinks]=\\\"5\\\"\\n        [globalFilter]=\\\"gb\\\" #dt>\\n        <p-column field=\\\"storeId\\\" header=\\\"Id\\\" [style]=\\\"{'width':'100px'}\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"storeName\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"storeCity\\\" header=\\\"City\\\" [sortable]=\\\"true\\\"></p-column>\\n        <p-column field=\\\"storeCountry\\\" header=\\\"Country\\\" [sortable]=\\\"true\\\"></p-column>\\n    </p-dataTable>\\n\\n    <p-panel *ngIf=\\\"displayPanel\\\">\\n        <p-header>\\n            <div class=\\\"ui-helper-clearfix\\\">\\n                <span class=\\\"ui-panel-title\\\" style=\\\"font-size:20px;display:inline-block;margin-top:6px\\\"><b>Store</b></span>\\n                <button pButton type=\\\"button\\\" label=\\\"Close\\\" (click)=\\\"closeClick()\\\" style=\\\"float: right\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-close\\\"></button>\\n            </div>\\n        </p-header>\\n        <form [formGroup]=\\\"dataform\\\">\\n            <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label>Id</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">{{selected.storeId}}</div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"name\\\">Name</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"name\\\" [(ngModel)]=\\\"selected.storeName\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['name'].valid&&dataform.controls['name'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Name is required\\n                        </div>\\n                </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"address\\\">Address</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"address\\\" [(ngModel)]=\\\"selected.storeAddress\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['address'].valid&&dataform.controls['address'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Address is required\\n                        </div>\\n                </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"city\\\">City</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"city\\\" [(ngModel)]=\\\"selected.storeCity\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['city'].valid&&dataform.controls['city'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> City is required\\n                        </div>\\n                </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"zip\\\">Zip</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"zip\\\" [(ngModel)]=\\\"selected.storeZip\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['zip'].valid&&dataform.controls['zip'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i>\\n                            <span *ngIf=\\\"dataform.controls['zip'].errors['required']\\\">Zip is required</span>\\n                            <span *ngIf=\\\"dataform.controls['zip'].errors['minlength']\\\">Must be equals than 5 characters</span>\\n                            <span *ngIf=\\\"dataform.controls['zip'].errors['maxlength']\\\">Must be equals than 5 characters</span>\\n                        </div>\\n                </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\"><label for=\\\"country\\\">Country</label></div>\\n                    <div class=\\\"ui-grid-col-8\\\">\\n                        <input pInputText formControlName=\\\"country\\\" [(ngModel)]=\\\"selected.storeCountry\\\"/>\\n                        <div class=\\\"ui-message ui-messages-error ui-corner-all\\\" *ngIf=\\\"!dataform.controls['country'].valid&&dataform.controls['country'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i> Country is required\\n                        </div>\\n                </div>\\n                </div>\\n                <div class=\\\"ui-grid-row\\\">\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button *ngIf=\\\"selected.storeId>0\\\" type=\\\"button\\\" pButton icon=\\\"fa-trash-o\\\" class=\\\"ui-button-secondary\\\" (click)=\\\"deleteClick()\\\" label=\\\"Delete\\\"></button>\\n                    </div>\\n                    <div class=\\\"ui-grid-col-4\\\"></div>\\n                    <div class=\\\"ui-grid-col-4\\\">\\n                        <button type=\\\"button\\\" pButton icon=\\\"fa-save\\\" (click)=\\\"saveClick()\\\" label=\\\"Save\\\" [disabled]=\\\"!dataform.valid\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </p-panel>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/store/store.component.html\n// module id = ../../../../../src/app/store/store.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { ConfirmationService } from 'primeng/primeng';\nimport { SessionService } from './../services/session.service';\nimport { StoreService } from './../services/store.service';\nimport { Store } from './../shared/models';\nimport { Helpers } from './../shared/helpers';\n\n@Component({\n    selector: 'store-component',\n    templateUrl: 'store.component.html'\n})\n\nexport class StoreComponent implements OnInit {\n    totalRecords = 0;\n    stores: Store[];\n    selected: Store;\n    displayPanel: boolean;\n    dataform: FormGroup;\n\n    constructor(private sessionService: SessionService,\n                private storeService: StoreService,\n                private confirmationService: ConfirmationService,\n                private fb: FormBuilder) {\n        sessionService.title = 'Stores';\n    }\n\n    ngOnInit() {\n        this.sessionService.checkCredentials(false);\n\n        this.dataform = this.fb.group({\n            'name': new FormControl('', Validators.required),\n            'address': new FormControl('', Validators.nullValidator),\n            'city': new FormControl('', Validators.nullValidator),\n            'zip': new FormControl('', [Validators.nullValidator, Validators.minLength(5), Validators.maxLength(5)]),\n            'country': new FormControl('', Validators.nullValidator)\n        });\n\n        this.storeService\n            .getAll()\n            .subscribe(result => {\n                this.stores = result;\n                this.totalRecords = this.stores.length;\n            }, onerror => alert(onerror._body)\n        );\n    }\n\n    get isNew(): boolean { return this.selected == null || this.selected.storeId === 0; }\n\n    get selectedIndex(): number { return this.stores.indexOf(this.selected); }\n\n    addClick() {\n        this.selected = new Store();\n        this.displayPanel = true;\n    }\n\n    onRowSelect(event: any) {\n        this.displayPanel = true;\n    }\n\n    closeClick() {\n        this.displayPanel = false;\n        this.selected = null;\n    }\n\n    saveClick() {\n        if (this.isNew) {\n            this.storeService\n                .create(this.selected)\n                .subscribe(result => {\n                    this.stores.push(result);\n                    this.totalRecords++;\n                    this.closeClick();\n                }, onerror => alert(onerror._body));\n        } else {\n            this.storeService\n                .update(this.selected.storeId, this.selected)\n                .subscribe(result => {\n                    this.closeClick();\n                }, onerror => alert(onerror._body));\n        }\n    }\n\n    deleteClick() {\n        this.confirmationService.confirm({\n            message: 'All related articles stocks will be deleted. Are you sure that you want to delete this store?',\n            accept: () => {\n                this.storeService\n                    .delete(this.selected.storeId)\n                    .subscribe(result => {\n                        this.stores.splice(this.selectedIndex, 1);\n                        this.totalRecords--;\n                        this.closeClick();\n                    }, onerror => alert(onerror._body));\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/app/store/store.component.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\n\nimport { AppModule } from './app/app.module';\n\nif (process.env.ENV === 'production') {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/gerardo/Projects/github.com/Webretail/AdminUI/src/main.ts"],"sourceRoot":"webpack:///"}